<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Data Science | ChloEvan</title>
    <link>https://chloevan.github.io/</link>
    <description>Recent content on Data Science | ChloEvan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 15 Mar 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://chloevan.github.io/rss.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>머신러닝 데이터 전처리 1 - 결측치 처리</title>
      <link>https://chloevan.github.io/python/python_edu/04_machinelearning/chapter_4_1_handling_missing_values/</link>
      <pubDate>Wed, 08 Jul 2020 18:00:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/04_machinelearning/chapter_4_1_handling_missing_values/</guid>
      <description>개요  EDA를 진행할 때, 결측치가 있는 데이터를 시각화 하여 결측치 유무를 파악하였다.  참조: EDA with Housing Price Prediction - Handling Missing Values   이번 포스트에서는 결측치를 처리하는 코드를 작성할 것이다.  I. 구글 드라이브 연동  구글 코랩을 시작하면 언제든지 가장 먼저 해야 하는 것은 드라이브 연동이다.  from google.colab import drive # 패키지 불러오기  from os.path import join ROOT = &amp;#34;/content/drive&amp;#34; # 드라이브 기본 경로 print(ROOT) # print content of ROOT (Optional) drive.</description>
    </item>
    
    <item>
      <title>Github Project 포트폴리오</title>
      <link>https://chloevan.github.io/settings/github_settings/</link>
      <pubDate>Tue, 07 Jul 2020 13:11:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/settings/github_settings/</guid>
      <description>개요  본 포스트는 깃허브 프로젝트 관리에 관한 것이다.  I. 프로필 작성하기  이력서에 준하는 프로필 또는 유니크한 것을 살리는 것이 좋다. 깔끔한 정장을 입고, 이쁘게 화장을 하고, 면접을 보러가듯이 인사담당자가 보는 이로 하여금 좋은 인상을 심어줘야 한다. 성명, 이메일, 전화번호 등은 가급적 자세하게 기록해두는 것이 좋다. 프로젝트는 현재 진행중인 Pinned Repositories 상위 3~4개 정도 올려 놓는 것이 좋다.   만약에 현재 기여하는 오픈 소스 리퍼지토리가 있다면 반드시 메인 화면에 고정시킨다.</description>
    </item>
    
    <item>
      <title>데이콘 대회 참여 - 09 스태킹 알고리즘</title>
      <link>https://chloevan.github.io/python/dacon/jeju2020/09_stacking_algorithm/</link>
      <pubDate>Mon, 06 Jul 2020 17:01:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/dacon/jeju2020/09_stacking_algorithm/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
사전작업  먼저 구글 코랩 내에서 pandas_profiling을 확인하기 위해 master.zip을 설치한다.  ref. https://github.com/pandas-profiling/pandas-profiling   설치가 끝나면 구글코랩에서 런타임 다시 시작 한다.  !pip install https://github.com/pandas-profiling/pandas-profiling/archive/master.zip Collecting https://github.com/pandas-profiling/pandas-profiling/archive/master.zip Using cached https://github.com/pandas-profiling/pandas-profiling/archive/master.zip . . . Successfully built pandas-profiling  I. 빅쿼리 연동  지난 시간에 데이콘에서 내려받은 데이터를 빅쿼리에 넣는 작업을 진행하였다.</description>
    </item>
    
    <item>
      <title>데이콘 대회 참여 - 08 세개의 모델</title>
      <link>https://chloevan.github.io/python/dacon/jeju2020/08_gbm_xgboost_lightgbm/</link>
      <pubDate>Mon, 06 Jul 2020 16:01:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/dacon/jeju2020/08_gbm_xgboost_lightgbm/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
사전작업  먼저 구글 코랩 내에서 pandas_profiling을 확인하기 위해 master.zip을 설치한다.  ref. https://github.com/pandas-profiling/pandas-profiling   설치가 끝나면 구글코랩에서 런타임 다시 시작 한다.  !pip install https://github.com/pandas-profiling/pandas-profiling/archive/master.zip Collecting https://github.com/pandas-profiling/pandas-profiling/archive/master.zip Using cached https://github.com/pandas-profiling/pandas-profiling/archive/master.zip . . . Successfully built pandas-profiling  I. 빅쿼리 연동  지난 시간에 데이콘에서 내려받은 데이터를 빅쿼리에 넣는 작업을 진행하였다.</description>
    </item>
    
    <item>
      <title>Pandas Data Handling 1편</title>
      <link>https://chloevan.github.io/python/python_edu/02_datatransformation/pandas_data_handling_1/</link>
      <pubDate>Sun, 05 Jul 2020 16:00:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/02_datatransformation/pandas_data_handling_1/</guid>
      <description>I. Kaggle에서 타이타닉 데이터 가져오기  캐글 데이터 가져오는 예제는 본 Kaggle with Google Colab에서 참고하기를 바란다. 먼저 kaggle 패키지를 설치한다.  !pip install kaggle Requirement already satisfied: kaggle in /usr/local/lib/python3.6/dist-packages (1.5.6) Requirement already satisfied: urllib3&amp;lt;1.25,&amp;gt;=1.21.1 in /usr/local/lib/python3.6/dist-packages (from kaggle) (1.24.3) Requirement already satisfied: six&amp;gt;=1.10 in /usr/local/lib/python3.6/dist-packages (from kaggle) (1.12.0) Requirement already satisfied: python-dateutil in /usr/local/lib/python3.6/dist-packages (from kaggle) (2.8.1) Requirement already satisfied: tqdm in /usr/local/lib/python3.6/dist-packages (from kaggle) (4.41.1) Requirement already satisfied: python-slugify in /usr/local/lib/python3.</description>
    </item>
    
    <item>
      <title>ch 08 - SmartPLS 소프트웨어 소개</title>
      <link>https://chloevan.github.io/r/thesis/ch_08_smart_pls/</link>
      <pubDate>Thu, 02 Jul 2020 20:30:00 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/thesis/ch_08_smart_pls/</guid>
      <description>I. SmartPLS 설치  SmartPLS는 구조방정식모델링을 위한 전용 통계분석 프로그램으로 다양한 학문 분야에서 광범위하게 사용됨. 편이성, 친숙성, 안정성 면에서 매우 우수함. 매우 적은 소표본에서도 활용할 수 있음. 정규분포 등의 엄격한 가정 조건에 구애받지 않고 사용할 수 있음. 프로그램 설치는 아래 링크를 클릭한다.  Download latest version - SmartPLS 3.3.2   학생용 버전은 평생 무료이며, 약간의 사용상 제약이 존재한다.  II. SmartPLS 관련 자료   교제 추천
 원서 - A Primer on Partial Least Squares Structural Equation Modeling(PLS-SEM) (2013) 번역서 - PLS 구조모델의 이해 (2014) 국내저서 - 석박사학위 및 학술논문 작성 중심의 SmartPLS 3.</description>
    </item>
    
    <item>
      <title>데이콘 대회 참여 - 07 두개의 모델</title>
      <link>https://chloevan.github.io/python/dacon/jeju2020/07_gbm_xgboost/</link>
      <pubDate>Thu, 02 Jul 2020 09:01:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/dacon/jeju2020/07_gbm_xgboost/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
사전작업  먼저 구글 코랩 내에서 pandas_profiling을 확인하기 위해 master.zip을 설치한다.  ref. https://github.com/pandas-profiling/pandas-profiling   설치가 끝나면 구글코랩에서 런타임 다시 시작 한다.  !pip install https://github.com/pandas-profiling/pandas-profiling/archive/master.zip Collecting https://github.com/pandas-profiling/pandas-profiling/archive/master.zip Using cached https://github.com/pandas-profiling/pandas-profiling/archive/master.zip . . . Successfully built pandas-profiling  I. 빅쿼리 연동  지난 시간에 데이콘에서 내려받은 데이터를 빅쿼리에 넣는 작업을 진행하였다.</description>
    </item>
    
    <item>
      <title>데이콘 대회 참여 - 06 교차검증과 파라미터 튜닝</title>
      <link>https://chloevan.github.io/python/dacon/jeju2020/06_gbm_cross_val_and_parameter/</link>
      <pubDate>Wed, 01 Jul 2020 18:01:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/dacon/jeju2020/06_gbm_cross_val_and_parameter/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
사전작업  먼저 구글 코랩 내에서 pandas_profiling을 확인하기 위해 master.zip을 설치한다.  ref. https://github.com/pandas-profiling/pandas-profiling   설치가 끝나면 구글코랩에서 런타임 다시 시작 한다.  !pip install https://github.com/pandas-profiling/pandas-profiling/archive/master.zip Collecting https://github.com/pandas-profiling/pandas-profiling/archive/master.zip Using cached https://github.com/pandas-profiling/pandas-profiling/archive/master.zip . . . Successfully built pandas-profiling  I. 빅쿼리 연동  지난 시간에 데이콘에서 내려받은 데이터를 빅쿼리에 넣는 작업을 진행하였다.</description>
    </item>
    
    <item>
      <title>ch 07 - 데이터 검토</title>
      <link>https://chloevan.github.io/r/thesis/ch_07_review_data/</link>
      <pubDate>Wed, 01 Jul 2020 09:30:00 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/thesis/ch_07_review_data/</guid>
      <description>개요  수집된 데이터에 대해 정규성 검증을 하는 것은 중요하다. 그런데, CB-SEM과 PLS-SEM의 기준 조건은 조금 상이하다.  정규성 분포 확인  Kolmogorov-Smirnov Test 또는 Shapiro-Wilk Test를 통해서 검증한다.  귀무가설: 데이터분포를 정규분포를 이룬다, p-value &amp;gt; 0.05   데이터가 치우쳐 있는 정도를 나타내는 왜도(skewness: S)와 첨도(Kurtosis: K)를 검토한다.  첨도와 왜도가 -1보다 작거나 또는 +1 보다 크지 않으면 변수는 정규분포를 하고 있다고 판단한다.   그러나, 이 부분은 분석 방법에 대해 조금 상이하다.</description>
    </item>
    
    <item>
      <title>데이콘 대회 참여 - 05 GBM 파라미터 튜닝</title>
      <link>https://chloevan.github.io/python/dacon/jeju2020/05_gbm_parameter/</link>
      <pubDate>Tue, 30 Jun 2020 18:01:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/dacon/jeju2020/05_gbm_parameter/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
사전작업  먼저 구글 코랩 내에서 pandas_profiling을 확인하기 위해 master.zip을 설치한다.  ref. https://github.com/pandas-profiling/pandas-profiling   설치가 끝나면 구글코랩에서 런타임 다시 시작 한다.  !pip install https://github.com/pandas-profiling/pandas-profiling/archive/master.zip Collecting https://github.com/pandas-profiling/pandas-profiling/archive/master.zip Using cached https://github.com/pandas-profiling/pandas-profiling/archive/master.zip . . . Successfully built pandas-profiling  I. 빅쿼리 연동  지난 시간에 데이콘에서 내려받은 데이터를 빅쿼리에 넣는 작업을 진행하였다.</description>
    </item>
    
    <item>
      <title>데이콘 대회 참여 - 04 데이터셋 분리</title>
      <link>https://chloevan.github.io/python/dacon/jeju2020/04_data_split_gbm/</link>
      <pubDate>Tue, 30 Jun 2020 16:01:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/dacon/jeju2020/04_data_split_gbm/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
사전작업  먼저 구글 코랩 내에서 pandas_profiling을 확인하기 위해 master.zip을 설치한다.  ref. https://github.com/pandas-profiling/pandas-profiling   설치가 끝나면 구글코랩에서 런타임 다시 시작 한다.  !pip install https://github.com/pandas-profiling/pandas-profiling/archive/master.zip Collecting https://github.com/pandas-profiling/pandas-profiling/archive/master.zip Using cached https://github.com/pandas-profiling/pandas-profiling/archive/master.zip . . . Successfully built pandas-profiling  I. 빅쿼리 연동  지난 시간에 데이콘에서 내려받은 데이터를 빅쿼리에 넣는 작업을 진행하였다.</description>
    </item>
    
    <item>
      <title>ch 06 - 표본의 크기</title>
      <link>https://chloevan.github.io/r/thesis/ch_06_sample_size/</link>
      <pubDate>Tue, 30 Jun 2020 12:00:00 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/thesis/ch_06_sample_size/</guid>
      <description>개요   PLS-SEM은 작은 표본 크기에 의해 식별 문제가 발생하지 않으며 모델이 복잡하고 표본크기가 작은 상황에서도 높은 수준의 통게적 검증력을 가짐
  일반적으로 CB-SEM의 경우 표본 크기가 200개 이상이 필요한 것으로 알려짐
  반대로 PLS-SEM은 30-100개 정도의 소표본인 경우에도 적용할 수 있다.
 표본크기를 증가시키면 모델 추정의 정확성이 높아지나 표본이 250개 이상이 넘어가면 CB-SEM과 차이점이 없어진다.    최소 표본 크기 Chin(1988)과 Barclay, Higgins &amp;amp; Thompson(1995)는 최소표본크기 결정에 있어서 10배수 규칙(10 times rule)을 제안함.</description>
    </item>
    
    <item>
      <title>데이콘 대회 참여 - 03 데이터 샘플링과 종속변수 로그변환</title>
      <link>https://chloevan.github.io/python/dacon/jeju2020/03_log_transformation_gbm/</link>
      <pubDate>Mon, 29 Jun 2020 23:01:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/dacon/jeju2020/03_log_transformation_gbm/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
사전작업  먼저 구글 코랩 내에서 pandas_profiling을 확인하기 위해 master.zip을 설치한다.  ref. https://github.com/pandas-profiling/pandas-profiling   설치가 끝나면 구글코랩에서 런타임 다시 시작 한다.  !pip install https://github.com/pandas-profiling/pandas-profiling/archive/master.zip Collecting https://github.com/pandas-profiling/pandas-profiling/archive/master.zip Using cached https://github.com/pandas-profiling/pandas-profiling/archive/master.zip . . . Successfully built pandas-profiling  I. 빅쿼리 연동  지난 시간에 데이콘에서 내려받은 데이터를 빅쿼리에 넣는 작업을 진행하였다.</description>
    </item>
    
    <item>
      <title>ch 05 - 측정척도의 유형과 내용</title>
      <link>https://chloevan.github.io/r/thesis/ch_05_measurement_scale/</link>
      <pubDate>Mon, 29 Jun 2020 12:00:00 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/thesis/ch_05_measurement_scale/</guid>
      <description>개요  데이터의 유형에는 크게 4가지가 있다.  명목척도, 서열척도, 등간척도, 비율척도   그중에서 PLS-SEM 분석 시에 필요한 척도는 등간척도와 비율척도이다.  간혹, 범주형 변수의 경우 더미변수(Dummy Variable)로 변환하여 투입하기도 한다.    데이터의 유형 (1) 명목척도  범주형 데이터로 측정된 측정대상으로 단순히 범주로 분류하기 위한 목적으로 숫자를 부여한 척도  예시: 성별, 종교, 직업, 혈액형, 만족여부(예/아니오)    (2) 서열척도  범주형 데이터로 명목척도의 기능뿐 아니라 각 범주 간의 대소관계, 순위(서열성)에 관하여 숫자를 부여한 척도(수학적 가감승제 계산 안 됨)  예시: 학력, 건강상태 등    (3) 등간척도  연속형 데이터로 절대적 영점(Absolute Zero)이 없으며 대상이 갖는 양적인 정도의 차이에 따라 등간격으로 숫자를 부여한 척도(수학적 가감승제 계산 가능)  예시: 온도, 만족도(리커트척도), 충성도(리커트척도), 물가지수, 생산지수 등    (4) 비율척도  연속형 데이터로 절대적 영점이 존재하며, 비율계산이 가능한 숫자를 부여한 척도(수학적 가감승제 계산 가능)  매출액, 무게, 가격, 소득, 길이, 부피 등    통계기법의 선택  변수의 성격에 따라 다른 통계기법이 선택될 수 있다.</description>
    </item>
    
    <item>
      <title>ch 04 - 반영적 지표와 형성적 지표</title>
      <link>https://chloevan.github.io/r/thesis/ch_04_reflective_and_formative_indicator/</link>
      <pubDate>Mon, 29 Jun 2020 11:00:00 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/thesis/ch_04_reflective_and_formative_indicator/</guid>
      <description>개요  인과방향에 따라 지표를 반영적 지표(reflective indicator) 형성적 지표(formative indicator)로 구분한다. -반영적 지표는 잠재변수가 원인이 되고 측정변수들이 결과가 되는 지표로 잠재변수가 측정변수를 야기하는 것으로 가정함 형성적 지표는 측정변수가 원인이 되고 잠재변수가 결과가 되는 지표로 측정변수가 잠재변수를 야기하는 것으로 가정함. 화살표의 방향은 측정변수에서 잠재변수로 표시됨.  I. 반영적 지표와 형성적 지표 (1) 인과관계(화살표)의 방향  반영적 지표: 잠재변수 $\rightarrow$ 측정변수(지표들) 형성적 지표: 측정변수(지표들) $\rightarrow$  (2) 측정변수(지표)간 상관   반영적 지표: 설문지법 적용 시, 각 설문문항은 유사한 것들로 구성되어 있어야 함</description>
    </item>
    
    <item>
      <title>Python for loop example</title>
      <link>https://chloevan.github.io/python/python_edu/01_basic/chapter_3_5_for_loop_example/</link>
      <pubDate>Mon, 29 Jun 2020 10:10:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/01_basic/chapter_3_5_for_loop_example/</guid>
      <description>I. 개요  지난 시간에 for_loop의 기본적인 개념에 대해 살펴봤다.  참조: [Python] for loops in different ways   이번 시간에는 for_loop의 실제 다양한 활용 방안에 대해 살펴본다.  II. 데이터 시각화  변수의 개수에 상관없이 for-loop를 활용하면 무한대로 시각화를 작성할 수 있다. 빠르게 코드로 확인해본다. IRIS 데이터를 수집하는 코드를 작성한다.  import numpy as np import pandas as pd import matplotlib.pyplot as plt import seaborn as sns from sklearn import datasets iris = datasets.</description>
    </item>
    
    <item>
      <title>데이콘 대회 참여 - 02 GBM을 활용한 머신러닝 예제</title>
      <link>https://chloevan.github.io/python/dacon/jeju2020/02_review_gbm/</link>
      <pubDate>Sun, 28 Jun 2020 18:01:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/dacon/jeju2020/02_review_gbm/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
개요  본 예제에서는 제주 빅데이터 경진대회에서 제공하는 베이스라인 코드를 살려서 작성하였다. 처음 대회를 입문하는 데 있어서, 빠르게 제출하는 것에 의미부여를 하기 바란다.  참조: https://dacon.io/competitions/official/235615/codeshare/1228   다만, 데이터를 불러오는 영역 및 머신러닝 모형 알고리즘만 조금 수정하였다. 향후 매일 업데이트 하면서 일종의 가이드라인이 되었으면 좋겠다.</description>
    </item>
    
    <item>
      <title>ch 03 - PLS-SEM 주요 개념</title>
      <link>https://chloevan.github.io/r/thesis/ch_03_main_concepts/</link>
      <pubDate>Sun, 28 Jun 2020 13:10:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/thesis/ch_03_main_concepts/</guid>
      <description>개요  PLS-SEM의 주요 개념 및 유사용어에 대해 살펴본다. 영어로 논문을 써야하기 때문에, 한국어와 영어를 같이 표기했다.  주요개념  잠재변수(Latent Variable): 직접 측정되지 않는 비관측변수(Unobserved Variable)로 측정변수를 통해 간접적으로 측정.  잠재변인, 구인, 구성개념(construct), 차원(dimension), 요인, 이론변수라고도 하며 경로도에는 circle로 표시됨   측정변수(Measured Variable): 직접 측정되는 관측변수(Observed Variable)로 잠재변수를 측정하기 위해 사용된 변수를 말함. (설문문항이 여기에 해당됨  지표변수(Indicator Variable), 명시변수(Manifest Variable), 측정항목(Items)로 표기되며 직사각형 또는 정사각형으로 표시함   외생변수(Exogenous Variable): 독립변수의 개념으로 다른 변수의 변화에 원인(Causes)이나 동기의 역할을 하는 변수로 경로도에서 화살표가 시작이 되는 모든 변수 말함  잠재변수 개념과 결합되면 외생잠재변수(Exogenous Latent Variable)가 됨   내생변수(Endogenous Variable): 종속변수의 개념으로 다른 변수에 의해 영향을 받는 변수이며 화살표를 받는 변수를 말함.</description>
    </item>
    
    <item>
      <title>Python for loops in different ways</title>
      <link>https://chloevan.github.io/python/python_edu/01_basic/chapter_3_4_for_loop/</link>
      <pubDate>Sat, 27 Jun 2020 18:42:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/01_basic/chapter_3_4_for_loop/</guid>
      <description>I. 개요  여러 형태의 반복문을 배우고 실습한다. 한줄로 작성하는 반복문을 배우고 실습한다.  II. For Loop Basic Syntax  파이썬의 기본 문법은 아래와 같다.  for &amp;lt;변수&amp;gt; in &amp;lt;iterable&amp;gt;: &amp;lt;코드&amp;gt;  여기에서 iterable의 개념은 list와 tuple을 의미한다. 간단하게 for_loop 코드를 작성해보자.  우선, A라는 리스트 객체를 작성한다. for_loop를 활용해서 리스트 안에 있는 것을 하나씩 출력한다.    A = [&amp;#34;철수&amp;#34;, &amp;#34;영희&amp;#34;, &amp;#34;길동&amp;#34;] for i in A: print(i) 철수 영희 길동 (1) Iterables  Iteration을 한국어로 번역하면 되풀이다.</description>
    </item>
    
    <item>
      <title>ch 02 - 구조방정식의 기본 개념과 고려사항</title>
      <link>https://chloevan.github.io/r/thesis/ch_02_sem_concept_considerations/</link>
      <pubDate>Fri, 26 Jun 2020 17:10:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/thesis/ch_02_sem_concept_considerations/</guid>
      <description>개요  기본적으로 다변량 분석 1세대 분석 방법론  군집분석, EFA, 분산분석, 다항회귀, 로지스틱 회귀분석   2세대 분석 방법론  PLS-SEM and CB-SEM   간단한 용어 정리  SEM - Structural Equation Modeling CB - Covariance Based SEM PLS - Partial Least Squares SEM (= PLS path Modeling)   CB-SEM의 주 목적은 실증적으로 검증 가능한 다중 변수들 간의 체계적 관계 확인 PLS-SEM은 주로 탐험적 연구에서의 이론발전에 주로 사용되며, 종속변수의 분산을 설명하는데 주 초점을 맞준다.</description>
    </item>
    
    <item>
      <title>If else, and more</title>
      <link>https://chloevan.github.io/python/python_edu/01_basic/chapter_3_3_if_else/</link>
      <pubDate>Thu, 25 Jun 2020 21:42:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/01_basic/chapter_3_3_if_else/</guid>
      <description>I. 개요  조건문에 대해 배우고 실습하는 시간을 갖는다. else와 elif에 대해 배우고 실습한다. 한줄로 작성하는 if_else에 대해 배우고 실습한다.  II. If 조건문 소개  Excel을 배운 사람이라면 누구나 아는 문법이다.  다만, 위 문법을 파이썬 언어에 맞게 변형한 것이다.    if &amp;lt;조건=True&amp;gt;: &amp;lt;코드1&amp;gt; &amp;lt;코드2&amp;gt; (1) 언제 실행되는가?   위 구문의 뜻이 무엇인가?
 프로그래밍 처음 입문하는 사람이라면, 조금 난해할 수 있다. 그러나, 절대 어렵지 않다. 조건이 True 이면 &amp;lt;코드1&amp;gt;과 &amp;lt;코드2&amp;gt;를 실행한다.</description>
    </item>
    
    <item>
      <title>ch 01 - PLS SEM Intro</title>
      <link>https://chloevan.github.io/r/thesis/ch_01_intro/</link>
      <pubDate>Wed, 24 Jun 2020 11:10:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/thesis/ch_01_intro/</guid>
      <description>개요  석사 학위 논문을 위해 작성하기 위해 만들었음 PLS SEM 모델링을 위한 R 패키지가 존재함  plspm: 2020년 5월 14일 R Cran에서 정식 패키지에서 내려감  위 패키지는 원서 약 230페이지 되는 교재도 있음 1차로 위 패키지를 고려했으나 5/14일 패키지가 내려간 이후 선택에서 제외시킴     또한, SMART PLS라는 상용프로그램도 존재함   특정 R semPLS와 위 상용 프로그램을 비교한 논문이 있었고, 다행히 두 프로그램의 결과값이 동일한 것으로 증명되었다.</description>
    </item>
    
    <item>
      <title>데이콘 대회 참여 - 01 제주시 빅데이터 카드 매출 경진대회 데이터 수집 및 저장</title>
      <link>https://chloevan.github.io/python/dacon/jeju2020/01_dataimport/</link>
      <pubDate>Tue, 23 Jun 2020 23:10:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/dacon/jeju2020/01_dataimport/</guid>
      <description>I. 개요  본 과정은 직업훈련기관 수업의 일환으로 진행하였음 수강생들이 기본적으로 어려워하는 클라우드 DB연동부터 구현하여 빠르게 EDA를 활용할 수 있도록 진행함 DB는 BigQuery를 활용함.  (1) 대회 참여 및 파일 다운로드 상세  데이콘은 국내 빅데이터 경진대회이다.  (2) 대회 개요 Ref. https://dacon.io/competitions/official/235615/overview/
  주제
 AI 알고리즘 활용 카드 사용 금액 예측    목표
 신용카드 사용 내역 데이터를 활용한 지역별, 업종별 월간 카드 사용 총액 예측    배경</description>
    </item>
    
    <item>
      <title>추천 시스템 개요 및 이론, Surprise Package</title>
      <link>https://chloevan.github.io/python/recommendation/recommendation_02/</link>
      <pubDate>Mon, 22 Jun 2020 22:10:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/recommendation/recommendation_02/</guid>
      <description>I. 개요  대고객 대상으로 한 대부분의 플랫폼 서비스 업체들은 고객 개개인에게 맞춤형의 추천 서비스를 도입하고 있음  전자상거래 업체, 유투브, 애플 뮤직 등   ML의 여러 알고리즘 중 비즈니스 관점에 부합하는 기법이 추천 시스템. 추천 시스템의 진정한 묘미는 사용자 본인도 모르는 취향 발견, 재구매로 연결하도록 설계 누가 필요할까?  모든 플랫폼 서비스 이유1: 플랫폼은 다수의 판매자와 소비자를 필요로 함, 문제는 카테고리와 메뉴구성이 복잡해지면 소비자의 제품 선택에 부작용 이유2: 만족도가 떨어지면 고객은 그 플랫폼을 떠날 가능성이 크며, 이는 플랫폼 서비스의 매출 하락과 직결 모든 플랫폼 서비스는 기본적으로 추천서비스를 장착하고 싶어함   영화 데이터를 기준으로 추천시스템을 단계별로 구현함을 목표로 함  II.</description>
    </item>
    
    <item>
      <title>추천 시스템 패키지 소개 - recommenderlab</title>
      <link>https://chloevan.github.io/r/recommendation/recommendation_intro/</link>
      <pubDate>Mon, 22 Jun 2020 10:38:15 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/recommendation/recommendation_intro/</guid>
      <description>I. 개요   추천시스템을 처음 배우는 접하는 사람들을 위해 준비한 입문 Tutorial이다.
  패키지 소개서에 있는 내용을 한글로 번역하였다.
  This R package provides an infrastructure to test and develop recommender algorithms. The package supports rating (e.g., 1-5 stars) and unary (0-1) data sets. Supported algorithms are:
  이 R 패키지는 추천자 알고리즘을 테스트하고 개발할 수 있는 인프라를 제공한다. 이 패키지는 등급(예: 별 1-5개) 및 단항(0-1) 데이터 세트를 지원한다.</description>
    </item>
    
    <item>
      <title>추천 시스템 개요 및 이론, Baseline Code</title>
      <link>https://chloevan.github.io/python/recommendation/recommendation_01/</link>
      <pubDate>Sun, 21 Jun 2020 17:10:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/recommendation/recommendation_01/</guid>
      <description>I. 개요  대고객 대상으로 한 대부분의 플랫폼 서비스 업체들은 고객 개개인에게 맞춤형의 추천 서비스를 도입하고 있음  전자상거래 업체, 유투브, 애플 뮤직 등   ML의 여러 알고리즘 중 비즈니스 관점에 부합하는 기법이 추천 시스템. 추천 시스템의 진정한 묘미는 사용자 본인도 모르는 취향 발견, 재구매로 연결하도록 설계 누가 필요할까?  모든 플랫폼 서비스 이유1: 플랫폼은 다수의 판매자와 소비자를 필요로 함, 문제는 카테고리와 메뉴구성이 복잡해지면 소비자의 제품 선택에 부작용 이유2: 만족도가 떨어지면 고객은 그 플랫폼을 떠날 가능성이 크며, 이는 플랫폼 서비스의 매출 하락과 직결 모든 플랫폼 서비스는 기본적으로 추천서비스를 장착하고 싶어함   영화 데이터를 기준으로 추천시스템을 단계별로 구현함을 목표로 함  II.</description>
    </item>
    
    <item>
      <title>About Dictionaries</title>
      <link>https://chloevan.github.io/python/python_edu/01_basic/chapter_3_2_dictionary/</link>
      <pubDate>Sat, 20 Jun 2020 10:42:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/01_basic/chapter_3_2_dictionary/</guid>
      <description>I. 개요  이번 시간부터 본격적으로 파이썬의 기초 자료형에 대해 간단한 튜토리얼을 준비했다. 데이터 분석과는 큰 관계가 없을 수 있지만, 데이터 정제 할 때, 도움이 되기도 한다. 그 중에서 면접의 단골질문과 같은 Dictionary에 대해 나누는 시간을 가졌다.  II. Dictionary의 기본적인 특징  Dictionary는 영어 원뜻 그대로 사전을 생각하면 된다. Dictionary는 List와 유사한 부분이 많다.  List와 같이 Mutable이라는 뜻을 포함한다. List와 같이 다른 Dictionary, list 등을 포함시킬 수 있다.   차이점은 원소에 대한 접근방법의 차이다.</description>
    </item>
    
    <item>
      <title>The difference betwen Lists and Tuples in Python</title>
      <link>https://chloevan.github.io/python/python_edu/01_basic/chapter_3_1_lists_and_tuples/</link>
      <pubDate>Thu, 18 Jun 2020 01:10:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/01_basic/chapter_3_1_lists_and_tuples/</guid>
      <description>I. 개요  이번 시간부터 본격적으로 파이썬의 기초 자료형에 대해 간단한 튜토리얼을 준비했다. 데이터 분석과는 큰 관계가 없을 수 있지만, 데이터 정제 할 때, 도움이 되기도 한다. 그 중에서 면접의 단골질문과 같은 Lists &amp;amp; Tuple에 대해 나누는 시간을 가졌다.  II. Lists  먼저 Lists는 [] 형태로 정의가 된다.  alphabet = [&amp;#39;A&amp;#39;, &amp;#39;B&amp;#39;, &amp;#39;C&amp;#39;, &amp;#39;D&amp;#39;] print(alphabet) [&#39;A&#39;, &#39;B&#39;, &#39;C&#39;, &#39;D&#39;]   코드는 간단하다. 그러나 함의하고 있는 내용은 다음과 같다.</description>
    </item>
    
    <item>
      <title>Google Colab with Kaggle - Beginner</title>
      <link>https://chloevan.github.io/settings/kaggle_with_colab_beginner/</link>
      <pubDate>Wed, 17 Jun 2020 20:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/settings/kaggle_with_colab_beginner/</guid>
      <description>I. 개요  데이터 시각화와 변환에 대해 짧게 익혔다면 바로 실전 데이터를 활용한다. 이론이 조금 부족하게 느껴질 수 있지만, 모든 것을 다 알려드릴 수는 없다.  결국 공부는 스스로 해야 한다.   이 강의의 목적이 Kaggle 데이터를 활용한 Python 포트폴리오 제작 강의임을 잊지 말자.  II. Kaggle KPI 설치  Google Colab에서 Kaggle API를 불러오려면 다음 소스코드를 실행한다.  !pip install kaggle Requirement already satisfied: kaggle in /usr/local/lib/python3.6/dist-packages (1.5.6) Requirement already satisfied: requests in /usr/local/lib/python3.</description>
    </item>
    
    <item>
      <title>EDA with Housing Price Prediction - Handling Outliers</title>
      <link>https://chloevan.github.io/kaggle/chapter_2_11_eda_with_outliers/</link>
      <pubDate>Tue, 16 Jun 2020 10:30:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/kaggle/chapter_2_11_eda_with_outliers/</guid>
      <description>I. 개요  이제 본격적으로 Kaggle 데이터를 활용하여 분석을 진행한다. 데이터는 이미 다운 받은 상태를 전제로 하며, 만약에 데이터가 없다면 이전 포스팅에서 절차를 확인하기 바란다. (미리보기 가능)  캐글 데이터 다운로드 받기 (via Colab)    II. 구글 드라이브 연동  구글 코랩을 시작하면 언제든지 가장 먼저 해야 하는 것은 드라이브 연동이다.  from google.colab import drive # 패키지 불러오기 from os.path import join ROOT = &amp;quot;/content/drive&amp;quot; # 드라이브 기본 경로 print(ROOT) # print content of ROOT (Optional) drive.</description>
    </item>
    
    <item>
      <title>구글 텐서플로우 공인 자격증 취득 방법</title>
      <link>https://chloevan.github.io/gcp/certification/tensorflow_certification/</link>
      <pubDate>Mon, 15 Jun 2020 17:10:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/gcp/certification/tensorflow_certification/</guid>
      <description>I. Python 개발환경 (2020.06.20) 기준  텐서플로 자격증 시험은 PyCharm에서 실행된다. 텐서플로 버전 2.x을 사용하고, (1.x) 사용하지 않는다. 파이썬 버전은 3.7을 사용한다. 만약 현재 다른 버전을 사용한다면, 별도로 선정해야 하는 번거로움이 있다. 추가 확인 사항  우선, 인터넷 환경이 안정적이어야 한다. PyCharm 기반 구성에 대해 익숙해져야 한다.    작성 중&amp;hellip;</description>
    </item>
    
    <item>
      <title>Ch22 Cleaner Null Handling with Coalesce</title>
      <link>https://chloevan.github.io/gcp/bigquery/02_basics/ch22_cleaner_null_handling_with_coalesce/</link>
      <pubDate>Sun, 14 Jun 2020 22:30:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/gcp/bigquery/02_basics/ch22_cleaner_null_handling_with_coalesce/</guid>
      <description>I. 구글 클라우드 설정 본격적인 빅쿼리 실습에 앞서서, Python과 연동하는 예제를 준비하였다. 빅쿼리 시작에 앞서서 선행적으로 클라우드 사용을 해야 한다.
 만약 GCP 프로젝트가 없다면, 계정을 연동한다. Go to Cloud Resource Manager 그리고, 비용결제를 위한 카드를 등록한다. Enable billing 마지막으로 BigQuery API를 사용해야 하기 때문에 빅쿼리 API 사용허가를 내준다.Enable BigQuery  위 API를 이용하지 않으면 Python 또는 R과 연동해서 사용할 수는 없다. 자주 쓰는것이 아니라면 비용은 거의 발생하지 않으니 염려하지 않아도 된다.</description>
    </item>
    
    <item>
      <title>EDA with Housing Price Prediction - Handling Missing Values</title>
      <link>https://chloevan.github.io/kaggle/chapter_2_10_eda_with_missingvalues/</link>
      <pubDate>Sat, 13 Jun 2020 10:30:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/kaggle/chapter_2_10_eda_with_missingvalues/</guid>
      <description>I. 개요  이제 본격적으로 Kaggle 데이터를 활용하여 분석을 진행한다. 데이터는 이미 다운 받은 상태를 전제로 하며, 만약에 데이터가 없다면 이전 포스팅에서 절차를 확인하기 바란다. (미리보기 가능)  캐글 데이터 다운로드 받기 (via Colab)    II. 구글 드라이브 연동  구글 코랩을 시작하면 언제든지 가장 먼저 해야 하는 것은 드라이브 연동이다.  from google.colab import drive # 패키지 불러오기 from os.path import join ROOT = &amp;quot;/content/drive&amp;quot; # 드라이브 기본 경로 print(ROOT) # print content of ROOT (Optional) drive.</description>
    </item>
    
    <item>
      <title>Python 사용자 정의 함수에 대한 이해 2편 - Simple Decorator</title>
      <link>https://chloevan.github.io/python/basic/understanding_function_simpledecorator/</link>
      <pubDate>Fri, 12 Jun 2020 17:20:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/basic/understanding_function_simpledecorator/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
I. 개요  Functions와 Decorators에 관해 나누려고 한다. function는 우리가 생각하는 그 함수가 맞다. decorator도 함수인데, 일종의 확장 개념으로 생각하면 좋다. 지난 시간에 Python 사용자 정의 함수에 대한 이해 1편 - Inner Function를 통해 함수의 기본적인 작동 원리에 대해 배웠다.  II.</description>
    </item>
    
    <item>
      <title>EDA with Housing Price Prediction - Handling Categorical Variables</title>
      <link>https://chloevan.github.io/kaggle/chapter_2_9_eda_with_categorical_features/</link>
      <pubDate>Fri, 12 Jun 2020 10:30:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/kaggle/chapter_2_9_eda_with_categorical_features/</guid>
      <description>I. 개요  이제 본격적으로 Kaggle 데이터를 활용하여 분석을 진행한다. 데이터는 이미 다운 받은 상태를 전제로 하며, 만약에 데이터가 없다면 이전 포스팅에서 절차를 확인하기 바란다. (미리보기 가능)  캐글 데이터 다운로드 받기 (via Colab)    II. 구글 드라이브 연동  구글 코랩을 시작하면 언제든지 가장 먼저 해야 하는 것은 드라이브 연동이다.  from google.colab import drive # 패키지 불러오기 from os.path import join ROOT = &amp;quot;/content/drive&amp;quot; # 드라이브 기본 경로 print(ROOT) # print content of ROOT (Optional) drive.</description>
    </item>
    
    <item>
      <title>EDA with Housing Price Prediction - Handling Continuous Variables</title>
      <link>https://chloevan.github.io/kaggle/chapter_2_8_eda_with_continous_features/</link>
      <pubDate>Thu, 11 Jun 2020 10:30:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/kaggle/chapter_2_8_eda_with_continous_features/</guid>
      <description>I. 개요  이제 본격적으로 Kaggle 데이터를 활용하여 분석을 진행한다. 데이터는 이미 다운 받은 상태를 전제로 하며, 만약에 데이터가 없다면 이전 포스팅에서 절차를 확인하기 바란다. (미리보기 가능)  캐글 데이터 다운로드 받기 (via Colab)    II. 구글 드라이브 연동  구글 코랩을 시작하면 언제든지 가장 먼저 해야 하는 것은 드라이브 연동이다.  from google.colab import drive # 패키지 불러오기 from os.path import join ROOT = &amp;quot;/content/drive&amp;quot; # 드라이브 기본 경로 print(ROOT) # print content of ROOT (Optional) drive.</description>
    </item>
    
    <item>
      <title>Python 사용자 정의 함수에 대한 이해 1편 - Inner Function</title>
      <link>https://chloevan.github.io/python/basic/understanding_function_innerfunction/</link>
      <pubDate>Wed, 10 Jun 2020 01:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/basic/understanding_function_innerfunction/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
I. 개요  Functions와 Decorators에 관해 나누려고 한다. function는 우리가 생각하는 그 함수가 맞다. decorator도 함수인데, 일종의 확장 개념으로 생각하면 좋다.  II. Simple Tutorial  먼저 간단한 함수를 만들자.  def add_one(number): return number + 1 add_one(2) 3   일반적으로 파이썬의 함수들은 단지 입출력에 대한 단순한 내용 보다는 side effects 또한 함의하고 있다.</description>
    </item>
    
    <item>
      <title>EDA with Housing Price Prediction - Handling Discrete Variables</title>
      <link>https://chloevan.github.io/kaggle/chapter_2_7_eda_with_discrete_features/</link>
      <pubDate>Tue, 09 Jun 2020 22:30:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/kaggle/chapter_2_7_eda_with_discrete_features/</guid>
      <description>I. 개요  이제 본격적으로 Kaggle 데이터를 활용하여 분석을 진행한다. 데이터는 이미 다운 받은 상태를 전제로 하며, 만약에 데이터가 없다면 이전 포스팅에서 절차를 확인하기 바란다. (미리보기 가능)  캐글 데이터 다운로드 받기 (via Colab)    II. 구글 드라이브 연동  구글 코랩을 시작하면 언제든지 가장 먼저 해야 하는 것은 드라이브 연동이다.  from google.colab import drive # 패키지 불러오기 from os.path import join ROOT = &amp;quot;/content/drive&amp;quot; # 드라이브 기본 경로 print(ROOT) # print content of ROOT (Optional) drive.</description>
    </item>
    
    <item>
      <title>(AWS Project) BigData with Hadoop 05 - Hive Script 연습 예제</title>
      <link>https://chloevan.github.io/aws/02_bigdataplatform/step_5_run_hive_script/</link>
      <pubDate>Mon, 08 Jun 2020 15:13:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/aws/02_bigdataplatform/step_5_run_hive_script/</guid>
      <description>I. Getting Started  처음 이 페이지를 방문했다면, 반드시 사전작업을 완료하기를 바란다.  (AWS Project) BigData with Hadoop 02 - 사전작업 (AWS Project) BigData with Hadoop 03 - Amazon EMR Cluster 시작 (AWS Project) BigData with Hadoop 04 - Allow SSH Access    II. What to do now  Hive Script를 제출하는 방법에 대해 준비하였다. 를러스터를 생성할 때 단계를 지정하거나 마스터 노드에 연결하고 로컬 파일 시스템에서 스크립트를 생성하고 명렁어를 사용하여 실행할 수 있다.</description>
    </item>
    
    <item>
      <title>EDA with Housing Price Prediction - Handling Date</title>
      <link>https://chloevan.github.io/kaggle/chapter_2_5_eda_with_date/</link>
      <pubDate>Mon, 08 Jun 2020 11:30:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/kaggle/chapter_2_5_eda_with_date/</guid>
      <description>I. 개요  이제 본격적으로 Kaggle 데이터를 활용하여 분석을 진행한다. 데이터는 이미 다운 받은 상태를 전제로 하며, 만약에 데이터가 없다면 이전 포스팅에서 절차를 확인하기 바란다. (미리보기 가능)  캐글 데이터 다운로드 받기 (via Colab)    II. 구글 드라이브 연동  구글 코랩을 시작하면 언제든지 가장 먼저 해야 하는 것은 드라이브 연동이다.  from google.colab import drive # 패키지 불러오기  from os.path import join ROOT = &amp;#34;/content/drive&amp;#34; # 드라이브 기본 경로 print(ROOT) # print content of ROOT (Optional) drive.</description>
    </item>
    
    <item>
      <title>EDA with Housing Price Prediction - Data Import</title>
      <link>https://chloevan.github.io/kaggle/chapter_2_4_eda_data_import/</link>
      <pubDate>Sun, 07 Jun 2020 18:30:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/kaggle/chapter_2_4_eda_data_import/</guid>
      <description>I. 개요  이제 본격적으로 Kaggle 데이터를 활용하여 분석을 진행한다. 데이터는 이미 다운 받은 상태를 전제로 하며, 만약에 데이터가 없다면 이전 포스팅에서 절차를 확인하기 바란다. (미리보기 가능)  캐글 데이터 다운로드 받기 (via Colab)    II. 구글 드라이브 연동  구글 코랩을 시작하면 언제든지 가장 먼저 해야 하는 것은 드라이브 연동이다.  from google.colab import drive # 패키지 불러오기 from os.path import join ROOT = &amp;quot;/content/drive&amp;quot; # 드라이브 기본 경로 print(ROOT) # print content of ROOT (Optional) drive.</description>
    </item>
    
    <item>
      <title>캐글 데이터 다운로드 받기 (via Colab)</title>
      <link>https://chloevan.github.io/kaggle/colab_with_drive/</link>
      <pubDate>Sun, 07 Jun 2020 16:30:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/kaggle/colab_with_drive/</guid>
      <description>I. 개요  데이터 시각화와 변환에 대해 짧게 익혔다면 바로 실전 데이터를 활용한다. 이론이 조금 부족하게 느껴질 수 있지만, 모든 것을 다 알려드릴 수는 없다.  결국 공부는 스스로 해야 한다.   이 강의의 목적이 Kaggle 데이터를 활용한 Python 포트폴리오 제작 강의임을 잊지 말자. 이번 시간에는 Kaggle 데이터를 구글 드라이브로 다운로드 받는 방법에 대해 작성하였다.  II. Kaggle KPI 설치  Google Colab에서 Kaggle API를 불러오려면 다음 소스코드를 실행한다.  !</description>
    </item>
    
    <item>
      <title>(AWS Project) BigData with Hadoop 04 - Allow SSH Access</title>
      <link>https://chloevan.github.io/aws/02_bigdataplatform/step_4_allow_ssh_access/</link>
      <pubDate>Sat, 06 Jun 2020 20:13:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/aws/02_bigdataplatform/step_4_allow_ssh_access/</guid>
      <description>I. Getting Started  처음 이 페이지를 방문했다면, 반드시 사전작업을 완료하기를 바란다.  (AWS Project) BigData with Hadoop 02 - 사전작업 (AWS Project) BigData with Hadoop 03 - Amazon EMR Cluster 시작    II. What to do now  Client에서 SSH를 통해 클러스터에 접근하는 방법에 대해 다룬다.  (1) Warning  보안 그룹은 클러스터에 대한 인바운드 및 아웃바운드 트래픽을 제어하는 가상 방화벽 역할을 한다. 첫 번째 클러스터를 생성하면 Amazon EMR은 마스터 인스턴스, ElasticMapReduce-master와 연결된 기본 Amazon EMR 관리 Security Group 및 핵심 노드 및 태스크 노드와 연결된 Security Group ElasticMapReduce-slave를 생성한다.</description>
    </item>
    
    <item>
      <title>Chapter 1.6 Google Colab with Kaggle</title>
      <link>https://chloevan.github.io/python/python_edu/01_basic/chapter_1_6_colab_with_kaggle/</link>
      <pubDate>Sat, 06 Jun 2020 10:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/01_basic/chapter_1_6_colab_with_kaggle/</guid>
      <description>I. 개요  데이터 시각화와 변환에 대해 짧게 익혔다면 바로 실전 데이터를 활용한다. 이론이 조금 부족하게 느껴질 수 있지만, 모든 것을 다 알려드릴 수는 없다.  결국 공부는 스스로 해야 한다.   이 강의의 목적이 Kaggle 데이터를 활용한 Python 포트폴리오 제작 강의임을 잊지 말자.  II. Kaggle KPI 설치  Google Colab에서 Kaggle API를 불러오려면 다음 소스코드를 실행한다.  !pip install kaggle Requirement already satisfied: kaggle in /usr/local/lib/python3.6/dist-packages (1.5.6) Requirement already satisfied: python-slugify in /usr/local/lib/python3.</description>
    </item>
    
    <item>
      <title>Google Colab with R</title>
      <link>https://chloevan.github.io/r/r_settings/settings_colab_with_r/</link>
      <pubDate>Fri, 05 Jun 2020 17:20:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/r_settings/settings_colab_with_r/</guid>
      <description>I. 들어가며  빅데이터 시대에 맞춰서 다양한 툴이 나오는 가운데, Google Colab은 가히 혁명적이라 할 수 있다. 과거 높은 사양의 컴퓨터에서만 수행할 수 있었던 머신러닝과 딥러닝을 구글 코랩의 환경에서 무료로 배울 수 있는 기회를 구글이 제공하기 시작했다. 간단하게 아래 소스코드를 실행하여 CPU와 GPU의 연산속도를 비교 해보자.  GPU를 사용한 TensorFlow    II. Google Colab with R  Google Colab은 매우 편리하다. 실제 강의를 시작하면서 파이썬 관련 모든 강의안은 Google Colab으로 제작중이다.</description>
    </item>
    
    <item>
      <title>EDA with Pandas - Data Merge</title>
      <link>https://chloevan.github.io/python/python_edu/02_datatransformation/chapter_1_4_python_pandas_merge_solution/</link>
      <pubDate>Fri, 05 Jun 2020 13:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/02_datatransformation/chapter_1_4_python_pandas_merge_solution/</guid>
      <description>I. 개요  실무 데이터에서는 여러가지 데이터를 만나는 경우가 흔하다. 이 때, SQL에서 데이터를 직접 병합하는 방법이 좋다. 그러나, 현실적으로 DB에 접근하는 권한을 가진 경우는 흔하지는 않다. 현재 운영중인 서비스상에 DB를 직접 만지는 경우는 거의 없다 (DBA가 할지도..) 따라서, 데이터분석가는 흩어져 있는 데이터 Dump를 받게 될 가능성이 큰데, 이 때 Python에서 데이터를 병합하는 작업을 진행하게 된다. Kaggle이나 각종 경진대회에 출전하게 되면 서로 다른 데이터를 합쳐야 하는 경우가 매우 많다.  II.</description>
    </item>
    
    <item>
      <title>EDA with Personal Email - Data Import</title>
      <link>https://chloevan.github.io/python/python_edu/05_miniproject/02_eda_with_personal_email_dataimport/</link>
      <pubDate>Thu, 04 Jun 2020 16:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/05_miniproject/02_eda_with_personal_email_dataimport/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
I. Matplotlib &amp;amp; Seaborn (1) 기본 개요 Matplotlib는 파이썬 표준 시각화 도구라고 불리워지며 파이썬 그래프의 기본 토대가 된다고 해도 무방하다. 객체지향 프로그래밍을 지원하므로 세세하게 꾸밀 수 있다.
Seaborn 그래는 파이썬 시각화 도구의 고급 버전이다. Matplotlib에 비해 비교적 단순한 인터페이스를 제공하기 때문에 초보자도 어렵지 않게 배울 수 있다.</description>
    </item>
    
    <item>
      <title>Chapter_1_2_Python_visualisation_seaborn</title>
      <link>https://chloevan.github.io/python/python_edu/01_basic/step1_visualisation/chapter_1_2_python_visualisation_seaborn/</link>
      <pubDate>Thu, 04 Jun 2020 10:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/01_basic/step1_visualisation/chapter_1_2_python_visualisation_seaborn/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
I. Matplotlib &amp;amp; Seaborn (1) 기본 개요 Matplotlib는 파이썬 표준 시각화 도구라고 불리워지며 파이썬 그래프의 기본 토대가 된다고 해도 무방하다. 객체지향 프로그래밍을 지원하므로 세세하게 꾸밀 수 있다.
Seaborn 그래는 파이썬 시각화 도구의 고급 버전이다. Matplotlib에 비해 비교적 단순한 인터페이스를 제공하기 때문에 초보자도 어렵지 않게 배울 수 있다.</description>
    </item>
    
    <item>
      <title>(AWS Project) BigData with Hadoop 03 - Amazon EMR Cluster 시작</title>
      <link>https://chloevan.github.io/aws/02_bigdataplatform/step_3_launch_emr_cluster/</link>
      <pubDate>Wed, 03 Jun 2020 17:13:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/aws/02_bigdataplatform/step_3_launch_emr_cluster/</guid>
      <description>I. Getting Started  처음 이 페이지를 방문했다면, 반드시 사전작업을 완료하기를 바란다.  (AWS Project) BigData with Hadoop 02 - 사전작업    II. What to do now  이번 포스트에서는 비교적 간단하게 빅데이터 클러스터를 시작하는 과정을 진행한다. 막상 해보면 어려운 것은 아니지만, 언제나 그렇듯이 처음 할 때는 늘 시행착오를 겪게 마련이다. Amazon EMR console창에 있는 Quick Options을 사용한다. Quick Options에 있는 다양한 절차들에 대해 확인이 필요하면 Summary of Quick Options에서 확인해본다.</description>
    </item>
    
    <item>
      <title>Chapter_1_1_Python_visualisation_intro</title>
      <link>https://chloevan.github.io/python/python_edu/01_basic/step1_visualisation/chapter_1_1_python_visualisation_intro/</link>
      <pubDate>Wed, 03 Jun 2020 16:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/01_basic/step1_visualisation/chapter_1_1_python_visualisation_intro/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
I. Matplotlib (1) 기본 개요 Matplotlib는 파이썬 표준 시각화 도구라고 불리워지며 파이썬 그래프의 기본 토대가 된다고 해도 무방하다. 객체지향 프로그래밍을 지원하므로 세세하게 꾸밀 수 있다.
Seaborn 그래는 파이썬 시각화 도구의 고급 버전이다. Matplotlib에 비해 비교적 단순한 인터페이스를 제공하기 때문에 초보자도 어렵지 않게 배울 수 있다.</description>
    </item>
    
    <item>
      <title>(AWS Project) BigData with Hadoop 02 - 사전작업</title>
      <link>https://chloevan.github.io/aws/02_bigdataplatform/step_2_setup/</link>
      <pubDate>Tue, 02 Jun 2020 16:13:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/aws/02_bigdataplatform/step_2_setup/</guid>
      <description>I. Amazon S3 Bucket 생성 주요 요건  Hive 쿼리의 출력 데이터를 저장할 Amazon S3 버킷과 폴더를 지정한다. 자습서에서는 default log location을 사용하지만, 원하는 경우에는 custom location을 지정할 수 있다. 하둡의 요구사항 중, bucket과 folder names 다음과 같은 규칙을 적용한다.  letters, numbers, periods(.), and hyphens(-) 등을 입력한다. 마지막 글자는 숫자로 끝맺음을 하지 않는다.   이러한 요구 사항을 충족하는 폴더에 이미 액세스할 수 있는 경우 이 튜토리얼에 해당 폴더를 사용하십시오.</description>
    </item>
    
    <item>
      <title>(AWS Project) BigData with Hadoop 01 - Overview</title>
      <link>https://chloevan.github.io/aws/02_bigdataplatform/step_1_overview/</link>
      <pubDate>Tue, 02 Jun 2020 10:13:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/aws/02_bigdataplatform/step_1_overview/</guid>
      <description>I. Overview  Amazon EMR은 Apache 하둡과 Spark를 쉽고 빠르며 비용 효율적으로 실행하여 대량의 데이터를 처리할 수 있게 해주는 관리형 서비스입니다. Amazon EMR은 Presto, Hive, Pig, HBase 등과 같은 강력하고 입증된 하둡 도구를 지원한다. 이 프로젝트에서는 모든 기능이 작동하는 하둡 클러스터를 배포하여 몇 분 만에 로그 데이터를 분석할 준비를 갖추게 된다. 먼저 Amazon EMR 클러스터를 시작한 다음, HiveQL 스크립트를 사용하여 Amazon S3 버킷에 저장된 샘플 로그 데이터를 처리한다. HiveQL은 데이터 웨어하우징과 분석을 위한 SQL 유사 스크립트 언어이다.</description>
    </item>
    
    <item>
      <title>EDA with Python - Pandas</title>
      <link>https://chloevan.github.io/python/python_edu/01_basic/chapter_1_3_eda_with_pandas/</link>
      <pubDate>Mon, 01 Jun 2020 18:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/01_basic/chapter_1_3_eda_with_pandas/</guid>
      <description>I. 개요  Pandas는 panel data의 의미를 가지고 있다. 흔히, 엑셀 데이터로 불리우는 관계형(Relational) 또는 레이블링된(Labeling)된 데이터를 보다 쉽게, 직관적으로 작업할 수 있도록 설계되어 있다. Python에서 데이터 분석을 수행하기 위한 매우 기초적이며 높은 수준의 문법을 제공한다. Pandas는 크게 Series &amp;amp; DataFrame을 다룰 수 있도록 기초 문법을 제공하고 있다. Pandas가 다루는 여러 종류의 데이터를 확인해보자.  SQL 테이블 또는 Excel 스프레드시트에서와 같이 형식의 행과 열이 있는 표 형식 데이터 순서 및 순서 지정되지 않은(고정 빈도일 필요는 없음) 시계열 데이터.</description>
    </item>
    
    <item>
      <title>EDA with Python - NumPy Broadcasting</title>
      <link>https://chloevan.github.io/python/python_edu/01_basic/chapter_1_2_eda_with_numpy_broadcasting/</link>
      <pubDate>Mon, 01 Jun 2020 13:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/01_basic/chapter_1_2_eda_with_numpy_broadcasting/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
I. 개요  NumPy는 C언어로 구성되었으며, 고성능의 수치계산을 위해 나온 패키지이며, Numerical Python의 약자이다. Python을 활용한 데이터 분석을 수행할 때, 그리고 데이터 시각화나 전처리를 수행할 때, NumPy는 매우 자주 사용되기 때문에 한번쯤은 꼭 다듬고 가는 것이 중요하다. 이전 포스트에서는 Python - NumPy 소개 및 다양한 객체 생성에 대해 다루었으니, 본 포스트 읽기에 앞서서 기본적인 개념에 대해 확인하기를 바란다.</description>
    </item>
    
    <item>
      <title>AWS - 회원가입 및 주요 서비스 간략 소개</title>
      <link>https://chloevan.github.io/aws/01_settings/register/</link>
      <pubDate>Sun, 31 May 2020 17:13:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/aws/01_settings/register/</guid>
      <description>I. Overview  클라우드 서비스로써, AWS는 모든 IT 개발자에게 필수 Skill set과 같다. 데이터 분석가, 싸이언티스트에게도 AWS는 반드시 알아야 할 서비스이다. 매우 유명한 서비스이기에 자세한 내용은 다루지 않는다. 다만, 데이터 분석가라면 알아두어야 할 필수 서비스만 간단히 다루도록 할 예정이다. 간단하게 회원가입을 진행하도록 하자.  II. Registration  Step 1. 웹사이트 접속 및 계정 생성  웹사이트: https://aws.amazon.com/ko/ 우측 상단의 [AWS 계정 생성]을 클릭한다.   Step 2. [계정 생성] 페이지에서 이메일 주소, 암호, AWS 계정 이름을 입력하고 [계속] 버튼을 클릭한다.</description>
    </item>
    
    <item>
      <title>EDA with Python - NumPy basic</title>
      <link>https://chloevan.github.io/python/python_edu/01_basic/chapter_1_1_eda_with_numpy_basic/</link>
      <pubDate>Sun, 31 May 2020 13:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/01_basic/chapter_1_1_eda_with_numpy_basic/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
I. 개요  파이썬 처음 입문하는 사람들을 위해서 작성하였다. 탐색작 자료분석(EDA: Exploratory Data Analysis)을 위해 가장 기초적인 뼈대가 되는 NumPy에 대해서 학습하도록 합니다.  II. Array 만들기  1차원, 2차원, 3차원의 Array를 만들고 학습니다. 먼저 numpy 라이브러리를 불러옵니다.  # import numpy import numpy as np print(np.</description>
    </item>
    
    <item>
      <title>EDA with Personal Email - Overview</title>
      <link>https://chloevan.github.io/python/python_edu/05_miniproject/01_eda_with_personal_email_overview/</link>
      <pubDate>Sun, 31 May 2020 11:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/05_miniproject/01_eda_with_personal_email_overview/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
I. Matplotlib &amp;amp; Seaborn (1) 기본 개요 Matplotlib는 파이썬 표준 시각화 도구라고 불리워지며 파이썬 그래프의 기본 토대가 된다고 해도 무방하다. 객체지향 프로그래밍을 지원하므로 세세하게 꾸밀 수 있다.
Seaborn 그래는 파이썬 시각화 도구의 고급 버전이다. Matplotlib에 비해 비교적 단순한 인터페이스를 제공하기 때문에 초보자도 어렵지 않게 배울 수 있다.</description>
    </item>
    
    <item>
      <title>Google Colab Intro</title>
      <link>https://chloevan.github.io/python/python_edu/00_settings/chapter_0_1_google_colab/</link>
      <pubDate>Sat, 30 May 2020 21:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/00_settings/chapter_0_1_google_colab/</guid>
      <description>I. 들어가며  빅데이터 시대에 맞춰서 다양한 툴이 나오는 가운데, Google Colab은 가히 혁명적이라 할 수 있다. 과거 높은 사양의 컴퓨터에서만 수행할 수 있었던 머신러닝과 딥러닝을 구글 코랩의 환경에서 무료로 배울 수 있는 기회를 구글이 제공하기 시작했다. 간단하게 아래 소스코드를 실행하여 CPU와 GPU의 연산속도를 비교 해보자.  GPU를 사용한 TensorFlow    II. Data Transformation 예제  이제 간단하게 데이터 가공의 예를 실습해보자.  (1) 딕셔너리에서 시리즈로 변환하기  다음의 소스코드를 실행하여 딕셔너리에서 시리즈로 변환하는 것을 실습해보자.</description>
    </item>
    
    <item>
      <title>Data Transformation - Merging Data</title>
      <link>https://chloevan.github.io/python/python_edu/02_datatransformation/01_data_transformation_merging_data/</link>
      <pubDate>Fri, 29 May 2020 14:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/02_datatransformation/01_data_transformation_merging_data/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
 데이터는 코로나 데이터를 활용했다.  I. Data Transform Overview   데이터 변환은 데이터를 하나의 형식이나 구조에서 다른 형식이나 구조로 변환하는 데 사용되는 기법이다.
 Data deduplication 데이터 중복 제거에는 중복된 데이터 식별 및 제거가 포함된다. Key restructuring 의미가 내장된 모든 키를 일반 키로 변환하는 것을 포함한다.</description>
    </item>
    
    <item>
      <title>Ch21 Conditional Expressions</title>
      <link>https://chloevan.github.io/gcp/bigquery/02_basics/ch21_conditional_expressions/</link>
      <pubDate>Thu, 28 May 2020 12:30:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/gcp/bigquery/02_basics/ch21_conditional_expressions/</guid>
      <description>I. 구글 클라우드 설정 본격적인 빅쿼리 실습에 앞서서, Python과 연동하는 예제를 준비하였다. 빅쿼리 시작에 앞서서 선행적으로 클라우드 사용을 해야 한다.
 만약 GCP 프로젝트가 없다면, 계정을 연동한다. Go to Cloud Resource Manager 그리고, 비용결제를 위한 카드를 등록한다. Enable billing 마지막으로 BigQuery API를 사용해야 하기 때문에 빅쿼리 API 사용허가를 내준다.Enable BigQuery  위 API를 이용하지 않으면 Python 또는 R과 연동해서 사용할 수는 없다. 자주 쓰는것이 아니라면 비용은 거의 발생하지 않으니 염려하지 않아도 된다.</description>
    </item>
    
    <item>
      <title>Ch20 Logical Operations</title>
      <link>https://chloevan.github.io/gcp/bigquery/02_basics/ch20_logical_operations/</link>
      <pubDate>Wed, 27 May 2020 20:30:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/gcp/bigquery/02_basics/ch20_logical_operations/</guid>
      <description>I. 구글 클라우드 설정 본격적인 빅쿼리 실습에 앞서서, Python과 연동하는 예제를 준비하였다. 빅쿼리 시작에 앞서서 선행적으로 클라우드 사용을 해야 한다.
 만약 GCP 프로젝트가 없다면, 계정을 연동한다. Go to Cloud Resource Manager 그리고, 비용결제를 위한 카드를 등록한다. Enable billing 마지막으로 BigQuery API를 사용해야 하기 때문에 빅쿼리 API 사용허가를 내준다.Enable BigQuery  위 API를 이용하지 않으면 Python 또는 R과 연동해서 사용할 수는 없다. 자주 쓰는것이 아니라면 비용은 거의 발생하지 않으니 염려하지 않아도 된다.</description>
    </item>
    
    <item>
      <title>Ch19 Comparisons Decimal Calculations</title>
      <link>https://chloevan.github.io/gcp/bigquery/02_basics/ch19_comparisons_decimal_calculations/</link>
      <pubDate>Tue, 26 May 2020 18:30:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/gcp/bigquery/02_basics/ch19_comparisons_decimal_calculations/</guid>
      <description>I. 구글 클라우드 설정 본격적인 빅쿼리 실습에 앞서서, Python과 연동하는 예제를 준비하였다. 빅쿼리 시작에 앞서서 선행적으로 클라우드 사용을 해야 한다.
 만약 GCP 프로젝트가 없다면, 계정을 연동한다. Go to Cloud Resource Manager 그리고, 비용결제를 위한 카드를 등록한다. Enable billing 마지막으로 BigQuery API를 사용해야 하기 때문에 빅쿼리 API 사용허가를 내준다.Enable BigQuery  위 API를 이용하지 않으면 Python 또는 R과 연동해서 사용할 수는 없다. 자주 쓰는것이 아니라면 비용은 거의 발생하지 않으니 염려하지 않아도 된다.</description>
    </item>
    
    <item>
      <title>matplotlib - 09 lollipop</title>
      <link>https://chloevan.github.io/python/matplotlib/matplotlib_09_lollipop_chart/</link>
      <pubDate>Tue, 26 May 2020 11:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/matplotlib/matplotlib_09_lollipop_chart/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
I. Matplotlib &amp;amp; Seaborn (1) 기본 개요 Matplotlib는 파이썬 표준 시각화 도구라고 불리워지며 파이썬 그래프의 기본 토대가 된다고 해도 무방하다. 객체지향 프로그래밍을 지원하므로 세세하게 꾸밀 수 있다.
Seaborn 그래는 파이썬 시각화 도구의 고급 버전이다. Matplotlib에 비해 비교적 단순한 인터페이스를 제공하기 때문에 초보자도 어렵지 않게 배울 수 있다.</description>
    </item>
    
    <item>
      <title>Ch18 Mathematical Functions</title>
      <link>https://chloevan.github.io/gcp/bigquery/02_basics/ch18_mathematical_functions/</link>
      <pubDate>Mon, 25 May 2020 07:30:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/gcp/bigquery/02_basics/ch18_mathematical_functions/</guid>
      <description>I. 구글 클라우드 설정 본격적인 빅쿼리 실습에 앞서서, Python과 연동하는 예제를 준비하였다. 빅쿼리 시작에 앞서서 선행적으로 클라우드 사용을 해야 한다.
 만약 GCP 프로젝트가 없다면, 계정을 연동한다. Go to Cloud Resource Manager 그리고, 비용결제를 위한 카드를 등록한다. Enable billing 마지막으로 BigQuery API를 사용해야 하기 때문에 빅쿼리 API 사용허가를 내준다.Enable BigQuery  위 API를 이용하지 않으면 Python 또는 R과 연동해서 사용할 수는 없다. 자주 쓰는것이 아니라면 비용은 거의 발생하지 않으니 염려하지 않아도 된다.</description>
    </item>
    
    <item>
      <title>Kakao Arena 3 EDA on Google Colab</title>
      <link>https://chloevan.github.io/settings/kakao_arena_3_eda/</link>
      <pubDate>Sun, 24 May 2020 13:11:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/settings/kakao_arena_3_eda/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
이전 포스트인 Colab + Drive + Github Workflow 실전 테스트용으로 생각하면서 읽어주기를 바란다.
I. 개요  프로젝트 폴더 내에서 간단하게 EDA를 실습하는 시간을 갖도록 한다. 관련 패키지는 우선 다른 곳에서 설치 되었다는 것을 가정한다.  참고: Python Package Settings on Google Colab   본 포스트의 핵심은 환경설정이 Google Colab + Drive내에서 작업하는 것이다.</description>
    </item>
    
    <item>
      <title>Colab &#43; Drive &#43; Github Workflow</title>
      <link>https://chloevan.github.io/settings/colab_drive_github_settings/</link>
      <pubDate>Sun, 24 May 2020 11:11:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/settings/colab_drive_github_settings/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
I. 동기 부여 및 개요   Google Colab을 알게 된 이후에, 모든 파일을 가급적 여기에서 작성을 한다.
  Why?
 첫째, GPU를 무료로 사용할 수 있다. 둘째, 맥북에어의 저용량을 쓰는 나에게 있어, 시스템 파일 등을 Local로 내려받는데 버거움이 있다. 셋째, 온라인 강의 및 책을 협업해서 써야 하는데, 각 Local 환경을 구축하는 번거로움을 없애고 싶었다.</description>
    </item>
    
    <item>
      <title>Python Package Settings on Google Colab</title>
      <link>https://chloevan.github.io/settings/colab_package_settings/</link>
      <pubDate>Sat, 23 May 2020 21:01:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/settings/colab_package_settings/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
I. 개요  교육상, 최근 kaggle 및 국내 경진 대회에 참여할 일이 생겼다. 실습을 해보니, 매번 패키지와 파일을 다운로드 받는 것이 많이 불편했다.  파일을 열 때마다, !pip install name_of_package을 실행해야 하는 번거로움이 있다.   이러한 해결책으로 파이썬 패키지를 Google Colab에 영구적(Permantly)으로 설치하는 것을 실습한다.</description>
    </item>
    
    <item>
      <title>Ch17 Types of Functions</title>
      <link>https://chloevan.github.io/gcp/bigquery/02_basics/ch17_types_of_functions/</link>
      <pubDate>Fri, 22 May 2020 17:30:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/gcp/bigquery/02_basics/ch17_types_of_functions/</guid>
      <description>I. 구글 클라우드 설정 본격적인 빅쿼리 실습에 앞서서, Python과 연동하는 예제를 준비하였다. 빅쿼리 시작에 앞서서 선행적으로 클라우드 사용을 해야 한다.
 만약 GCP 프로젝트가 없다면, 계정을 연동한다. Go to Cloud Resource Manager 그리고, 비용결제를 위한 카드를 등록한다. Enable billing 마지막으로 BigQuery API를 사용해야 하기 때문에 빅쿼리 API 사용허가를 내준다.Enable BigQuery  위 API를 이용하지 않으면 Python 또는 R과 연동해서 사용할 수는 없다. 자주 쓰는것이 아니라면 비용은 거의 발생하지 않으니 염려하지 않아도 된다.</description>
    </item>
    
    <item>
      <title>competition - M5 EDA</title>
      <link>https://chloevan.github.io/kaggle/competition_m5_eda_1/</link>
      <pubDate>Thu, 21 May 2020 17:12:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/kaggle/competition_m5_eda_1/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
I. 개요  Kaggle에서 데이터를 다운로드 하는 방법에 대해서는 생략한다. 본 포스트는 Google Colab을 기반으로 작성하였다. Kaggle + Google Colab 데이터 연동하는 방법은 이전 포스트를 참고한다.  Kaggle with Google Colab     데이터는 크게 4가지로 구성되어 있다. (원문 인용)  calendar.</description>
    </item>
    
    <item>
      <title>Ch16 Data Types - Numeric types</title>
      <link>https://chloevan.github.io/gcp/bigquery/02_basics/ch16_data_types_numeric_types/</link>
      <pubDate>Thu, 21 May 2020 07:30:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/gcp/bigquery/02_basics/ch16_data_types_numeric_types/</guid>
      <description>I. 구글 클라우드 설정 본격적인 빅쿼리 실습에 앞서서, Python과 연동하는 예제를 준비하였다. 빅쿼리 시작에 앞서서 선행적으로 클라우드 사용을 해야 한다.
 만약 GCP 프로젝트가 없다면, 계정을 연동한다. Go to Cloud Resource Manager 그리고, 비용결제를 위한 카드를 등록한다. Enable billing 마지막으로 BigQuery API를 사용해야 하기 때문에 빅쿼리 API 사용허가를 내준다.Enable BigQuery  위 API를 이용하지 않으면 Python 또는 R과 연동해서 사용할 수는 없다. 자주 쓰는것이 아니라면 비용은 거의 발생하지 않으니 염려하지 않아도 된다.</description>
    </item>
    
    <item>
      <title>Kaggle with Google Colab</title>
      <link>https://chloevan.github.io/settings/kaggle_with_colab/</link>
      <pubDate>Wed, 20 May 2020 08:12:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/settings/kaggle_with_colab/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
I. 개요  Kaggle 대회에서 나오는 데이터의 용량은 작은 편은 아니다. 성능이 적은 노트북을 사용해야 하는 경우라면 Google Colab을 사용해야 한다. 이 때, Kaggle 데이터를 Google Colab으로 다운로드 받는 과정에 대해 기술 하려고 한다.  II. 캐글 계정에서 해야 할 것  먼저 본인의 계정에서 API Token을 다운로드 받는다.</description>
    </item>
    
    <item>
      <title>matplotlib - 08 Histogram</title>
      <link>https://chloevan.github.io/python/matplotlib/matplotlib_08_histogram/</link>
      <pubDate>Tue, 19 May 2020 15:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/matplotlib/matplotlib_08_histogram/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
I. Matplotlib &amp;amp; Seaborn (1) 기본 개요 Matplotlib는 파이썬 표준 시각화 도구라고 불리워지며 파이썬 그래프의 기본 토대가 된다고 해도 무방하다. 객체지향 프로그래밍을 지원하므로 세세하게 꾸밀 수 있다.
Seaborn 그래는 파이썬 시각화 도구의 고급 버전이다. Matplotlib에 비해 비교적 단순한 인터페이스를 제공하기 때문에 초보자도 어렵지 않게 배울 수 있다.</description>
    </item>
    
    <item>
      <title>Ch15 Outer Join</title>
      <link>https://chloevan.github.io/gcp/bigquery/02_basics/ch15_outer_join/</link>
      <pubDate>Tue, 19 May 2020 07:30:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/gcp/bigquery/02_basics/ch15_outer_join/</guid>
      <description>I. 구글 클라우드 설정 본격적인 빅쿼리 실습에 앞서서, Python과 연동하는 예제를 준비하였다. 빅쿼리 시작에 앞서서 선행적으로 클라우드 사용을 해야 한다.
 만약 GCP 프로젝트가 없다면, 계정을 연동한다. Go to Cloud Resource Manager 그리고, 비용결제를 위한 카드를 등록한다. Enable billing 마지막으로 BigQuery API를 사용해야 하기 때문에 빅쿼리 API 사용허가를 내준다.Enable BigQuery  위 API를 이용하지 않으면 Python 또는 R과 연동해서 사용할 수는 없다. 자주 쓰는것이 아니라면 비용은 거의 발생하지 않으니 염려하지 않아도 된다.</description>
    </item>
    
    <item>
      <title>R - Select Helper Functions</title>
      <link>https://chloevan.github.io/r/datatransform/dplyr02_select_helper/</link>
      <pubDate>Mon, 18 May 2020 08:20:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/datatransform/dplyr02_select_helper/</guid>
      <description>I. 개요 dplyr 문법에서 select에 대해 다룬다. 보통 select는 열 추출 함수로 소개되고 있다. 그런데, select 함수에는 열 추출을 할 때 도와주는 helper functions가 있는데, 간단하게 소개하고자 한다.
 starts_with ends_with contains matches num_range one_of  작은 도움이 되었기를 바란다.
II. 사전 준비  본격적인 실습에 앞서서, 패키지를 로드 한다.  library(dplyr) library(nycflights13)  flights 데이터셋의 변수들을 확인하자.  glimpse(flights) ## Rows: 336,776 ## Columns: 19 ## $ year &amp;lt;int&amp;gt; 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, … ## $ month &amp;lt;int&amp;gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, … ## $ day &amp;lt;int&amp;gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, … ## $ dep_time &amp;lt;int&amp;gt; 517, 533, 542, 544, 554, 554, 555, 557, 557, 558, 558,… ## $ sched_dep_time &amp;lt;int&amp;gt; 515, 529, 540, 545, 600, 558, 600, 600, 600, 600, 600,… ## $ dep_delay &amp;lt;dbl&amp;gt; 2, 4, 2, -1, -6, -4, -5, -3, -3, -2, -2, -2, -2, -2, -… ## $ arr_time &amp;lt;int&amp;gt; 830, 850, 923, 1004, 812, 740, 913, 709, 838, 753, 849… ## $ sched_arr_time &amp;lt;int&amp;gt; 819, 830, 850, 1022, 837, 728, 854, 723, 846, 745, 851… ## $ arr_delay &amp;lt;dbl&amp;gt; 11, 20, 33, -18, -25, 12, 19, -14, -8, 8, -2, -3, 7, -… ## $ carrier &amp;lt;chr&amp;gt; &amp;#34;UA&amp;#34;, &amp;#34;UA&amp;#34;, &amp;#34;AA&amp;#34;, &amp;#34;B6&amp;#34;, &amp;#34;DL&amp;#34;, &amp;#34;UA&amp;#34;, &amp;#34;B6&amp;#34;, &amp;#34;EV&amp;#34;, &amp;#34;B6&amp;#34;, … ## $ flight &amp;lt;int&amp;gt; 1545, 1714, 1141, 725, 461, 1696, 507, 5708, 79, 301, … ## $ tailnum &amp;lt;chr&amp;gt; &amp;#34;N14228&amp;#34;, &amp;#34;N24211&amp;#34;, &amp;#34;N619AA&amp;#34;, &amp;#34;N804JB&amp;#34;, &amp;#34;N668DN&amp;#34;, &amp;#34;N39… ## $ origin &amp;lt;chr&amp;gt; &amp;#34;EWR&amp;#34;, &amp;#34;LGA&amp;#34;, &amp;#34;JFK&amp;#34;, &amp;#34;JFK&amp;#34;, &amp;#34;LGA&amp;#34;, &amp;#34;EWR&amp;#34;, &amp;#34;EWR&amp;#34;, &amp;#34;LGA&amp;#34;… ## $ dest &amp;lt;chr&amp;gt; &amp;#34;IAH&amp;#34;, &amp;#34;IAH&amp;#34;, &amp;#34;MIA&amp;#34;, &amp;#34;BQN&amp;#34;, &amp;#34;ATL&amp;#34;, &amp;#34;ORD&amp;#34;, &amp;#34;FLL&amp;#34;, &amp;#34;IAD&amp;#34;… ## $ air_time &amp;lt;dbl&amp;gt; 227, 227, 160, 183, 116, 150, 158, 53, 140, 138, 149, … ## $ distance &amp;lt;dbl&amp;gt; 1400, 1416, 1089, 1576, 762, 719, 1065, 229, 944, 733,… ## $ hour &amp;lt;dbl&amp;gt; 5, 5, 5, 5, 6, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5, 6, 6, … ## $ minute &amp;lt;dbl&amp;gt; 15, 29, 40, 45, 0, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 59, … ## $ time_hour &amp;lt;dttm&amp;gt; 2013-01-01 05:00:00, 2013-01-01 05:00:00, 2013-01-01 …  총 19개의 변수들로 구성이 되어 있는 것을 확인 할 수 있다.</description>
    </item>
    
    <item>
      <title>Hugo - 이미지 위치 설정</title>
      <link>https://chloevan.github.io/settings/image_center/</link>
      <pubDate>Sat, 16 May 2020 17:20:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/settings/image_center/</guid>
      <description>I. Problem Hugo에서 이미지를 업로드하면 자동적으로 왼쪽(Left) 정렬이 된다. 기본적으로 마크다운 내에서 html 적용은 되지 않는 문제점이 있다.
 아래는 기본적인 img 업로드 방식이다.  ![](/img/python/basic_syntax/numpy.png)  위 그림처럼 왼쪽으로 치우친 것을 볼 수 있다. 이럴 경우 어떻게 해결해야 할까? 간단하게 해결 방법을 정리하여 공유한다.  II. CSS 파일 찾기  기본적으로 이미지를 핸들링 하는 것은 CSS 파일에서 해결한다. 문제는 어떤 CSS 파일을 열어야 하는지 처음에는 어려울 것이다. 첫째, 대부분 hugo 개발자들이 테마를 사용하기 때문에 테마에서 css 파일을 찾는다.</description>
    </item>
    
    <item>
      <title>Ch14 Cross Join</title>
      <link>https://chloevan.github.io/gcp/bigquery/02_basics/ch14_cross_join/</link>
      <pubDate>Fri, 15 May 2020 17:30:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/gcp/bigquery/02_basics/ch14_cross_join/</guid>
      <description>I. 구글 클라우드 설정 본격적인 빅쿼리 실습에 앞서서, Python과 연동하는 예제를 준비하였다. 빅쿼리 시작에 앞서서 선행적으로 클라우드 사용을 해야 한다.
 만약 GCP 프로젝트가 없다면, 계정을 연동한다. Go to Cloud Resource Manager 그리고, 비용결제를 위한 카드를 등록한다. Enable billing 마지막으로 BigQuery API를 사용해야 하기 때문에 빅쿼리 API 사용허가를 내준다.Enable BigQuery  위 API를 이용하지 않으면 Python 또는 R과 연동해서 사용할 수는 없다. 자주 쓰는것이 아니라면 비용은 거의 발생하지 않으니 염려하지 않아도 된다.</description>
    </item>
    
    <item>
      <title>Python - NumPy 소개 및 다양한 객체 생성</title>
      <link>https://chloevan.github.io/python/basic/numpy_array_creation/</link>
      <pubDate>Fri, 15 May 2020 16:12:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/basic/numpy_array_creation/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
I. 개요  NumPy는 C언어로 구성되었으며, 고성능의 수치계산을 위해 나온 패키지이며, Numerical Python의 약자이다. Python을 활용한 데이터 분석을 수행할 때, 그리고 데이터 시각화나 전처리를 수행할 때, NumPy는 매우 자주 사용되기 때문에 한번쯤은 꼭 다듬고 가는 것이 중요하다. 독자의 가독성을 위해 두번에 걸쳐 나눠서 연재하려고 한다.</description>
    </item>
    
    <item>
      <title>ch04 - Modeling Visualisation</title>
      <link>https://chloevan.github.io/r/datavisualisation/ch04_modeling_visualisation/</link>
      <pubDate>Fri, 15 May 2020 11:10:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/datavisualisation/ch04_modeling_visualisation/</guid>
      <description>개요  A picture is worth a thousand words — English Language Adage
  The simple graph has brought more information to the data analyst’s mind than any other device. — John Tukey
 한장의 그림이 수천단어보다 가치가 있다는 영어속담과, 명료한 시각화가 데이터분석가에게 다른 어떤 도구보다 더 많은 정보를 제공한다는 유명한 데이터 과학자의 조언. 핵심은 시각화이다.
본 장에서는 ggplot2 패키지를 활용한 시각화를 먼저 보여줄 것이다. 먼저 간단하게 ggplot2 패키지에 소개하자면 Grammar of Graphics1의 철학을 담아서 R 생태계에서 유명한 학자 중, Hadley Wickham에 의해 주도적으로 개발되었다.</description>
    </item>
    
    <item>
      <title>Python - Pandas 병렬처리</title>
      <link>https://chloevan.github.io/python/pandas/pandas_lambda_swifter/</link>
      <pubDate>Wed, 13 May 2020 14:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/pandas/pandas_lambda_swifter/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
지난 포스트에서는 lambda의 기본적인 개념에 대해서 익혔다면, 이제 본격적인 데이터 전처리와 관련된 예제를 올리려고 한다.
 Python - Lambda and List Comprehension  II. 가상의 데이터셋 만들기  25M 행과 5개의 열로 구성된 가상의 숫자 데이터 프레임을 만들어보자.  import pandas as pd import numpy as np from tabulate import tabulate pd_temp = pd.</description>
    </item>
    
    <item>
      <title>Python - Lambda and List Comprehension</title>
      <link>https://chloevan.github.io/python/basic/lambda_and_list_comprehension/</link>
      <pubDate>Tue, 12 May 2020 17:12:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/basic/lambda_and_list_comprehension/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
I. 개요 Python을 활용한 데이터전처리를 수행할 때, Lambda and List Comprehension 활용하면 매우 handy한 경험을 할 수 있다. 특히, 코드 수행 시, for-loop가 많을 때 유용하다.
II. Lambda Expression 우선 Lambda의 표현 방법은 아래와 같다.
lambda 인자 : 표현식 어떻게 사용할 수 있을까요?</description>
    </item>
    
    <item>
      <title>Python Basic Syntax - list(1)</title>
      <link>https://chloevan.github.io/python/basic/basic_syntax_list_1/</link>
      <pubDate>Tue, 12 May 2020 11:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/basic/basic_syntax_list_1/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
본 포스트에서는 짧게 list를 만드는 법과, 값을 추가하는 것에 대해 작성합니다.
I. list 개요 list는 순서는 순서가 있는 집합이며, [] 형태를 가집니다. list는 (integer, float, string, etc) 등으로 구성되는데, 서로 다른 데이터 값이 들어올 수도 있다. 아래 코드를 보자.
# empty list my_list = [] # 숫자형 list num_list = [1, 2, 3] # 문자형 list chr_list = [&amp;#39;A&amp;#39;, &amp;#39;B&amp;#39;, &amp;#39;C&amp;#39;] 리스트는 또다른 리스트를 포함할 수 도 있다.</description>
    </item>
    
    <item>
      <title>How To Make a Portpolio (2)</title>
      <link>https://chloevan.github.io/ds-projects/how_to_make_portpolio_2/</link>
      <pubDate>Tue, 12 May 2020 00:35:28 +0900</pubDate>
      
      <guid>https://chloevan.github.io/ds-projects/how_to_make_portpolio_2/</guid>
      <description>들어가면서.. 본격적으로 강의를 시작하면서, 수강생들에게 도움이 되는 글을 작성하고 싶었다. 아쉽지만, 본 포스팅에서 코딩과 관련된 글을 제공되지 않는다. 다만, 필자 역시 블로그를 시작하면서 하나의 포트폴리오를 만들어가는 것처럼, 부족한 나의 강의를 듣는 사람들에게도 도움이 될만한 글을 제공하고 싶었다.
 원문: How to Build a Data Science Portfolio
 원문을 번역하지만, 기타 필자의 개인적인 의견도 섞어서 개진하였음을 밝힌다.
데이터 과학분야에 어떻게 취직을 할 수 있을까? 신입의 입장에서, 통계, 기계학습, 프로그래밍, IT 기술, 클라우드 전반에 대해 모두 아는 것은 어렵다.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Tutorial ch9.5 - 이미지 분할</title>
      <link>https://chloevan.github.io/python/tensorflow2.0/ch9_5_image_segmentation/</link>
      <pubDate>Mon, 11 May 2020 12:20:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/tensorflow2.0/ch9_5_image_segmentation/</guid>
      <description>공지   본 Tutorial은 교재 시작하세요 텐서플로 2.0 프로그래밍의 강사에게 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다.
  강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶으신 분은 반드시 교재를 구매하실 것을 권해드립니다.
   본 교재 외에 강사가 추가한 내용에 대한 Reference를 확인하셔서, 추가적으로 학습하시는 것을 권유드립니다.  Tutorial 이전 강의가 궁금하신 분들은 아래에서 선택하여 추가 학습 하시기를 바랍니다.
 Google Colab Tensorflow 2.</description>
    </item>
    
    <item>
      <title>How To Make a Portpolio (1)</title>
      <link>https://chloevan.github.io/ds-projects/how_to_make_portpolio_1/</link>
      <pubDate>Mon, 11 May 2020 01:03:28 +0900</pubDate>
      
      <guid>https://chloevan.github.io/ds-projects/how_to_make_portpolio_1/</guid>
      <description>들어가면서.. 본격적으로 강의를 시작하면서, 수강생들에게 도움이 되는 글을 작성하고 싶었다. 아쉽지만, 본 포스팅에서 코딩과 관련된 글을 제공되지 않는다. 다만, 필자 역시 블로그를 시작하면서 하나의 포트폴리오를 만들어가는 것처럼, 부족한 나의 강의를 듣는 사람들에게도 도움이 될만한 글을 제공하고 싶었다.
 원문: How to Build a Data Science Portfolio
 원문을 번역하지만, 기타 필자의 개인적인 의견도 섞어서 개진하였음을 밝힌다.
데이터 과학분야에 어떻게 취직을 할 수 있을까? 신입의 입장에서, 통계, 기계학습, 프로그래밍, IT 기술, 클라우드 전반에 대해 모두 아는 것은 어렵다.</description>
    </item>
    
    <item>
      <title>Shiny App Deployment Using GCP</title>
      <link>https://chloevan.github.io/r/shiny/applications/gcp_shiny/</link>
      <pubDate>Sun, 10 May 2020 19:47:18 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/shiny/applications/gcp_shiny/</guid>
      <description>I. 개요 Google Data Studio는 놀랍도록 유연한 도구로서 마케팅 대행사 중 Google Analytics를 활용한 업체들은 대부분 항상 사용합니다. 때로는 유연성이 더 필요할 때 R &amp;lsquo;s Shiny 패키지를 사용하여 데이터 시각화 / 대시 보드 앱을 만드는 것이 매우 쉽습니다. 이 옵션을 사용하면 모든 소스의 데이터를 예측 모델링과 함께 사용할 수 있는 장점이 있습니다.
이 블로그 게시물은 3 부분으로 나누어져 있습니다.
 먼저 Google Cloud Virtual Machine (VM)을 설정하고 웹 액세스를 허용하도록 방화벽 규칙을 구성합니다.</description>
    </item>
    
    <item>
      <title>matplotlib 07 Polar Chart</title>
      <link>https://chloevan.github.io/python/matplotlib/matplotlib_07_polar_chart/</link>
      <pubDate>Sat, 09 May 2020 15:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/matplotlib/matplotlib_07_polar_chart/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
I. Matplotlib &amp;amp; Seaborn (1) 기본 개요 Matplotlib는 파이썬 표준 시각화 도구라고 불리워지며 파이썬 그래프의 기본 토대가 된다고 해도 무방하다. 객체지향 프로그래밍을 지원하므로 세세하게 꾸밀 수 있다.
Seaborn 그래는 파이썬 시각화 도구의 고급 버전이다. Matplotlib에 비해 비교적 단순한 인터페이스를 제공하기 때문에 초보자도 어렵지 않게 배울 수 있다.</description>
    </item>
    
    <item>
      <title>Github에 Daily 코딩 설정</title>
      <link>https://chloevan.github.io/settings/daily_coding/</link>
      <pubDate>Sat, 09 May 2020 10:00:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/settings/daily_coding/</guid>
      <description>I. Motivation 오늘은 데이터 분석과 크게 관련이 없는 포스팅을 해보자. 오늘 깃허브에 꾸미려고 하는 것은 아래와 같다.
주로 깃허브를 올리는 시간은 언제인가? 그저 단순 재미로 포스팅을 해본다.
II. Prep Work  첫번째, Gist를 클릭하여 활성화를 합니다. (https://gist.github.com/) 두번째, 이제 토큰을 생성하자. 이 때 중요한 것은 rest &amp;amp; gist를 클릭한 뒤 생성을 해야 한다. (https://github.com/settings/tokens/new)   Note에는 토큰 생성 목적을 기재하면 된다. (필자는 Productivity Box)라고 했다. Select Scope에서 rest &amp;amp; gist를 아래 그림과 같이 클릭하자.</description>
    </item>
    
    <item>
      <title>Ch13 Inner Join</title>
      <link>https://chloevan.github.io/gcp/bigquery/02_basics/ch13_inner_join/</link>
      <pubDate>Fri, 08 May 2020 14:30:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/gcp/bigquery/02_basics/ch13_inner_join/</guid>
      <description>I. 구글 클라우드 설정 본격적인 빅쿼리 실습에 앞서서, Python과 연동하는 예제를 준비하였다. 빅쿼리 시작에 앞서서 선행적으로 클라우드 사용을 해야 한다.
 만약 GCP 프로젝트가 없다면, 계정을 연동한다. Go to Cloud Resource Manager 그리고, 비용결제를 위한 카드를 등록한다. Enable billing 마지막으로 BigQuery API를 사용해야 하기 때문에 빅쿼리 API 사용허가를 내준다.Enable BigQuery  위 API를 이용하지 않으면 Python 또는 R과 연동해서 사용할 수는 없다. 자주 쓰는것이 아니라면 비용은 거의 발생하지 않으니 염려하지 않아도 된다.</description>
    </item>
    
    <item>
      <title>Automate Excel Reporting With Pandas</title>
      <link>https://chloevan.github.io/python/rpa/automate_excel_reporting_with_pandas/</link>
      <pubDate>Fri, 08 May 2020 01:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/rpa/automate_excel_reporting_with_pandas/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
 데이터는 코로나 데이터를 활용했다.  I. Overview 일부의 사람들이 R과 Python을 사용하지만, 대부분의 사람들은 엑셀을 사용한다. 피벗테이블은 모든 직장인이 알아야 하는 필수 용어로, 전체 데이터를 빠르게 요약해주는 일종의 skill이다.
오늘 배울 포스트는 피벗 테이블 작성과 파이썬에서 만들어진 그래프를 엑셀 파일에 포함하여 내보내는 예제를 준비하였다.</description>
    </item>
    
    <item>
      <title>Ch12 Join Explained</title>
      <link>https://chloevan.github.io/gcp/bigquery/02_basics/ch12_join_explained/</link>
      <pubDate>Thu, 07 May 2020 14:30:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/gcp/bigquery/02_basics/ch12_join_explained/</guid>
      <description>1. 구글 클라우드 설정 본격적인 빅쿼리 실습에 앞서서, Python과 연동하는 예제를 준비하였다. 빅쿼리 시작에 앞서서 선행적으로 클라우드 사용을 해야 한다.
 만약 GCP 프로젝트가 없다면, 계정을 연동한다. Go to Cloud Resource Manager 그리고, 비용결제를 위한 카드를 등록한다. Enable billing 마지막으로 BigQuery API를 사용해야 하기 때문에 빅쿼리 API 사용허가를 내준다.Enable BigQuery  위 API를 이용하지 않으면 Python 또는 R과 연동해서 사용할 수는 없다. 자주 쓰는것이 아니라면 비용은 거의 발생하지 않으니 염려하지 않아도 된다.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Tutorial ch9.4 - 초해상도</title>
      <link>https://chloevan.github.io/python/tensorflow2.0/ch9_4_super_resolution/</link>
      <pubDate>Thu, 07 May 2020 07:20:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/tensorflow2.0/ch9_4_super_resolution/</guid>
      <description>공지   본 Tutorial은 교재 시작하세요 텐서플로 2.0 프로그래밍의 강사에게 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다.
  강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶으신 분은 반드시 교재를 구매하실 것을 권해드립니다.
   본 교재 외에 강사가 추가한 내용에 대한 Reference를 확인하셔서, 추가적으로 학습하시는 것을 권유드립니다.  Tutorial 이전 강의가 궁금하신 분들은 아래에서 선택하여 추가 학습 하시기를 바랍니다.
 Google Colab Tensorflow 2.</description>
    </item>
    
    <item>
      <title>Basic Objects - Dataframe</title>
      <link>https://chloevan.github.io/r/basics/dataframe/</link>
      <pubDate>Wed, 06 May 2020 11:10:15 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/basics/dataframe/</guid>
      <description>공지 본 Tutorial은 강사에게 강의를 듣는 과거-현재-미래 학생들을 위해 작성하였습니다.
이 글을 읽어주시는 분들에게 작은 도움이 되기를 바랍니다.
I. DataFrame의 개요  본 포스트는 프로그래밍과 R을 처음 배우는 사람을 위해 작성하였습니다. 짧게 읽어두시기를 바랍니다. 공부하실 때는 복잡하게 생각하지는 마시기를 바랍니다. 영어의 기본단어 및 문법을 배우듯이 그냥 받아들이시기를 바랍니다.
 데이터프레임은 서로 다른 성질의 벡터가 모여 있는 집합이라고 할 수 있다.1
(1) 데이터프레임 생성 이제 데이터프레임을 만들어보자. 어려운 것은 아니니 쉽게 따라 올 수 있을 것이다.</description>
    </item>
    
    <item>
      <title>pandas pivot table</title>
      <link>https://chloevan.github.io/python/pandas/pandas_pivot_table/</link>
      <pubDate>Tue, 05 May 2020 14:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/pandas/pandas_pivot_table/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
 데이터는 코로나 데이터를 활용했다.  I. Overview 일부의 사람들이 R과 Python을 사용하지만, 대부분의 사람들은 엑셀을 사용한다. 피벗테이블은 모든 직장인이 알아야 하는 필수 용어로, 전체 데이터를 빠르게 요약해주는 일종의 skill이다.
II. 피벗 테이블 만들기 예제  이제 본격적으로 피벗 테이블을 만들어보자.  (1) 데이터 가져오기 데이터는 코로나 데이터를 활용한다.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Tutorial ch9.3 - 클러스터링</title>
      <link>https://chloevan.github.io/python/tensorflow2.0/ch9_3_k_means_clustering/</link>
      <pubDate>Mon, 04 May 2020 17:10:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/tensorflow2.0/ch9_3_k_means_clustering/</guid>
      <description>공지   본 Tutorial은 교재 시작하세요 텐서플로 2.0 프로그래밍의 강사에게 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다.
  강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶으신 분은 반드시 교재를 구매하실 것을 권해드립니다.
   본 교재 외에 강사가 추가한 내용에 대한 Reference를 확인하셔서, 추가적으로 학습하시는 것을 권유드립니다.  Tutorial 이전 강의가 궁금하신 분들은 아래에서 선택하여 추가 학습 하시기를 바랍니다.
 Google Colab Tensorflow 2.</description>
    </item>
    
    <item>
      <title>ch03 - gghistostats</title>
      <link>https://chloevan.github.io/r/datavisualisation/ch03_gghistostats/</link>
      <pubDate>Mon, 04 May 2020 11:10:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/datavisualisation/ch03_gghistostats/</guid>
      <description>Intro  A picture is worth a thousand words — English Language Adage The simple graph has brought more information to the data analyst’s mind than any other device. — John Tukey
 한장의 그림이 수천단어보다 가치가 있다는 영어속담과, 명료한 시각화가 데이터분석가에게 다른 어떤 도구보다 더 많은 정보를 제공한다는 유명한 데이터 과학자의 조언. 핵심은 시각화이다.
본 장에서는 ggplot2 패키지를 활용한 시각화를 먼저 보여줄 것이다. 먼저 간단하게 ggplot2 패키지에 소개하자면 Grammar of Graphics1의 철학을 담아서 R 생태계에서 유명한 학자 중, Hadley Wickham에 의해 주도적으로 개발되었다.</description>
    </item>
    
    <item>
      <title>ch02 - Histogram</title>
      <link>https://chloevan.github.io/r/datavisualisation/ch02_histogram/</link>
      <pubDate>Sun, 03 May 2020 20:10:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/datavisualisation/ch02_histogram/</guid>
      <description>Intro  A picture is worth a thousand words — English Language Adage The simple graph has brought more information to the data analyst’s mind than any other device. — John Tukey
 한장의 그림이 수천단어보다 가치가 있다는 영어속담과, 명료한 시각화가 데이터분석가에게 다른 어떤 도구보다 더 많은 정보를 제공한다는 유명한 데이터 과학자의 조언. 핵심은 시각화이다.
본 장에서는 ggplot2 패키지를 활용한 시각화를 먼저 보여줄 것이다. 먼저 간단하게 ggplot2 패키지에 소개하자면 Grammar of Graphics1의 철학을 담아서 R 생태계에서 유명한 학자 중, Hadley Wickham에 의해 주도적으로 개발되었다.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Tutorial ch9.1-2 - 오토인코더 &amp; MNIST</title>
      <link>https://chloevan.github.io/python/tensorflow2.0/ch9_1_auto_encoder/</link>
      <pubDate>Sun, 03 May 2020 15:20:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/tensorflow2.0/ch9_1_auto_encoder/</guid>
      <description>공지   본 Tutorial은 교재 시작하세요 텐서플로 2.0 프로그래밍의 강사에게 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다.
  강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶으신 분은 반드시 교재를 구매하실 것을 권해드립니다.
   본 교재 외에 강사가 추가한 내용에 대한 Reference를 확인하셔서, 추가적으로 학습하시는 것을 권유드립니다.  Tutorial 이전 강의가 궁금하신 분들은 아래에서 선택하여 추가 학습 하시기를 바랍니다.
 Google Colab Tensorflow 2.</description>
    </item>
    
    <item>
      <title>Ch11 Powerful SQL Pattern</title>
      <link>https://chloevan.github.io/gcp/bigquery/02_basics/ch11_powerful_sql_pattern/</link>
      <pubDate>Sun, 03 May 2020 13:30:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/gcp/bigquery/02_basics/ch11_powerful_sql_pattern/</guid>
      <description>1. 구글 클라우드 설정 본격적인 빅쿼리 실습에 앞서서, Python과 연동하는 예제를 준비하였다. 빅쿼리 시작에 앞서서 선행적으로 클라우드 사용을 해야 한다.
 만약 GCP 프로젝트가 없다면, 계정을 연동한다. Go to Cloud Resource Manager 그리고, 비용결제를 위한 카드를 등록한다. Enable billing 마지막으로 BigQuery API를 사용해야 하기 때문에 빅쿼리 API 사용허가를 내준다.Enable BigQuery  위 API를 이용하지 않으면 Python 또는 R과 연동해서 사용할 수는 없다. 자주 쓰는것이 아니라면 비용은 거의 발생하지 않으니 염려하지 않아도 된다.</description>
    </item>
    
    <item>
      <title>Ch10 UNNEST an Array</title>
      <link>https://chloevan.github.io/gcp/bigquery/02_basics/ch10_unnest_an_array/</link>
      <pubDate>Sat, 02 May 2020 19:30:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/gcp/bigquery/02_basics/ch10_unnest_an_array/</guid>
      <description>1. 구글 클라우드 설정 본격적인 빅쿼리 실습에 앞서서, Python과 연동하는 예제를 준비하였다. 빅쿼리 시작에 앞서서 선행적으로 클라우드 사용을 해야 한다.
 만약 GCP 프로젝트가 없다면, 계정을 연동한다. Go to Cloud Resource Manager 그리고, 비용결제를 위한 카드를 등록한다. Enable billing 마지막으로 BigQuery API를 사용해야 하기 때문에 빅쿼리 API 사용허가를 내준다.Enable BigQuery  위 API를 이용하지 않으면 Python 또는 R과 연동해서 사용할 수는 없다. 자주 쓰는것이 아니라면 비용은 거의 발생하지 않으니 염려하지 않아도 된다.</description>
    </item>
    
    <item>
      <title>Dealing with NA-01</title>
      <link>https://chloevan.github.io/python/transformation/dealing_with_na_01/</link>
      <pubDate>Sat, 02 May 2020 19:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/transformation/dealing_with_na_01/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
 원문: 6 Different Ways to Compensate for Missing Values In a Dataset (Data Imputation with examples)  I. Overview 실제 데이터를 다루다보면 여러가지 이유로 결측치와 마주하게 된다. 특별한 이유가 없다면, 현업에서는 당연히 NA를 처리해야 한다. 그렇지 않다면 데이터 분석(시각화, 통계, 머신러닝 모형)에 영향을 줄 수 밖에 없다.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Tutorial ch8.3.2 - 컨볼루션 신경망을 사용한 신경 스타일 전이</title>
      <link>https://chloevan.github.io/python/tensorflow2.0/ch8_3_2_neural_style_transfer/</link>
      <pubDate>Sat, 02 May 2020 15:20:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/tensorflow2.0/ch8_3_2_neural_style_transfer/</guid>
      <description>공지   본 Tutorial은 교재 시작하세요 텐서플로 2.0 프로그래밍의 강사에게 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다.
  강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶으신 분은 반드시 교재를 구매하실 것을 권해드립니다.
   본 교재 외에 강사가 추가한 내용에 대한 Reference를 확인하셔서, 추가적으로 학습하시는 것을 권유드립니다.  Tutorial 이전 강의가 궁금하신 분들은 아래에서 선택하여 추가 학습 하시기를 바랍니다.
 Google Colab Tensorflow 2.</description>
    </item>
    
    <item>
      <title>basic_loop</title>
      <link>https://chloevan.github.io/python/basic/basic_loop/</link>
      <pubDate>Sat, 02 May 2020 01:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/basic/basic_loop/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
I. 개요 파이썬 처음 입문하는 사람들을 위해서 작성하였다. Python으로 코드를 작성하다보면, 매우 빈번히 For-loop 구문을 확인할 수 있다. 간단한 코드로 For-loop를 확인해보자.
II. Loop over list 간단하게 for-loop를 작성해보자.
# double list num = [1.72, 1.67, 1.71, 1.89] for height in num: print(height) 1.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Tutorial ch8.3.1 - 컨볼루션 신경망을 사용한 텍스처 합성</title>
      <link>https://chloevan.github.io/python/tensorflow2.0/ch8_3_1_texture_synthesis/</link>
      <pubDate>Fri, 01 May 2020 17:20:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/tensorflow2.0/ch8_3_1_texture_synthesis/</guid>
      <description>공지   본 Tutorial은 교재 시작하세요 텐서플로 2.0 프로그래밍의 강사에게 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다.
  강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶으신 분은 반드시 교재를 구매하실 것을 권해드립니다.
   본 교재 외에 강사가 추가한 내용에 대한 Reference를 확인하셔서, 추가적으로 학습하시는 것을 권유드립니다.  Tutorial 이전 강의가 궁금하신 분들은 아래에서 선택하여 추가 학습 하시기를 바랍니다.
 Google Colab Tensorflow 2.</description>
    </item>
    
    <item>
      <title>matplotlib 06 Table Chart</title>
      <link>https://chloevan.github.io/python/matplotlib/matplotlib_06_table_chart/</link>
      <pubDate>Thu, 30 Apr 2020 19:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/matplotlib/matplotlib_06_table_chart/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
도움이 되었다면 Github에 Star를 눌러주세요.
 python_visualisation  I. Matplotlib &amp;amp; Seaborn (1) 기본 개요 Matplotlib는 파이썬 표준 시각화 도구라고 불리워지며 파이썬 그래프의 기본 토대가 된다고 해도 무방하다. 객체지향 프로그래밍을 지원하므로 세세하게 꾸밀 수 있다.
Seaborn 그래는 파이썬 시각화 도구의 고급 버전이다.</description>
    </item>
    
    <item>
      <title>Ch09 Struct, Tuple</title>
      <link>https://chloevan.github.io/gcp/bigquery/02_basics/ch09_struct_and_tuple/</link>
      <pubDate>Thu, 30 Apr 2020 15:30:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/gcp/bigquery/02_basics/ch09_struct_and_tuple/</guid>
      <description>1. 구글 클라우드 설정 본격적인 빅쿼리 실습에 앞서서, Python과 연동하는 예제를 준비하였다. 빅쿼리 시작에 앞서서 선행적으로 클라우드 사용을 해야 한다.
 만약 GCP 프로젝트가 없다면, 계정을 연동한다. Go to Cloud Resource Manager 그리고, 비용결제를 위한 카드를 등록한다. Enable billing 마지막으로 BigQuery API를 사용해야 하기 때문에 빅쿼리 API 사용허가를 내준다.Enable BigQuery  위 API를 이용하지 않으면 Python 또는 R과 연동해서 사용할 수는 없다. 자주 쓰는것이 아니라면 비용은 거의 발생하지 않으니 염려하지 않아도 된다.</description>
    </item>
    
    <item>
      <title>stackoverflow with dplyr 01 - mutate_all</title>
      <link>https://chloevan.github.io/r/datatransform/dplyr01_mutate_all/</link>
      <pubDate>Thu, 30 Apr 2020 10:20:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/datatransform/dplyr01_mutate_all/</guid>
      <description>I. 개요 dplyr 문법에 관한 설명은 사실 차고 넘친다. 구체적인 설명은 하지 않겠다. Google이나 Naver에서 dplyr을 검색해보자! 검색하면 쉽게 정리된 글들이 많이 있다.
그런데, 실제 실무에서 다루는 데이터의 질과 양은 다 다르다. 데이터 가공은 결국 연구자의 환경에 따라 달라지는데, 조금 더 효과적으로 dplyr 문법을 사용하려면 결국엔 아이디어가 필요하고, 그리고 stackoverflow를 찾게 되어 있다. 집단 지성의 힘이랄까?
그래서 가급적, stackoverflow에 나와 있는 문제 중 재미있는 해결법 등을 소개하며 연재하려고 한다.
제 강의를 들으신 분들에게 작은 도움이 되기를 바랍니다.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Tutorial ch8.2 - 전이 학습과 &amp; Kaggle 대회</title>
      <link>https://chloevan.github.io/python/tensorflow2.0/ch8_2_transfer_learning/</link>
      <pubDate>Wed, 29 Apr 2020 17:20:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/tensorflow2.0/ch8_2_transfer_learning/</guid>
      <description>공지   본 Tutorial은 교재 시작하세요 텐서플로 2.0 프로그래밍의 강사에게 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다.
  강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶으신 분은 반드시 교재를 구매하실 것을 권해드립니다.
   본 교재 외에 강사가 추가한 내용에 대한 Reference를 확인하셔서, 추가적으로 학습하시는 것을 권유드립니다.  Tutorial 이전 강의가 궁금하신 분들은 아래에서 선택하여 추가 학습 하시기를 바랍니다.
 Google Colab Tensorflow 2.</description>
    </item>
    
    <item>
      <title>list handling</title>
      <link>https://chloevan.github.io/r/basics/list/</link>
      <pubDate>Wed, 29 Apr 2020 11:38:15 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/basics/list/</guid>
      <description>I. 개요 모든 프로그래밍 언어에는 기본적으로 데이터타입이 존재한다. R도 프로그래밍 언어이기 때문에 데이터 타입의 일반적인 유형이 존재한다.
Vector의 기본 개념을 익혔다면, 전반적인 구조에 대해 살피는 시간을 갖도록 한다. 먼저 동일 성질의 Vector가 모여서 matrix도 되고, 데이터프레임도 된다. 그리고 이러한 다양한 데이터의 구조가 모여 리스트를 형성하는데,
리스트를 만드는 것도 중요한 건, 즉 이해다. 리스트에 접근법이 중요한데, 리스트를 잘 다루면, apply 함수 계열을 사용하는데도 큰 도움이 된다.
특히, 100GB 이상의 데이터를 다루게 되면, apply() 함수로 작업해야 하는 일이 종종 발생한다.</description>
    </item>
    
    <item>
      <title>Ch08_Creating_Arrays_with_Array_AGG</title>
      <link>https://chloevan.github.io/gcp/bigquery/02_basics/ch08_creating_arrays_with_array_agg/</link>
      <pubDate>Wed, 29 Apr 2020 10:30:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/gcp/bigquery/02_basics/ch08_creating_arrays_with_array_agg/</guid>
      <description>1. 구글 클라우드 설정 본격적인 빅쿼리 실습에 앞서서, Python과 연동하는 예제를 준비하였다. 빅쿼리 시작에 앞서서 선행적으로 클라우드 사용을 해야 한다.
 만약 GCP 프로젝트가 없다면, 계정을 연동한다. Go to Cloud Resource Manager 그리고, 비용결제를 위한 카드를 등록한다. Enable billing 마지막으로 BigQuery API를 사용해야 하기 때문에 빅쿼리 API 사용허가를 내준다.Enable BigQuery  위 API를 이용하지 않으면 Python 또는 R과 연동해서 사용할 수는 없다. 자주 쓰는것이 아니라면 비용은 거의 발생하지 않으니 염려하지 않아도 된다.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Tutorial ch8.1 - 텐서플로 허브</title>
      <link>https://chloevan.github.io/python/tensorflow2.0/ch8_1_tensorflow_hub/</link>
      <pubDate>Tue, 28 Apr 2020 17:20:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/tensorflow2.0/ch8_1_tensorflow_hub/</guid>
      <description>공지   본 Tutorial은 교재 시작하세요 텐서플로 2.0 프로그래밍의 강사에게 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다.
  강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶으신 분은 반드시 교재를 구매하실 것을 권해드립니다.
   본 교재 외에 강사가 추가한 내용에 대한 Reference를 확인하셔서, 추가적으로 학습하시는 것을 권유드립니다.  Tutorial 이전 강의가 궁금하신 분들은 아래에서 선택하여 추가 학습 하시기를 바랍니다.
 Google Colab Tensorflow 2.</description>
    </item>
    
    <item>
      <title>vcrts01 - Combining Vectors</title>
      <link>https://chloevan.github.io/r/datatransform/vcrts01/</link>
      <pubDate>Tue, 28 Apr 2020 10:20:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/datatransform/vcrts01/</guid>
      <description>I. 개요 vctrs 패키지. Vector Helpers 패키지1라고 불리운다. 벡터를 활용할 때, 어려운 부분은 데이터와 조합해서 사용할 때다. 특히 서로다른 성질의 Vectors를 Combining 할 때 발생하는 에러에 대해 효과적으로 해결할 수 있는 대안을 제시한다.
II. Vectors 벡터에 관한 기초 부분은 여기에서 생략하고, 필자가 작성한 기초 부분에서 참조하기를 바란다.
 Basci Objects  (1) 벡터의 정의 R의 기본문법에서 벡터의 정의는 다음과 같다.
c(1, 2, 3) ## [1] 1 2 3 c(&amp;#34;a&amp;#34;, &amp;#34;b&amp;#34;, &amp;#34;c&amp;#34;) ## [1] &amp;quot;a&amp;quot; &amp;quot;b&amp;quot; &amp;quot;c&amp;quot; (2) tidyverse 벡터와 관련되어서 일반적으로 다음과 같은 함수에서 넓게 활용된다.</description>
    </item>
    
    <item>
      <title>Ch03 Components of Process Data</title>
      <link>https://chloevan.github.io/r/dataanalysis/process_analysis/ch03_components_of_process_data/</link>
      <pubDate>Mon, 27 Apr 2020 23:20:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/dataanalysis/process_analysis/ch03_components_of_process_data/</guid>
      <description>I. 개요 지난시간에 patients에 관한 데이터를 통해서 프로세스 분석에 대한 일반적인 개념을 접했다.
이번 포스트에서는 bupaR에 대한 이론적인 내용과 함께 간단하게 실습을 진행하도록 한다.
지난시간과 마찬가지로 먼저 데이터를 획득하는 것에서부터 출발한다.
library(bupaR) library(eventdataR) patients &amp;lt;- patients dim(patients) ## [1] 5442 7 5442행과 7개의 열이 확인되었다.
class(patients) ## [1] &amp;quot;eventlog&amp;quot; &amp;quot;tbl_df&amp;quot; &amp;quot;tbl&amp;quot; &amp;quot;data.frame&amp;quot; II. 용어 정리 우선 용어 정리가 필요하다. Events, Event log, Activity 등등. 하나씩 살펴보자.
(1) Events 우선 Events에 관한 이해를 돕기 위해 아래 그림을 우선 살펴보자.</description>
    </item>
    
    <item>
      <title>Ch07 Arrays &amp; Structs</title>
      <link>https://chloevan.github.io/gcp/bigquery/02_basics/ch07_split_unnest/</link>
      <pubDate>Mon, 27 Apr 2020 20:30:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/gcp/bigquery/02_basics/ch07_split_unnest/</guid>
      <description>1. 구글 클라우드 설정 본격적인 빅쿼리 실습에 앞서서, Python과 연동하는 예제를 준비하였다. 빅쿼리 시작에 앞서서 선행적으로 클라우드 사용을 해야 한다.
 만약 GCP 프로젝트가 없다면, 계정을 연동한다. Go to Cloud Resource Manager 그리고, 비용결제를 위한 카드를 등록한다. Enable billing 마지막으로 BigQuery API를 사용해야 하기 때문에 빅쿼리 API 사용허가를 내준다.Enable BigQuery  위 API를 이용하지 않으면 Python 또는 R과 연동해서 사용할 수는 없다. 자주 쓰는것이 아니라면 비용은 거의 발생하지 않으니 염려하지 않아도 된다.</description>
    </item>
    
    <item>
      <title>matplotlib 05 pie plot</title>
      <link>https://chloevan.github.io/python/matplotlib/matplotlib_05_pie_chart/</link>
      <pubDate>Mon, 27 Apr 2020 16:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/matplotlib/matplotlib_05_pie_chart/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
도움이 되었다면 Github에 Star를 눌러주세요.
 python_visualisation  I. Matplotlib &amp;amp; Seaborn (1) 기본 개요 Matplotlib는 파이썬 표준 시각화 도구라고 불리워지며 파이썬 그래프의 기본 토대가 된다고 해도 무방하다. 객체지향 프로그래밍을 지원하므로 세세하게 꾸밀 수 있다.
Seaborn 그래는 파이썬 시각화 도구의 고급 버전이다.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Tutorial ch7.4 - (2) 단어 단위 생성</title>
      <link>https://chloevan.github.io/python/tensorflow2.0/ch7_4_naturallanguagegeneration2/</link>
      <pubDate>Mon, 27 Apr 2020 14:20:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/tensorflow2.0/ch7_4_naturallanguagegeneration2/</guid>
      <description>공지   본 Tutorial은 교재 시작하세요 텐서플로 2.0 프로그래밍의 강사에게 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다.
  강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶으신 분은 반드시 교재를 구매하실 것을 권해드립니다.
   본 교재 외에 강사가 추가한 내용에 대한 Reference를 확인하셔서, 추가적으로 학습하시는 것을 권유드립니다.  Tutorial 이전 강의가 궁금하신 분들은 아래에서 선택하여 추가 학습 하시기를 바랍니다.
 Google Colab Tensorflow 2.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Tutorial ch7.4 - (1) 단어 단위 생성</title>
      <link>https://chloevan.github.io/python/tensorflow2.0/ch7_4_naturallanguagegeneration1/</link>
      <pubDate>Mon, 27 Apr 2020 10:20:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/tensorflow2.0/ch7_4_naturallanguagegeneration1/</guid>
      <description>공지   본 Tutorial은 교재 시작하세요 텐서플로 2.0 프로그래밍의 강사에게 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다.
  강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶으신 분은 반드시 교재를 구매하실 것을 권해드립니다.
   본 교재 외에 강사가 추가한 내용에 대한 Reference를 확인하셔서, 추가적으로 학습하시는 것을 권유드립니다.  Tutorial 이전 강의가 궁금하신 분들은 아래에서 선택하여 추가 학습 하시기를 바랍니다.
 Google Colab Tensorflow 2.</description>
    </item>
    
    <item>
      <title>More on Vectors and Indexing</title>
      <link>https://chloevan.github.io/r/basics/more_vectors_indexing/</link>
      <pubDate>Sun, 26 Apr 2020 16:10:15 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/basics/more_vectors_indexing/</guid>
      <description>공지 본 Tutorial은 강사에게 강의를 듣는 과거-현재-미래 학생들을 위해 작성하였습니다.
이 글을 읽어주시는 분들에게 작은 도움이 되기를 바랍니다.
I. 벡터  본 포스트는 프로그래밍과 R을 처음 배우는 사람을 위해 작성하였습니다. 짧게 읽어두시기를 바랍니다. 공부하실 때는 복잡하게 생각하지는 마시기를 바랍니다. 영어의 기본단어 및 문법을 배우듯이 그냥 받아들이시기를 바랍니다.
 현재 진행중인 R 기초문법은 아래와 같습니다. 원하시는 것은 참조해서 가볍게 공부하시기를 바랍니다.
 Basic Objects - Vector  벡터(Vector). R에서 다루는 가장 작은 단위값의 데이터다.</description>
    </item>
    
    <item>
      <title>Ch06 SQL Aggregates</title>
      <link>https://chloevan.github.io/gcp/bigquery/02_basics/ch06_sql_aggregates/</link>
      <pubDate>Sun, 26 Apr 2020 11:30:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/gcp/bigquery/02_basics/ch06_sql_aggregates/</guid>
      <description>1. 구글 클라우드 설정 본격적인 빅쿼리 실습에 앞서서, Python과 연동하는 예제를 준비하였다. 빅쿼리 시작에 앞서서 선행적으로 클라우드 사용을 해야 한다.
 만약 GCP 프로젝트가 없다면, 계정을 연동한다. Go to Cloud Resource Manager 그리고, 비용결제를 위한 카드를 등록한다. Enable billing 마지막으로 BigQuery API를 사용해야 하기 때문에 빅쿼리 API 사용허가를 내준다.Enable BigQuery  위 API를 이용하지 않으면 Python 또는 R과 연동해서 사용할 수는 없다. 자주 쓰는것이 아니라면 비용은 거의 발생하지 않으니 염려하지 않아도 된다.</description>
    </item>
    
    <item>
      <title>Basic Objects - Vector</title>
      <link>https://chloevan.github.io/r/basics/basic_objects_vector/</link>
      <pubDate>Sat, 25 Apr 2020 18:38:15 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/basics/basic_objects_vector/</guid>
      <description>공지 본 Tutorial은 강사에게 강의를 듣는 과거-현재-미래 학생들을 위해 작성하였습니다.
이 글을 읽어주시는 분들에게 작은 도움이 되기를 바랍니다.
I. 벡터  본 포스트는 프로그래밍과 R을 처음 배우는 사람을 위해 작성하였습니다. 짧게 읽어두시기를 바랍니다. 공부하실 때는 복잡하게 생각하지는 마시기를 바랍니다. 영어의 기본단어 및 문법을 배우듯이 그냥 받아들이시기를 바랍니다.
 벡터(Vector). R에서 다루는 가장 작은 단위값의 데이터다. 1차원으로 구성이 되어 있다.
(1) 4가지 벡터 크게 4가지의 벡터가 존재한다. 간단하게 코드를 작성해보자.
xNum &amp;lt;- c(1, 3.</description>
    </item>
    
    <item>
      <title>Ch05 Query Essentials(3)</title>
      <link>https://chloevan.github.io/gcp/bigquery/02_basics/ch05_query_essentials3/</link>
      <pubDate>Sat, 25 Apr 2020 16:30:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/gcp/bigquery/02_basics/ch05_query_essentials3/</guid>
      <description>1. 구글 클라우드 설정 본격적인 빅쿼리 실습에 앞서서, Python과 연동하는 예제를 준비하였다. 빅쿼리 시작에 앞서서 선행적으로 클라우드 사용을 해야 한다.
 만약 GCP 프로젝트가 없다면, 계정을 연동한다. Go to Cloud Resource Manager 그리고, 비용결제를 위한 카드를 등록한다. Enable billing 마지막으로 BigQuery API를 사용해야 하기 때문에 빅쿼리 API 사용허가를 내준다.Enable BigQuery  위 API를 이용하지 않으면 Python 또는 R과 연동해서 사용할 수는 없다. 자주 쓰는것이 아니라면 비용은 거의 발생하지 않으니 염려하지 않아도 된다.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Tutorial ch7.3 - 긍정, 부정 감성 분석</title>
      <link>https://chloevan.github.io/python/tensorflow2.0/ch7_3_sentimentanalysis/</link>
      <pubDate>Sat, 25 Apr 2020 11:08:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/tensorflow2.0/ch7_3_sentimentanalysis/</guid>
      <description>공지   본 Tutorial은 교재 시작하세요 텐서플로 2.0 프로그래밍의 강사에게 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다.
  강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶으신 분은 반드시 교재를 구매하실 것을 권해드립니다.
   본 교재 외에 강사가 추가한 내용에 대한 Reference를 확인하셔서, 추가적으로 학습하시는 것을 권유드립니다.  Tutorial 이전 강의가 궁금하신 분들은 아래에서 선택하여 추가 학습 하시기를 바랍니다.
 Google Colab Tensorflow 2.</description>
    </item>
    
    <item>
      <title>matplotlib 04 area and stacked plot</title>
      <link>https://chloevan.github.io/python/matplotlib/matplotlib_04_area_stacked_plot/</link>
      <pubDate>Sat, 25 Apr 2020 01:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/matplotlib/matplotlib_04_area_stacked_plot/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
도움이 되었다면 Github에 Star를 눌러주세요.
 python_visualisation  I. Matplotlib &amp;amp; Seaborn (1) 기본 개요 Matplotlib는 파이썬 표준 시각화 도구라고 불리워지며 파이썬 그래프의 기본 토대가 된다고 해도 무방하다. 객체지향 프로그래밍을 지원하므로 세세하게 꾸밀 수 있다.
Seaborn 그래는 파이썬 시각화 도구의 고급 버전이다.</description>
    </item>
    
    <item>
      <title>Ch05 Query Essentials(2)</title>
      <link>https://chloevan.github.io/gcp/bigquery/02_basics/ch05_query_essentials2/</link>
      <pubDate>Fri, 24 Apr 2020 13:30:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/gcp/bigquery/02_basics/ch05_query_essentials2/</guid>
      <description>1. 구글 클라우드 설정 본격적인 빅쿼리 실습에 앞서서, Python과 연동하는 예제를 준비하였다. 빅쿼리 시작에 앞서서 선행적으로 클라우드 사용을 해야 한다.
 만약 GCP 프로젝트가 없다면, 계정을 연동한다. Go to Cloud Resource Manager 그리고, 비용결제를 위한 카드를 등록한다. Enable billing 마지막으로 BigQuery API를 사용해야 하기 때문에 빅쿼리 API 사용허가를 내준다.Enable BigQuery  위 API를 이용하지 않으면 Python 또는 R과 연동해서 사용할 수는 없다. 자주 쓰는것이 아니라면 비용은 거의 발생하지 않으니 염려하지 않아도 된다.</description>
    </item>
    
    <item>
      <title>Ch02 Process Analysis Basic</title>
      <link>https://chloevan.github.io/r/dataanalysis/process_analysis/ch02_process_analysis_basic/</link>
      <pubDate>Thu, 23 Apr 2020 23:20:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/dataanalysis/process_analysis/ch02_process_analysis_basic/</guid>
      <description>I. 개요 지난시간에 patients에 관한 데이터를 통해서 프로세스 분석에 대한 일반적인 개념을 접했다.
이번 포스트에서는 bupaR에 대한 이론적인 내용과 함께 간단하게 실습을 진행하도록 한다.
지난시간과 마찬가지로 먼저 데이터를 획득하는 것에서부터 출발한다.
library(bupaR) library(eventdataR) patients &amp;lt;- patients dim(patients) ## [1] 5442 7 5442행과 7개의 열이 확인되었다.
class(patients) ## [1] &amp;quot;eventlog&amp;quot; &amp;quot;tbl_df&amp;quot; &amp;quot;tbl&amp;quot; &amp;quot;data.frame&amp;quot; 그리고, 데이터는 eventlog, tbl_df, data.frame으로 구성된 것을 확인할 수 있다. 기존에 R을 학습한 사람들은 tbl &amp;amp; data.frame에 대해서 한두번쯤 들었을 거라 생각한다.</description>
    </item>
    
    <item>
      <title>Ch05 Query Essentials(1)</title>
      <link>https://chloevan.github.io/gcp/bigquery/02_basics/ch05_query_essentials1/</link>
      <pubDate>Thu, 23 Apr 2020 18:30:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/gcp/bigquery/02_basics/ch05_query_essentials1/</guid>
      <description>1. 구글 클라우드 설정 본격적인 빅쿼리 실습에 앞서서, Python과 연동하는 예제를 준비하였다. 빅쿼리 시작에 앞서서 선행적으로 클라우드 사용을 해야 한다.
 만약 GCP 프로젝트가 없다면, 계정을 연동한다. Go to Cloud Resource Manager 그리고, 비용결제를 위한 카드를 등록한다. Enable billing 마지막으로 BigQuery API를 사용해야 하기 때문에 빅쿼리 API 사용허가를 내준다.Enable BigQuery  위 API를 이용하지 않으면 Python 또는 R과 연동해서 사용할 수는 없다. 자주 쓰는것이 아니라면 비용은 거의 발생하지 않으니 염려하지 않아도 된다.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Tutorial ch7.1 - RNN 이론 (2)</title>
      <link>https://chloevan.github.io/python/tensorflow2.0/ch7_1_2_rnn_theory2/</link>
      <pubDate>Thu, 23 Apr 2020 10:08:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/tensorflow2.0/ch7_1_2_rnn_theory2/</guid>
      <description>공지   본 Tutorial은 교재 시작하세요 텐서플로 2.0 프로그래밍의 강사에게 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다.
  강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶으신 분은 반드시 교재를 구매하실 것을 권해드립니다.
   본 교재 외에 강사가 추가한 내용에 대한 Reference를 확인하셔서, 추가적으로 학습하시는 것을 권유드립니다.  Tutorial 이전 강의가 궁금하신 분들은 아래에서 선택하여 추가 학습 하시기를 바랍니다.
 Google Colab Tensorflow 2.</description>
    </item>
    
    <item>
      <title>matplotlib 03 Scatter Plot</title>
      <link>https://chloevan.github.io/python/matplotlib/matplotlib_03_scatterplot/</link>
      <pubDate>Wed, 22 Apr 2020 22:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/matplotlib/matplotlib_03_scatterplot/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
도움이 되었다면 Github에 Star를 눌러주세요.
 python_visualisation  I. Matplotlib 기본 그래프 Matplotlib는 파이썬 표준 시각화 도구라고 불리워지며 파이썬 그래프의 기본 토대가 된다고 해도 무방하다. 객체지향 프로그래밍을 지원하므로 세세하게 꾸밀 수 있다.
II. matplotlib 설치 설치방법은 윈도우 명령 프롬프트, MacOS, Linux 터미널에서 pip install matplotlib입력하면 되지만, 간혹 여러 환경에 따라 달라질 수 있으니 관련 싸이트에서 확인하기를 바란다.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Tutorial ch7.1 - RNN 이론 (1)</title>
      <link>https://chloevan.github.io/python/tensorflow2.0/ch7_1_2_rnn_theory1/</link>
      <pubDate>Wed, 22 Apr 2020 15:08:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/tensorflow2.0/ch7_1_2_rnn_theory1/</guid>
      <description>공지   본 Tutorial은 교재 시작하세요 텐서플로 2.0 프로그래밍의 강사에게 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다.
  강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶은 반드시 교재를 구매하실 것을 권해드립니다.
   본 교재 외에 강사가 추가한 내용에 대한 Reference를 확인하셔서, 추가적으로 학습하시는 것을 권유드립니다.  Tutorial 이전 강의가 궁금하신 분들은 아래에서 선택하여 추가 학습 하시기를 바랍니다.
 Google Colab Tensorflow 2.0 Installation Tensorflow 2.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Tutorial ch6.4 - 모형의 성능 높이기</title>
      <link>https://chloevan.github.io/python/tensorflow2.0/ch6_4_improve_performance/</link>
      <pubDate>Tue, 21 Apr 2020 21:08:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/tensorflow2.0/ch6_4_improve_performance/</guid>
      <description>공지   본 Tutorial은 교재 시작하세요 텐서플로 2.0 프로그래밍의 강사에게 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다.
  강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶은 반드시 교재를 구매하실 것을 권해드립니다.
   본 교재 외에 강사가 추가한 내용에 대한 Reference를 확인하셔서, 추가적으로 학습하시는 것을 권유드립니다.  Tutorial 이전 강의가 궁금하신 분들은 아래에서 선택하여 추가 학습 하시기를 바랍니다.
 Google Colab Tensorflow 2.0 Installation Tensorflow 2.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Tutorial ch6.3 - Fashion MNIST with CNN 실습</title>
      <link>https://chloevan.github.io/python/tensorflow2.0/ch6_3_fashion_mnist_with_cnn/</link>
      <pubDate>Tue, 21 Apr 2020 16:08:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/tensorflow2.0/ch6_3_fashion_mnist_with_cnn/</guid>
      <description>공지   본 Tutorial은 교재 시작하세요 텐서플로 2.0 프로그래밍의 강사에게 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다.
  강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶은 반드시 교재를 구매하실 것을 권해드립니다.
   본 교재 외에 강사가 추가한 내용에 대한 Reference를 확인하셔서, 추가적으로 학습하시는 것을 권유드립니다.  Tutorial 이전 강의가 궁금하신 분들은 아래에서 선택하여 추가 학습 하시기를 바랍니다.
 Google Colab Tensorflow 2.0 Installation Tensorflow 2.</description>
    </item>
    
    <item>
      <title>Ch04_bigquery_with_R</title>
      <link>https://chloevan.github.io/gcp/bigquery/01_settings/ch04_bigquery_with_r/</link>
      <pubDate>Tue, 21 Apr 2020 11:40:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/gcp/bigquery/01_settings/ch04_bigquery_with_r/</guid>
      <description>1. 구글 클라우드 설정 본격적인 빅쿼리 실습에 앞서서, R과 연동하는 예제를 준비하였다. 빅쿼리 시작에 앞서서 선행적으로 클라우드 사용을 해야 한다.
 만약 GCP 프로젝트가 없다면, 계정을 연동한다. Go to Cloud Resource Manager 그리고, 비용결제를 위한 카드를 등록한다. Enable billing 마지막으로 BigQuery API를 사용해야 하기 때문에 빅쿼리 API 사용허가를 내준다.Enable BigQuery  위 API를 이용하지 않으면 Python 또는 R과 연동해서 사용할 수는 없다. 자주 쓰는것이 아니라면 비용은 거의 발생하지 않으니 염려하지 않아도 된다.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Tutorial ch6.1-2 - CNN 이론</title>
      <link>https://chloevan.github.io/python/tensorflow2.0/ch6_1_2_cnn_theory/</link>
      <pubDate>Tue, 21 Apr 2020 10:08:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/tensorflow2.0/ch6_1_2_cnn_theory/</guid>
      <description>공지   본 Tutorial은 교재 시작하세요 텐서플로 2.0 프로그래밍의 강사에게 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다.
  강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶은 반드시 교재를 구매하실 것을 권해드립니다.
   본 교재 외에 강사가 추가한 내용에 대한 Reference를 확인하셔서, 추가적으로 학습하시는 것을 권유드립니다.  Tutorial 이전 강의가 궁금하신 분들은 아래에서 선택하여 추가 학습 하시기를 바랍니다.
 Google Colab Tensorflow 2.0 Installation Tensorflow 2.</description>
    </item>
    
    <item>
      <title>Ch01 Process Analysis Intro</title>
      <link>https://chloevan.github.io/r/dataanalysis/process_analysis/ch01_process_analysis_intro/</link>
      <pubDate>Mon, 20 Apr 2020 21:10:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/dataanalysis/process_analysis/ch01_process_analysis_intro/</guid>
      <description>I. Process Mining Intro 모든 비즈니스는 프로세스와 연관이 깊다. 이러한 데이터를 통상적으로 event라고 부르며, 다루는 데이터는 log 데이터와 연관이 깊다. 프로세스 마이닝(Process Mining)은 데이터의 추출, 프로세싱, 그리고 분석의 순으로 진행한다.
 데이터 추출 (Extraction): Raw Data를 Event Data로 변환시킨다. 프로세싱 (Processing): 데이터 가공과 비슷하며, 보통 Aggregation, Filtering, Enrichment의 용어가 등장한다. 분석 (Analysis): Performance, Control-Flow 등과 연관된 분석이 진행된다.  우선 빠르게 시각화부터 진행해보자.
library(bupaR) library(httr) library(processmapR) library(edeaR) url &amp;lt;- &amp;#39;https://github.com/chloevan/datasets/blob/master/log/log_eat_patterns.RDS?raw=true&amp;#39; patterns &amp;lt;- readRDS(url(url)) trace_explorer(patients, coverage=1) 위 그래프에 대한 해석은 나중에 하더라도, 위 데이터를 보면, Rgst아 TraA는 공통으로 존재하고, 경로에 따라서 X-Ray, Blood Test에 나뉘는 걸 봐서는 환자의 경로에 관한 데이터임을 알 수 있다.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Tutorial ch5.3 - Fashion MNIST</title>
      <link>https://chloevan.github.io/python/tensorflow2.0/ch5_3_fashion_mnist/</link>
      <pubDate>Mon, 20 Apr 2020 17:08:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/tensorflow2.0/ch5_3_fashion_mnist/</guid>
      <description>공지   본 Tutorial은 교재 시작하세요 텐서플로 2.0 프로그래밍의 강사에게 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다.
  강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶은 반드시 교재를 구매하실 것을 권해드립니다.
   본 교재 외에 강사가 추가한 내용에 대한 Reference를 확인하셔서, 추가적으로 학습하시는 것을 권유드립니다.  Tutorial 이전 강의가 궁금하신 분들은 아래에서 선택하여 추가 학습 하시기를 바랍니다.
 Google Colab Tensorflow 2.0 Installation Tensorflow 2.</description>
    </item>
    
    <item>
      <title>Ch03_bigquery_with_python</title>
      <link>https://chloevan.github.io/gcp/bigquery/01_settings/ch03_bigquery_with_python/</link>
      <pubDate>Sun, 19 Apr 2020 20:40:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/gcp/bigquery/01_settings/ch03_bigquery_with_python/</guid>
      <description>1. 구글 클라우드 설정 본격적인 빅쿼리 실습에 앞서서, Python과 연동하는 예제를 준비하였다. 빅쿼리 시작에 앞서서 선행적으로 클라우드 사용을 해야 한다.
 만약 GCP 프로젝트가 없다면, 계정을 연동한다. Go to Cloud Resource Manager 그리고, 비용결제를 위한 카드를 등록한다. Enable billing 마지막으로 BigQuery API를 사용해야 하기 때문에 빅쿼리 API 사용허가를 내준다.Enable BigQuery  위 API를 이용하지 않으면 Python 또는 R과 연동해서 사용할 수는 없다. 자주 쓰는것이 아니라면 비용은 거의 발생하지 않으니 염려하지 않아도 된다.</description>
    </item>
    
    <item>
      <title>matplotlib 02 bar chart</title>
      <link>https://chloevan.github.io/python/matplotlib/matplotlib_02_barchart/</link>
      <pubDate>Sun, 19 Apr 2020 16:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/matplotlib/matplotlib_02_barchart/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
도움이 되었다면 Github에 Star를 눌러주세요.
 python_visualisation  I. Matplotlib 기본 그래프 Matplotlib는 파이썬 표준 시각화 도구라고 불리워지며 파이썬 그래프의 기본 토대가 된다고 해도 무방하다. 객체지향 프로그래밍을 지원하므로 세세하게 꾸밀 수 있다.
II. matplotlib 설치 설치방법은 윈도우 명령 프롬프트, MacOS, Linux 터미널에서 pip install matplotlib입력하면 되지만, 간혹 여러 환경에 따라 달라질 수 있으니 관련 싸이트에서 확인하기를 바란다.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Tutorial ch5.2 - 다항분류</title>
      <link>https://chloevan.github.io/python/tensorflow2.0/ch5_2_multi_classification/</link>
      <pubDate>Sun, 19 Apr 2020 14:08:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/tensorflow2.0/ch5_2_multi_classification/</guid>
      <description>공지   본 Tutorial은 교재 시작하세요 텐서플로 2.0 프로그래밍의 강사에게 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다.
  강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶은 반드시 교재를 구매하실 것을 권해드립니다.
   본 교재 외에 강사가 추가한 내용에 대한 Reference를 확인하셔서, 추가적으로 학습하시는 것을 권유드립니다.  Tutorial 이전 강의가 궁금하신 분들은 아래에서 선택하여 추가 학습 하시기를 바랍니다.
 Google Colab Tensorflow 2.0 Installation Tensorflow 2.</description>
    </item>
    
    <item>
      <title>R 시각화 튜토리얼 Intro</title>
      <link>https://chloevan.github.io/r/datavisualisation/ch01_intro/</link>
      <pubDate>Sun, 19 Apr 2020 10:10:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/datavisualisation/ch01_intro/</guid>
      <description>Intro  A picture is worth a thousand words — English Language Adage The simple graph has brought more information to the data analyst’s mind than any other device. — John Tukey
 한장의 그림이 수천단어보다 가치가 있다는 영어속담과, 명료한 시각화가 데이터분석가에게 다른 어떤 도구보다 더 많은 정보를 제공한다는 유명한 데이터 과학자의 조언. 핵심은 시각화이다.
본 장에서는 ggplot2 패키지를 활용한 시각화를 먼저 보여줄 것이다. 먼저 간단하게 ggplot2 패키지에 소개하자면 Grammar of Graphics1의 철학을 담아서 R 생태계에서 유명한 학자 중, Hadley Wickham에 의해 주도적으로 개발되었다.</description>
    </item>
    
    <item>
      <title>Ch02 Working with BigQuery</title>
      <link>https://chloevan.github.io/gcp/bigquery/01_settings/ch02_working_with_bigquery/</link>
      <pubDate>Sun, 19 Apr 2020 00:13:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/gcp/bigquery/01_settings/ch02_working_with_bigquery/</guid>
      <description>I. Get Started 일단 시작해보자. https://console.cloud.google.com/bigquery
뉴욕주의 자전거 렌탈이 비가 올때와 그렇지 않을 때 수치를 비교하고자 않다. 어떻게 해야할까? 일단, 필요한 데이터는 두가지가 될 것이다. 첫번째는 자전거 렌탈 데이터가 필요하고, 두번째는 뉴욕주의 날씨와 관련된 데이터이다. 두개의 데이터를 조인(join)한 후 수치를 구해야 할 것이다.
위 화면에서 아래 소스코드를 입력한다.
WITH bicycle_rentals AS ( SELECT COUNT(starttime) as num_trips, EXTRACT(DATE from starttime) as trip_date FROM `bigquery-public-data.new_york_citibike.citibike_trips` GROUP BY trip_date ), rainy_days AS ( SELECT date, (MAX(prcp) &amp;gt; 5) AS rainy FROM ( SELECT wx.</description>
    </item>
    
    <item>
      <title>Shiny 프로젝트 Review &amp; 더 알아볼 것</title>
      <link>https://chloevan.github.io/r/shiny/project_final/</link>
      <pubDate>Sat, 18 Apr 2020 17:15:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/shiny/project_final/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. Shiny Tutorial 소개 처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.
 shiny tutorial 01 - get started shiny tutorial 02 - Shiny Structure shiny tutorial 03 - HTML content shiny tutorial 04 - Shiny Layouts shiny tutorial 05 - Sharing Apps shiny tutorial 06 - shinydashboard shiny tutorial 07 - flexdashboard shiny tutorial 08 - HTML, CSS 적용  II.</description>
    </item>
    
    <item>
      <title>Corona Shiny Project 6_2 - Chart Automation</title>
      <link>https://chloevan.github.io/r/shiny/project_06_02/</link>
      <pubDate>Sat, 18 Apr 2020 14:15:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/shiny/project_06_02/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. Shiny Tutorial 소개 처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.
 shiny tutorial 01 - get started shiny tutorial 02 - Shiny Structure shiny tutorial 03 - HTML content shiny tutorial 04 - Shiny Layouts shiny tutorial 05 - Sharing Apps shiny tutorial 06 - shinydashboard shiny tutorial 07 - flexdashboard shiny tutorial 08 - HTML, CSS 적용  II.</description>
    </item>
    
    <item>
      <title>Pandas Dataframe</title>
      <link>https://chloevan.github.io/python/pandas/pandas_dataframe/</link>
      <pubDate>Sat, 18 Apr 2020 11:32:36 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/pandas/pandas_dataframe/</guid>
      <description>Overview 데이터프레임은 2차원 배열의 행과 열로 구성되어져 있다. 대부분의 사람들이 알고 있는 마이크로소프트사의 EXCEL, SQL Table 등을 생각하면 데이터프레임을 쉽게 이해할 수 있다. 판다스에서 가장 많이 사용되는 객체이며, 실제 파이썬을 활용한 데이터 분석을 하고 싶다면 필수적으로 알아야 하는 내용이다. 기본적으로 Python은 행렬 연산에 최적화된 언어라고 할 수 있지만, 판다스 라이브러리는 R의 데이터프레임에서 유래했다고 알려져 있다.
여기서 잠깐! 초급자 또는 입문자들이 가장 궁금해하는 것 중의 하나가 R과 Python에 대한 비교가 아닐까 싶다.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Tutorial ch5.1 - 분류</title>
      <link>https://chloevan.github.io/python/tensorflow2.0/ch5_1_binary_classification/</link>
      <pubDate>Sat, 18 Apr 2020 11:08:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/tensorflow2.0/ch5_1_binary_classification/</guid>
      <description>공지   본 Tutorial은 교재 시작하세요 텐서플로 2.0 프로그래밍의 강사에게 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다.
  강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶은 반드시 교재를 구매하실 것을 권해드립니다.
   본 교재 외에 강사가 추가한 내용에 대한 Reference를 확인하셔서, 추가적으로 학습하시는 것을 권유드립니다.  Tutorial 이전 강의가 궁금하신 분들은 아래에서 선택하여 추가 학습 하시기를 바랍니다.
 Google Colab Tensorflow 2.0 Installation Tensorflow 2.</description>
    </item>
    
    <item>
      <title>matplotlib 한글 폰트 오류 해결</title>
      <link>https://chloevan.github.io/settings/matplotlib_koreanfont/</link>
      <pubDate>Fri, 17 Apr 2020 23:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/settings/matplotlib_koreanfont/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
도움이 되었다면 Github에 Star를 눌러주세요.
 python_visualisation  Matplotlib 한글폰트 오류 해결 한글을 사랑하지만, 코딩의 예외다. 프로그래밍 언어 자체가 영어기반이기 때문에 그런것도 있고, 아무튼 한글 부분이 네모 박스로 표시되면서 한글폰트가 깨지는 현상이 종종 발생한다. 오류를 해결하려면 먼저 한글폰트를 지정하는 다음의 코드를 추가해야 한다.</description>
    </item>
    
    <item>
      <title>matplotlib_01_linegraph</title>
      <link>https://chloevan.github.io/python/matplotlib/matplotlib_01_linegraph/</link>
      <pubDate>Fri, 17 Apr 2020 11:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/matplotlib/matplotlib_01_linegraph/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
도움이 되었다면 Github에 Star를 눌러주세요.
 python_visualisation  I. Matplotlib 기본 그래프 Matplotlib는 파이썬 표준 시각화 도구라고 불리워지며 파이썬 그래프의 기본 토대가 된다고 해도 무방하다. 객체지향 프로그래밍을 지원하므로 세세하게 꾸밀 수 있다.
II. matplotlib 설치 설치방법은 윈도우 명령 프롬프트, MacOS, Linux 터미널에서 pip install matplotlib입력하면 되지만, 간혹 여러 환경에 따라 달라질 수 있으니 관련 싸이트에서 확인하기를 바란다.</description>
    </item>
    
    <item>
      <title>Round 함수 - digits</title>
      <link>https://chloevan.github.io/r/basics/round/</link>
      <pubDate>Fri, 17 Apr 2020 10:38:15 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/basics/round/</guid>
      <description>Round 함수 소개 round 함수는 대개 소수점 자리에서 반올림 할 때 자주 쓰는다.
test &amp;lt;- c(1.24, 2.40, 3.56, 4.56) round(test, digits = 1) ## [1] 1.2 2.4 3.6 4.6 digits = 1의 의미는 소수점 첫번째 자리에서 반올림 하라는 뜻이다.
그런데 digits = -1을 하게 되면 어떻게 될까?
정수 반올림 빠르게 실습을 해보자.
test2 &amp;lt;- c(-14, -26, 14, 26, 39, 124, 247) round(test2, digits = -1) ## [1] -10 -30 10 30 40 120 250 digits = -1을 하게되면 정수의 첫번째 자리에서 반올림한다.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Tutorial ch4.4 - 보스턴 주택 가격 데이터세트</title>
      <link>https://chloevan.github.io/python/tensorflow2.0/ch4_4_boston_housing_deeplearning/</link>
      <pubDate>Thu, 16 Apr 2020 20:00:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/tensorflow2.0/ch4_4_boston_housing_deeplearning/</guid>
      <description>공지   본 Tutorial은 교재 시작하세요 텐서플로 2.0 프로그래밍의 강사에게 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다.
  강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶은 반드시 교재를 구매하실 것을 권해드립니다.
   본 교재 외에 강사가 추가한 내용에 대한 Reference를 확인하셔서, 추가적으로 학습하시는 것을 권유드립니다.  Tutorial 이전 강의가 궁금하신 분들은 아래에서 선택하여 추가 학습 하시기를 바랍니다.
 Google Colab Tensorflow 2.0 Installation Tensorflow 2.</description>
    </item>
    
    <item>
      <title>Ch01 BigQuery getstarted</title>
      <link>https://chloevan.github.io/gcp/bigquery/01_settings/ch01_bigquery_getstarted/</link>
      <pubDate>Thu, 16 Apr 2020 11:40:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/gcp/bigquery/01_settings/ch01_bigquery_getstarted/</guid>
      <description>I. 자료 정리를 하며.. 데이터 분석가에게 또는 싸이언티스트들에게 SQL문법은 매우 중요하다. 지금도 어딘가에는 데이터는 쌓이고 있고, 문제는 쌓여 있는 데이터를 활용해서 어떤 비즈니스 문제를 해결할지가 가장 큰 이슈이기 때문이다.
그동안 SQL은 MySQL과 RDB 문법, MongoDB와 NoSQL과 같은 문법으로 나누어서 볼 수 있다. 강사가 과거 프로젝트에서 사용했던 SQL은 MySQL, MSSQL, MongoDB가 있었는데, 각각의 문법이 다르다는 측면이 있어서 조금 애를 많이 먹었다. 특히 MongoDB문법은 JSON 형태로 되어 있기 때문에, 별도의 문법이라 보는게 더 낫다.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Tutorial ch4.3 - 딥러닝 네트워크를 이용한 회귀</title>
      <link>https://chloevan.github.io/python/tensorflow2.0/ch4_3_regression_with_deeplearning/</link>
      <pubDate>Wed, 15 Apr 2020 20:40:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/tensorflow2.0/ch4_3_regression_with_deeplearning/</guid>
      <description>공지   본 Tutorial은 교재 시작하세요 텐서플로 2.0 프로그래밍의 강사에게 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다.
  강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶은 반드시 교재를 구매하실 것을 권해드립니다.
   본 교재 외에 강사가 추가한 내용에 대한 Reference를 확인하셔서, 추가적으로 학습하시는 것을 권유드립니다.  Tutorial 이전 강의가 궁금하신 분들은 아래에서 선택하여 추가 학습 하시기를 바랍니다.
 Google Colab Tensorflow 2.0 Installation Tensorflow 2.</description>
    </item>
    
    <item>
      <title>Hugo &#43; Mathjax 설정</title>
      <link>https://chloevan.github.io/settings/mathjax/</link>
      <pubDate>Wed, 15 Apr 2020 13:40:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/settings/mathjax/</guid>
      <description>I. 인라인 수식 에러 한동안 수식 에러를 많나 고생하였다. $$ ... $$ 코드는 잘 적용이 되었다. 그런데, 글 중간에 수식을 넣는 건 잘 되지 않았다. $ ... $ 표현하면 수식문법이 그대로 나와서 글의 가독성이 조금 떨어져 있었다. 통계수식을 넣어주면, 그냥 무언가 전문가스럽다! 전문가도 아니지만 ㅎㅎ
 $x_{i}$ 내가 표현하고자 하는 것 Vs. x_{i} 실제로 화면에 나오는 것  그리고, 한동안 헤매었다. 길은 알고 있었으나, 역시 적용이 쉽지 않았다. 아래는 해결 방안을 공유한다.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Tutorial ch4.2 - 다항 회귀</title>
      <link>https://chloevan.github.io/python/tensorflow2.0/ch4_2_multiple_linear_regression/</link>
      <pubDate>Wed, 15 Apr 2020 13:40:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/tensorflow2.0/ch4_2_multiple_linear_regression/</guid>
      <description>공지   본 Tutorial은 교재 시작하세요 텐서플로 2.0 프로그래밍의 강사에게 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다.
  강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶은 반드시 교재를 구매하실 것을 권해드립니다.
   본 교재 외에 강사가 추가한 내용에 대한 Reference를 확인하셔서, 추가적으로 학습하시는 것을 권유드립니다.  Tutorial 이전 강의가 궁금하신 분들은 아래에서 선택하여 추가 학습 하시기를 바랍니다.
 Google Colab Tensorflow 2.0 Installation Tensorflow 2.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Tutorial ch4.1 - 선형회귀</title>
      <link>https://chloevan.github.io/python/tensorflow2.0/ch4_1_linear_regression/</link>
      <pubDate>Tue, 14 Apr 2020 22:40:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/tensorflow2.0/ch4_1_linear_regression/</guid>
      <description>공지  본 Tutorial은 교재 시작하세요 텐서플로 2.0 프로그래밍의 강사에게 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다. 강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶은 반드시 교재를 구매하실 것을 권해드립니다.   본 교재 외에 강사가 추가한 내용에 대한 Reference를 확인하셔서, 추가적으로 학습하시는 것을 권유드립니다.  Tutorial 이전 강의가 궁금하신 분들은 아래에서 선택하여 추가 학습 하시기를 바랍니다.
 Google Colab Tensorflow 2.0 Installation Tensorflow 2.0 Tutorial ch3.</description>
    </item>
    
    <item>
      <title>Corona Shiny Project 6_1 - 데이터 전처리</title>
      <link>https://chloevan.github.io/r/shiny/project_06_01/</link>
      <pubDate>Tue, 14 Apr 2020 10:15:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/shiny/project_06_01/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. Shiny Tutorial 소개 처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.
 shiny tutorial 01 - get started shiny tutorial 02 - Shiny Structure shiny tutorial 03 - HTML content shiny tutorial 04 - Shiny Layouts shiny tutorial 05 - Sharing Apps shiny tutorial 06 - shinydashboard shiny tutorial 07 - flexdashboard shiny tutorial 08 - HTML, CSS 적용  II.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Tutorial ch3.3.5 - 세번째 신경망 네트워크 - XOR</title>
      <link>https://chloevan.github.io/python/tensorflow2.0/ch3_3_5_network_xor/</link>
      <pubDate>Mon, 13 Apr 2020 21:40:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/tensorflow2.0/ch3_3_5_network_xor/</guid>
      <description>공지  본 Tutorial은 교재 시작하세요 텐서플로 2.0 프로그래밍의 강사에게 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다. 강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶은 반드시 교재를 구매하실 것을 권해드립니다.   본 교재 외에 강사가 추가한 내용에 대한 Reference를 확인하셔서, 추가적으로 학습하시는 것을 권유드립니다.  Tutorial 이전 강의가 궁금하신 분들은 아래에서 선택하여 추가 학습 하시기를 바랍니다.
 Google Colab Tensorflow 2.0 Installation Tensorflow 2.0 Tutorial ch3.</description>
    </item>
    
    <item>
      <title>GT 패키지 소개</title>
      <link>https://chloevan.github.io/r/newpkgs/gt_intro/</link>
      <pubDate>Mon, 13 Apr 2020 00:21:01 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/newpkgs/gt_intro/</guid>
      <description>공지 본 블로그는 2020-04-08에 소개된 Great Looking Tables: gt(v0.2) by Richard Iannone 글을 번역한 것이다. 함수와 관련된 설명은 가급적 원어를 직접 인용 했으니, 영어로 직접 함수의 사용처를 음미하시길 바란다.
I. Intro gt라는 이름은 grammar of tables즉 &amp;ldquo;테이블의 문법&amp;quot;의 줄임말이며 gt의 목표는 ggplot2와 비슷하게 운영하는 것이다. 특정 테이블을 쉽게 만들 수 있을 뿐만 아니라 다양한 문제를 해결하기 위해 서로 다른 방법으로 재결합할 수 있는 기본 구성요소 집합을 기술하는 역할을 한다.
R 사용자가 맞춤형(customized) 테이블을 R Markdown에서 만들 필요가 있다면, gt 패키지가 그 과정에 도움을 줄 것이다.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Tutorial ch3.3.4 - 두번째 신경망 네트워크: OR</title>
      <link>https://chloevan.github.io/python/tensorflow2.0/ch3_3_4_network_or/</link>
      <pubDate>Sun, 12 Apr 2020 23:40:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/tensorflow2.0/ch3_3_4_network_or/</guid>
      <description>공지  본 Tutorial은 교재 시작하세요 텐서플로 2.0 프로그래밍의 강사에게 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다. 강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶은 반드시 교재를 구매하실 것을 권해드립니다.   본 교재 외에 강사가 추가한 내용에 대한 Reference를 확인하셔서, 추가적으로 학습하시는 것을 권유드립니다.  Tutorial 이전 강의가 궁금하신 분들은 아래에서 선택하여 추가 학습 하시기를 바랍니다.
 Google Colab Tensorflow 2.0 Installation Tensorflow 2.0 Tutorial ch3.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Tutorial ch3.3.3 - 첫번째 신경망 네트워크, AND</title>
      <link>https://chloevan.github.io/python/tensorflow2.0/ch3_3_3_network_and/</link>
      <pubDate>Sat, 11 Apr 2020 11:20:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/tensorflow2.0/ch3_3_3_network_and/</guid>
      <description>공지  본 Tutorial은 교재 시작하세요 텐서플로 2.0 프로그래밍의 강사에게 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다. 강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶은 반드시 교재를 구매하실 것을 권해드립니다.   본 교재 외에 강사가 추가한 내용에 대한 Reference를 확인하셔서, 추가적으로 학습하시는 것을 권유드립니다.  Tutorial 이전 강의가 궁금하신 분들은 아래에서 선택하여 추가 학습 하시기를 바랍니다.
 Google Colab Tensorflow 2.0 Installation Tensorflow 2.0 Tutorial ch3.</description>
    </item>
    
    <item>
      <title>Corona Shiny Project 5 - Chart with DateInput</title>
      <link>https://chloevan.github.io/r/shiny/project_05/</link>
      <pubDate>Sat, 11 Apr 2020 10:15:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/shiny/project_05/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. Shiny Tutorial 소개 처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.
 shiny tutorial 01 - get started shiny tutorial 02 - Shiny Structure shiny tutorial 03 - HTML content shiny tutorial 04 - Shiny Layouts shiny tutorial 05 - Sharing Apps shiny tutorial 06 - shinydashboard shiny tutorial 07 - flexdashboard shiny tutorial 08 - HTML, CSS 적용  II.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Tutorial ch3.3.2 - 난수 생성 및 시그모이드 함수 편향성</title>
      <link>https://chloevan.github.io/python/tensorflow2.0/ch3_3_2_random_signoid_bias/</link>
      <pubDate>Fri, 10 Apr 2020 10:20:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/tensorflow2.0/ch3_3_2_random_signoid_bias/</guid>
      <description>공지  본 Tutorial은 교재 시작하세요 텐서플로 2.0 프로그래밍의 강사에게 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다. 강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶은 반드시 교재를 구매하실 것을 권해드립니다.   본 교재 외에 강사가 추가한 내용에 대한 Reference를 확인하셔서, 추가적으로 학습하시는 것을 권유드립니다.  Tutorial 이전 강의가 궁금하신 분들은 아래에서 선택하여 추가 학습 하시기를 바랍니다.
 Google Colab Tensorflow 2.0 Installation Tensorflow 2.0 Tutorial ch3.</description>
    </item>
    
    <item>
      <title>Corona Shiny Project 4 - Visusalization (Map Chart)</title>
      <link>https://chloevan.github.io/r/shiny/project_04/</link>
      <pubDate>Thu, 09 Apr 2020 10:10:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/shiny/project_04/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. Shiny Tutorial 소개 처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.
 shiny tutorial 01 - get started shiny tutorial 02 - Shiny Structure shiny tutorial 03 - HTML content shiny tutorial 04 - Shiny Layouts shiny tutorial 05 - Sharing Apps shiny tutorial 06 - shinydashboard shiny tutorial 07 - flexdashboard shiny tutorial 08 - HTML, CSS 적용  II.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Tutorial ch3.3.1 - 난수 생성 및 시그모이드 함수</title>
      <link>https://chloevan.github.io/python/tensorflow2.0/ch3_3_1_random_signoid/</link>
      <pubDate>Wed, 08 Apr 2020 11:20:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/tensorflow2.0/ch3_3_1_random_signoid/</guid>
      <description>공지  본 Tutorial은 교재 시작하세요 텐서플로 2.0 프로그래밍의 강사에게 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다. 강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶은 반드시 교재를 구매하실 것을 권해드립니다.   본 교재 외에 강사가 추가한 내용에 대한 Reference를 확인하셔서, 추가적으로 학습하시는 것을 권유드립니다.  I. 퍼셉트론의 한계 극복 AI는 과거부터 존재하였지만, 여러가지 한계로 인해 연구의 흥망성쇠가 계속적으로 있어왔다. 퍼셉트론의 한계를 지적하는 데 사용됐던, AND, OR, XOR 연산을 할 수 있는 신경망 네트워크를 직접 만들어보자.</description>
    </item>
    
    <item>
      <title>Corona Shiny Project 3 - Visusalization (Bubble Chart)</title>
      <link>https://chloevan.github.io/r/shiny/project_03/</link>
      <pubDate>Wed, 08 Apr 2020 10:10:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/shiny/project_03/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. Shiny Tutorial 소개 처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.
 shiny tutorial 01 - get started shiny tutorial 02 - Shiny Structure shiny tutorial 03 - HTML content shiny tutorial 04 - Shiny Layouts shiny tutorial 05 - Sharing Apps shiny tutorial 06 - shinydashboard shiny tutorial 07 - flexdashboard shiny tutorial 08 - HTML, CSS 적용  II.</description>
    </item>
    
    <item>
      <title>Corona Shiny Project 2 - Visusalization (Time Series)</title>
      <link>https://chloevan.github.io/r/shiny/project_02/</link>
      <pubDate>Tue, 07 Apr 2020 10:10:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/shiny/project_02/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. Shiny Tutorial 소개 처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.
 shiny tutorial 01 - get started shiny tutorial 02 - Shiny Structure shiny tutorial 03 - HTML content shiny tutorial 04 - Shiny Layouts shiny tutorial 05 - Sharing Apps shiny tutorial 06 - shinydashboard shiny tutorial 07 - flexdashboard shiny tutorial 08 - HTML, CSS 적용  II.</description>
    </item>
    
    <item>
      <title>Corona Shiny Project I - Get Data</title>
      <link>https://chloevan.github.io/r/shiny/project_01/</link>
      <pubDate>Mon, 06 Apr 2020 09:10:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/shiny/project_01/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. Shiny Tutorial 소개 처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.
 shiny tutorial 01 - get started shiny tutorial 02 - Shiny Structure shiny tutorial 03 - HTML content shiny tutorial 04 - Shiny Layouts shiny tutorial 05 - Sharing Apps shiny tutorial 06 - shinydashboard shiny tutorial 07 - flexdashboard shiny tutorial 08 - HTML, CSS 적용  II.</description>
    </item>
    
    <item>
      <title>shiny tutorial 08 - HTML, CSS 적용</title>
      <link>https://chloevan.github.io/r/shiny/tutorial_08/</link>
      <pubDate>Sun, 05 Apr 2020 11:30:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/shiny/tutorial_08/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. 이전 글 소개 처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.
 shiny tutorial 01 - get started shiny tutorial 02 - Shiny Structure shiny tutorial 03 - HTML content shiny tutorial 04 - Shiny Layouts shiny tutorial 05 - Sharing Apps shiny tutorial 06 - shinydashboard shiny tutorial 07 - flexdashboard  II.</description>
    </item>
    
    <item>
      <title>Connecting Jupyter Notebook to VS Code</title>
      <link>https://chloevan.github.io/settings/settings02_vscode2jupyter/</link>
      <pubDate>Sun, 05 Apr 2020 00:30:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/settings/settings02_vscode2jupyter/</guid>
      <description>I. 개요 VS Code에 Jupyter Notebook을 연동해본다. 강사는 R &amp;amp; Python을 연동해서 작업할 일이 많다. 특히 블로그를 쓰다보면 더욱 그러한 일이 많은데, IDE가 많으면 많을수록 무언가 복잡스러워 보일 때가 많다. 이 때 좀 더 효율적으로 일하고자 하는 마음에 VS Code에 Jupyter Notebook을 추가 및 연동하는 작업을 진행해본다.
II. Installation 내용의 간결화를 위해, VS Code 및 Jupyter Notebook 설치 방법은 본 포스트에서는 생략한다.
 VS Code 설치방법: https://code.visualstudio.com/download Jupyter Notebook 설치 방법: https://jupyter.</description>
    </item>
    
    <item>
      <title>Google Colab Tensorflow 2.0 Installation</title>
      <link>https://chloevan.github.io/python/tensorflow2.0/googlecolab/</link>
      <pubDate>Sat, 04 Apr 2020 11:03:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/tensorflow2.0/googlecolab/</guid>
      <description>I. 공지 이번 포스트부터 강사의 과거-기존-미래 수강생들이 보다 효율적으로 공부할 수 있도록 구글코랩에서 진행하는 텐서플로 2.0 Tutorial을 준비한다.
II. 개요 GPU를 활용하여, 딥러닝을 연습하고 공부하고 싶지만, 쉽지많은 않다. 구글 코랩의 존재는 예전부터 알고 있었지만, 마땅히 정리를 하지 못하던 찰나에, 이제 본격적으로 강의 준비를 하며 2020년은 구글 코랩과 함께 하기로 결정하였다. 특히 텐서플로 Tutorial을 준비하면서 개인적으로 많이 성장하기를 바라며..
III. Why Tensorflow 2.0? 비즈니스적으로 접근을 해보자. 앱의 경우, 2007년쯤 IOS가 출시된 이후, 경쟁자로 Andorid가 등장했다.</description>
    </item>
    
    <item>
      <title>Pandas Filtering</title>
      <link>https://chloevan.github.io/python/pandas/filter/</link>
      <pubDate>Fri, 03 Apr 2020 22:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/pandas/filter/</guid>
      <description>Overview 필터링은 특정 조건식을 만족하는 행을 따로 추출하는 개념이다. 특정 행의 값에 조건식 True/False을 판별하여 값을 추출하는 방법이다. 이 때, 비교 연산자 또는 조건식 (&amp;gt;, &amp;lt;, ==, ...)을 적용하면 행을 추출할 수 있다.
우선 데이터부터 확인한다. 아래 소스코드를 복사 붙여넣기 하면 데이터를 확인할 수 있다.
import pandas as pd url = &amp;#39;https://github.com/chloevan/datasets/raw/master/entertainment/movie_ticket_sales.xlsx&amp;#39; sales = pd.read_excel(url) print(sales.head())  theater_name movie_title ticket_type \ 0 Sumdance Cinemas Harry Plotter senior 1 The Empirical House 10 Things I Hate About Unix child 2 The Empirical House The Seaborn Identity adult 3 Sumdance Cinemas 10 Things I Hate About Unix adult 4 The Empirical House Mamma Median!</description>
    </item>
    
    <item>
      <title>Pandas sort_values()</title>
      <link>https://chloevan.github.io/python/pandas/sort_values/</link>
      <pubDate>Fri, 03 Apr 2020 20:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/pandas/sort_values/</guid>
      <description>I. Overview sort_values() 함수는 일종의 데이터의 정렬과 연관이 있다. 어려운 내용은 아니기 때문에 빠르게 소스 코드 구현 및 확인 하도록 한다.
II. Sample Tutorial 엑셀로 된 ticket_sales 데이터에서 ticket_quantity가 가장 많이 팔린 영화 Top3를 구하는 소스코드를 구해본다.
import pandas as pd url = &amp;#39;https://github.com/chloevan/datasets/raw/master/entertainment/movie_ticket_sales.xlsx&amp;#39; sales = pd.read_excel(url) print(sales.head())  theater_name movie_title ticket_type \ 0 Sumdance Cinemas Harry Plotter senior 1 The Empirical House 10 Things I Hate About Unix child 2 The Empirical House The Seaborn Identity adult 3 Sumdance Cinemas 10 Things I Hate About Unix adult 4 The Empirical House Mamma Median!</description>
    </item>
    
    <item>
      <title>shiny tutorial 07 - flexdashboard package</title>
      <link>https://chloevan.github.io/r/shiny/tutorial_07/</link>
      <pubDate>Thu, 02 Apr 2020 21:10:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/shiny/tutorial_07/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. 이전 글 소개 처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.
 shiny tutorial 01 - get started shiny tutorial 02 - Shiny Structure shiny tutorial 03 - HTML content shiny tutorial 04 - Shiny Layouts shiny tutorial 05 - Sharing Apps shiny tutorial 06 - shinydashboard  II.</description>
    </item>
    
    <item>
      <title>shiny tutorial 06 - shinydashboard package</title>
      <link>https://chloevan.github.io/r/shiny/tutorial_06/</link>
      <pubDate>Wed, 01 Apr 2020 17:10:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/shiny/tutorial_06/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. 이전 글 소개 처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.
 shiny tutorial 01 - get started shiny tutorial 02 - Shiny Structure shiny tutorial 03 - HTML content shiny tutorial 04 - Shiny Layouts shiny tutorial 05 - Sharing Apps  II.</description>
    </item>
    
    <item>
      <title>shiny tutorial 05 - Sharing Apps</title>
      <link>https://chloevan.github.io/r/shiny/tutorial_05/</link>
      <pubDate>Tue, 31 Mar 2020 01:10:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/shiny/tutorial_05/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. 이전 글 소개 처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.
 shiny tutorial 01 - get started shiny tutorial 02 - Shiny Structure shiny tutorial 03 - HTML content shiny tutorial 04 - Shiny Layouts  II. Shiny Deployment의 개요 이 영역은 웹개발자에게는 매우 쉬운 영역일 수도 있다.</description>
    </item>
    
    <item>
      <title>Pandas With Excel</title>
      <link>https://chloevan.github.io/python/pandas/pandas_with_excel/</link>
      <pubDate>Mon, 30 Mar 2020 11:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/pandas/pandas_with_excel/</guid>
      <description>I. Overview 이번 포스트는 기존의 엑셀 사용자를 위해 준비했다. 엑셀에 익숙한 사람들에게 파이썬을 분석 용도로 사용하고자 하는 분들에게는 작은 도움이 되기를 바란다.
II. 데이터 입출력 판다스는 다양한 형태의 외부 파일을 읽을 수 있다. CSV, MS Excel, SQL, HDF5 Format과 같은 파일 포맷을 읽을 수 있다. 파일 포맷(File Format)에 따른 데이터 입출력 도구에 관한 자료를 요약하면 다음과 같다.
   파일 포맷 How to Read? How to Write?     CSV read_csv to_csv   MS Excel read_excel to_excel   SQL read_sql to_sql    그 외에 HTML, JSON, SAS 포맷과 같은 파일을 읽어오는 다양한 방법에 대해서는 Pandas 공식문서(PDF 다운로드)를 참조하기를 바란다.</description>
    </item>
    
    <item>
      <title>shiny tutorial 04 - Layouts</title>
      <link>https://chloevan.github.io/r/shiny/tutorial_04/</link>
      <pubDate>Sun, 29 Mar 2020 23:50:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/shiny/tutorial_04/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. 이전 글 소개 처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.
 shiny tutorial 01 - get started shiny tutorial 02 - Shiny Structure shiny tutorial 03 - HTML content  II. Layouts의 개요 이번 시간에는 Shiny Layouts 개요에 대한 간략적인 소개를 하려고 한다.</description>
    </item>
    
    <item>
      <title>shiny tutorial 03 - HTML content</title>
      <link>https://chloevan.github.io/r/shiny/tutorial_03/</link>
      <pubDate>Fri, 27 Mar 2020 23:50:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/shiny/tutorial_03/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. 이전 글 소개 처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.
 shiny tutorial 01 - get started shiny tutorial 02 - Shiny Structure  II. HTML Content 개요 이번 시간에는 HTML Content 개요에 대한 간략적인 소개를 하려고 한다.</description>
    </item>
    
    <item>
      <title>Pandas Lambda Apply 함수 활용</title>
      <link>https://chloevan.github.io/python/pandas/apply/</link>
      <pubDate>Mon, 23 Mar 2020 20:10:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/pandas/apply/</guid>
      <description>I. Iterrows, Itertuples 복습 이번 포스팅은 For-loop의 대안에 관한 함수 apply에 관한 내용이다. 본 포스트를 보고 학습하시기 전에 Pandas Iterrows 함수 활용과 Pandas Itertuples 함수 활용에서 학습 하기를 바란다.
지난시간과 마찬가지로 데이터는 동일한 것을 쓰도록 한다.
import pandas as pd import io import requests import pprint url = &amp;#39;https://raw.githubusercontent.com/chloevan/datasets/master/sports/baseball_stats.csv&amp;#39; url=requests.get(url).content baseball_stats = pd.read_csv(io.StringIO(url.decode(&amp;#39;utf-8&amp;#39;))) pprint.pprint(baseball_stats.head())  Team League Year RS RA W OBP SLG BA Playoffs RankSeason \ 0 ARI NL 2012 734 688 81 0.</description>
    </item>
    
    <item>
      <title>Pandas Itertuples 함수 활용</title>
      <link>https://chloevan.github.io/python/pandas/itertuples/</link>
      <pubDate>Sun, 22 Mar 2020 20:36:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/pandas/itertuples/</guid>
      <description>I. Iterrows 이번 포스팅은 Iterrows()의 확장개념입니다. 본 포스트를 보고 학습하시기 전에 Pandas Iterrows 함수 활용에서 학습 하기를 바란다.
II. Itertuples의 개념 itertuples()는 기본적으로 iterrows() 함수보다는 빠르다.
import pandas as pd import io import requests import pprint url = &amp;#39;https://raw.githubusercontent.com/chloevan/datasets/master/sports/baseball_stats.csv&amp;#39; url=requests.get(url).content baseball_stats = pd.read_csv(io.StringIO(url.decode(&amp;#39;utf-8&amp;#39;))) pprint.pprint(baseball_stats.head())  Team League Year RS RA W OBP SLG BA Playoffs RankSeason \ 0 ARI NL 2012 734 688 81 0.33 0.42 0.26 0 NaN 1 ATL NL 2012 700 600 94 0.</description>
    </item>
    
    <item>
      <title>shiny tutorial 02 - Shiny Structure</title>
      <link>https://chloevan.github.io/r/shiny/tutorial_02/</link>
      <pubDate>Sun, 22 Mar 2020 12:33:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/shiny/tutorial_02/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. Shiny 소개 지난시간에 Shiny에 관한 대략적인 소개를 했다. 처음 이 페이지를 방문한 사람들 위해 shiny tutorial 01 - get started 에서 짧게 확인하기를 바란다.
II. Shiny App Structure 아래 샘플 코드를 확인하자.
# load the shiny package library(shiny) # 화면 구성 (UI) - 프론트엔드 ui &amp;lt;- fluidPage( numericInput(inputId = &amp;#34;n&amp;#34;, label = &amp;#34;Sample size&amp;#34;, value = 25), plotOutput(outputId = &amp;#34;hist&amp;#34;) ) # 서버 구성 - 벡엔드 server &amp;lt;- function(input, output) { output$hist &amp;lt;- renderPlot({ hist(rnorm(input$n)) # 결과물을 만들어내는 코드 작성 }) } # shiny app 호출 # 프로젝트 진행 시, 폴더 안에 # 파일명은 app.</description>
    </item>
    
    <item>
      <title>shiny tutorial 01 - get started</title>
      <link>https://chloevan.github.io/r/shiny/tutorial_01/</link>
      <pubDate>Sat, 21 Mar 2020 12:33:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/shiny/tutorial_01/</guid>
      <description>공지 이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다
이번에 준비한 Tutorial 코로나 세계현황을 Shiny Dashboard로 만들어 가는 과정을 담았다.
I. Shiny 소개 Shiny는 R에서 제공하는 일종의 Web Framework이다. 기존 웹사이트와 다르게, 주요 목적은 데이터를 활용해서 대시보드를 만드는 것에 초점이 맞춰져 있다.
가장 큰 장점은 무료로 빠른 프로토타입을 만들 수 있고, HTML, CSS, Javascript와 직접적으로 호환이 되기 때문에 무한한 확장성이 있다. 바로 중급 레벨에서 배우고 싶으시다면 Intermediate Level을 클릭한다.</description>
    </item>
    
    <item>
      <title>Pandas Iterrows 함수 활용</title>
      <link>https://chloevan.github.io/python/pandas/iterrows/</link>
      <pubDate>Fri, 20 Mar 2020 20:32:10 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/pandas/iterrows/</guid>
      <description>I. Iterrows의 개념 데이터 전처리를 진행할 때, 데이터프레임에서 행에 반복적으로 접근을 하면서 값을 추출하거나 또는 그 값을 조작하는 일이 발생한다. 예를 들면, 특정 컬럼 A의 값에서 대문자 A를 찾아내 소문자 b로 변경한다고 가정해보자. 이런 경우에는 언제나 For-loop를 통한 반복문 코드 작성을 만들어야 한다.
이럴 때 보다 효율적으로 접근하는 방법 중 하나가 iterrows()를 사용하는 경우이다.
import pandas as pd import io import requests import pprint url = &amp;#39;https://raw.githubusercontent.com/chloevan/datasets/master/sports/baseball_stats.csv&amp;#39; url=requests.get(url).content baseball_stats = pd.</description>
    </item>
    
    <item>
      <title>Machine Learning Tutorial 02 - Regression (2)</title>
      <link>https://chloevan.github.io/python/machin_learning/scikit_regression/ml01_regression2/</link>
      <pubDate>Fri, 20 Mar 2020 13:11:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/machin_learning/scikit_regression/ml01_regression2/</guid>
      <description>I. 지도 학습 VS 비지도 학습 머신러닝은 크게 두 가지 유형으로 분류한다. 우선 아래 표를 보자.
   구분 지도학습(Supervised Learning) 비지도 학습(Unsupervised Learning)     알고리즘(분석모형) 회귀분석분류모형 군집분석   특징 정답을 알고 있는 상태에서 학습모형 평가 방법이 다양한 편 정답이 없는 상태에서 서로 비슷한 데이터를 찾아서 그룹화모형 평가 방법이 제한적    지도학습(Supervised Learning)은 종속변수(Dependent Variable) 선정이 매우 중요하며. 종속변수 선정과 함께 데이터 분석도 같이 병행이 된다.</description>
    </item>
    
    <item>
      <title>Machine Learning Tutorial 01 - Regression (1)</title>
      <link>https://chloevan.github.io/python/machin_learning/scikit_regression/ml01_regression/</link>
      <pubDate>Thu, 19 Mar 2020 18:11:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/machin_learning/scikit_regression/ml01_regression/</guid>
      <description>I 지도 학습 VS 비지도 학습 머신러닝은 크게 두 가지 유형으로 분류한다. 우선 아래 표를 보자.
   구분 지도학습(Supervised Learning) 비지도 학습(Unsupervised Learning)     알고리즘(분석모형) 회귀분석분류모형 군집분석   특징 정답을 알고 있는 상태에서 학습모형 평가 방법이 다양한 편 정답이 없는 상태에서 서로 비슷한 데이터를 찾아서 그룹화모형 평가 방법이 제한적    지도학습(Supervised Learning)은 종속변수(Dependent Variable) 선정이 매우 중요하며. 종속변수 선정과 함께 데이터 분석도 같이 병행이 된다.</description>
    </item>
    
    <item>
      <title>R Markdown Introduction</title>
      <link>https://chloevan.github.io/r/rmarkdown/rmarkdownintro/</link>
      <pubDate>Wed, 18 Mar 2020 13:10:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/rmarkdown/rmarkdownintro/</guid>
      <description>R Markdown 소개 및 환경설정 데이터 분석가의 주요 업무 중의 하나는 향후에 참고자료로 활용하기 위해 작업결과를 문서화 해야 하는데, 상당량의 보고서를 작성해서 분석과정과 출력결과를 기술해야만 합니다.
보통의 과정은 아래과 같을 것입니다.
 1단계: 본인의 작업을 위해서 R 스크립트 작성 2단계: 다양한 그래프가 첨부된 분석결과를 Word, PPT 분석결과를 기술해서 동료 또는 메신저로 분석결과 전송 3단계: 분석결과 토의 4단계: 각각의 그래프 결과 코드를 매칭하기 위한 작업이 토의 중 발생 5단계: 혼란 및 불필요한 시간 소요 발생  그런데, 해당 작업물을 그 때 마다 웹페이지(HTML)을 생성하여 자체 서버내 구축할 수 있다면, 그러면 위 5단계의 과정을 3단계(소스코드 작성 -&amp;gt; 웹 게시 -&amp;gt; 분석결과 토의)로 축소할 수가 있을 것이며 특히, 연구자가 분석 당시의 고민과 문제점들을 스크롤링과 함께 같이 고민할 수 있는 시간으로 빠져들 수 있도록 유도할 수 있습니다.</description>
    </item>
    
    <item>
      <title>Leaflet for R</title>
      <link>https://chloevan.github.io/r/graph01_leaflet/</link>
      <pubDate>Tue, 17 Mar 2020 20:33:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/graph01_leaflet/</guid>
      <description>1. Introduction Leaflet 패키지는 동적 지도 시각화를 위한 자바스크립트-오픈소스 기반 라이브러리입니다. 일반적인 기업 회사 뿐만 아니라 GIS 전문 회사인 OpenStreetMap, Mapbox, 그리고 CartoDB에서도 이 패키지를 사용하고 있습니다.
R의 leaflet 패키지는 일종의 자바스크립트의 Leaflet을 쉽게 연동(Integrate) 할 수 있도록 도와 주는 패키지입니다.
2. Features 패키지의 주요 특징은 아래와 같습니다. 오역 방지를 위해 원문에 있는 내용을 그대로 사용했습니다.
  Interactive panning/zooming
  Compose maps using arbitrary combinations of:
 Map tiles Markers Polygons Lines Popups GeoJSON    Create maps right from the R console or RStudio</description>
    </item>
    
    <item>
      <title>Tensorflow For R - Quick Start</title>
      <link>https://chloevan.github.io/r/settings01_installation/</link>
      <pubDate>Mon, 16 Mar 2020 20:33:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/settings01_installation/</guid>
      <description>1. 개요 (Overview) tensorflow(텐서플로) R 패키지를 사용하기 전에 시스템에 TensorFlow 버전을 설치해야 한다. 아래에서는 TensorFlow 설치 방법과 설치 사용자 정의에 사용할 수 있는 다양한 옵션에 대해 설명 한다.
이번 포스트에서는 주로 R install_tensorflow() 함수의 사용을 다루며, 이는 TensorFlow를 설치하는 데 필요한 다양한 단계에서 wrapper 쉽게 사용할 수 있도록 도와 준다.
Tensorflow(텐서플로)는 아래와 같은 OS 환경에서 구동이 된다.
 Ubuntu 16.04 or later Windows 7 or later macOS 10.12.6 (Sierra) or later (no GPU support)  2.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Installation</title>
      <link>https://chloevan.github.io/python/settings01_installation/</link>
      <pubDate>Sun, 15 Mar 2020 21:32:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/settings01_installation/</guid>
      <description>I. 개요 pip를 사용하여 TensorFlow 설치를 해본다.
II. 시스템 요구사항  Python 3.5-3.7 pip 19.0 이상(manylinux2010 지원 필요) Ubuntu 16.04 이상(64비트) macOS 10.12.6(Sierra) 이상(64비트)(GPU 지원 없음) Windows 7 이상(64비트)(Python 3만 해당) Raspbian 9.0 이상 GPU 지원에는 CUDA® 지원 카드 필요(Ubuntu 및 Windows)  참고: TensorFlow2를 설치하려면 최신 버전의 pip가 필요하다.
III. 시스템에 Python 개발 환경 설치 (1) 환경 구성 우선 확인 우선, Python 환경이 이미 구성되었는지 확인합니다. 참고: Python 3.5~3.7 및 pip &amp;gt;= 19.</description>
    </item>
    
    <item>
      <title>Stat01_hypothesis</title>
      <link>https://chloevan.github.io/r/stat01_hypothesis/</link>
      <pubDate>Sun, 15 Mar 2020 21:23:58 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/stat01_hypothesis/</guid>
      <description>가설 설정 가설의 유형 (1) 귀무가설 ~
(2) 연구가설 ~~</description>
    </item>
    
    <item>
      <title>About ChloEvan</title>
      <link>https://chloevan.github.io/about/</link>
      <pubDate>Sun, 15 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://chloevan.github.io/about/</guid>
      <description>데이터 분석을 좋아하고 사랑하는 ChloEvan의 개인 블로그입니다. 데이터 과학과 관련한 다양한 글을 여기에서 집필할 예정이며, 강의 관련 자료나, 새로나운 모듈 또는 패키지 소개글을 올릴 예정입니다.
30대 초반에 통계/컴공 비전공자이며, 경력을 전환하면서, 쉽지는 않았습니다. 그러나, 지금은 프로젝트 및 강의, 스스로 독학하며 개발블로그까지 만들정도가 되었습니다. 이 개발블로그를 구글링하며, 구축한 것도 하루가 걸리지 않았습니다. (구글 Analytics, Search Console, Adsense까지 모두 작업 완료!)
어려운 시기에, 동종업계로 이직 및 전환을 하고 싶은 사람들에게 좋은 글과 영감을 주는 사람이고 있습니다.</description>
    </item>
    
  </channel>
</rss>