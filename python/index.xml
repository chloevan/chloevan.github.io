<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pythons on Data Science | ChloEvan</title>
    <link>https://chloevan.github.io/python/</link>
    <description>Recent content in Pythons on Data Science | ChloEvan</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 19 Mar 2020 01:55:52 +0900</lastBuildDate>
    
	<atom:link href="https://chloevan.github.io/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Jupyter Notebook KernelError</title>
      <link>https://chloevan.github.io/python/kernelerror/</link>
      <pubDate>Thu, 19 Mar 2020 01:55:52 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/kernelerror/</guid>
      <description>Kernel Error시 확인 사항 Jupyter notebook 실행은 되나 Cell 실행시 에러가 생기는 경우가 있을 것이다.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Installation</title>
      <link>https://chloevan.github.io/python/settings01_installation/</link>
      <pubDate>Sun, 15 Mar 2020 21:32:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/settings01_installation/</guid>
      <description>I. 개요 pip를 사용하여 TensorFlow 설치를 해본다.
II. 시스템 요구사항  Python 3.5-3.7 pip 19.0 이상(manylinux2010 지원 필요) Ubuntu 16.04 이상(64비트) macOS 10.12.6(Sierra) 이상(64비트)(GPU 지원 없음) Windows 7 이상(64비트)(Python 3만 해당) Raspbian 9.0 이상 GPU 지원에는 CUDA® 지원 카드 필요(Ubuntu 및 Windows)  참고: TensorFlow2를 설치하려면 최신 버전의 pip가 필요하다.
III. 시스템에 Python 개발 환경 설치 (1) 환경 구성 우선 확인 우선, Python 환경이 이미 구성되었는지 확인합니다. 참고: Python 3.5~3.7 및 pip &amp;gt;= 19.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://chloevan.github.io/python/pandas/test/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chloevan.github.io/python/pandas/test/</guid>
      <description>::: {.cell .border-box-sizing .text_cell .rendered} ::: {.prompt .input_prompt} :::
::: {.inner_cell} ::: {.text_cell_render .border-box-sizing .rendered_html} Iterrows의 개념¶{.anchor-link} 데이터 전처리를 진행할 때, 데이터프레임에서 행에 반복적으로 접근을 하면서 값을 추출하거나 또는 그 값을 조작하는 일이 발생한다. 예를 들면, 특정 컬럼 A의 값에서 대문자 A를 찾아내 소문자 b로 변경한다고 가정해보자. 이런 경우에는 언제나 For-loop를 통한 반복문 코드 작성을 만들어야 한다.
이럴 때 보다 효율적으로 접근하는 방법 중 하나가 iterrows()를 사용하는 경우이다. ::: ::: :::</description>
    </item>
    
  </channel>
</rss>