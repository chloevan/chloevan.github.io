<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Data Science | ChloEvan</title>
    <link>https://chloevan.github.io/</link>
    <description>Recent content on Data Science | ChloEvan</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 15 Mar 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://chloevan.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Python Pandas - iterrows</title>
      <link>https://chloevan.github.io/python/pandas/iterrows/</link>
      <pubDate>Wed, 18 Mar 2020 21:32:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/pandas/iterrows/</guid>
      <description>Iterrows의 개념 데이터 전처리를 진행할 때, 데이터프레임에서 행에 반복적으로 접근을 하면서 값을 추출하거나 또는 그 값을 조작하는 일이 발생한다. 예를 들면, 특정 컬럼 A의 값에서 대문자 A를 찾아내 소문자 b로 변경한다고 가정해보자. 이런 경우에는 언제나 For- loop를 통한 반복문 코드 작성을 만들어야 한다.
이럴 때 보다 효율적으로 접근하는 방법 중 하나가 iterrows()를 사용하는 경우이다.
import pandas as pd url = &#39;https://assets.datacamp.com/production/repositories/3581/datasets/779033fb8fb5021aee9ff46253980abcbc5851f3/baseball_stats.csv&#39; baseball_stats = pd.read_csv(url) baseball_stats.to_csv(&#39;/Users/jihoonjung/Desktop/baseball_stats.csv&#39;, sep=&#39;,&#39;, na_rep=&#39;NaN&#39;, float_format = &#39;%.2f&#39;, # 2 decimal places columns = [&#39;ID&#39;, &#39;X2&#39;], # columns to write index = False) # do not write index [ { &amp;#34;ename&amp;#34;: &amp;#34;ModuleNotFoundError&amp;#34;, &amp;#34;evalue&amp;#34;: &amp;#34;No module named &amp;#39;pandas&amp;#39;&amp;#34;, &amp;#34;output_type&amp;#34;: &amp;#34;error&amp;#34;, &amp;#34;traceback&amp;#34;: [ &amp;#34;\u001b[0;31m---------------------------------------------------------------------------\u001b[0m&amp;#34;, &amp;#34;\u001b[0;31mModuleNotFoundError\u001b[0m Traceback (most recent call last)&amp;#34;, &amp;#34;\u001b[0;32m&amp;lt;ipython-input-1-6762f61e341b&amp;gt;\u001b[0m in \u001b[0;36m&amp;lt;module&amp;gt;\u001b[0;34m\u001b[0m\n\u001b[0;32m----&amp;gt; 1\u001b[0;31m \u001b[0;32mimport\u001b[0m \u001b[0mpandas\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m 2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m 3\u001b[0m \u001b[0murl\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m&amp;#39;https://assets.</description>
    </item>
    
    <item>
      <title>Tensorflow For R - Quick Start</title>
      <link>https://chloevan.github.io/r/settings01_installation/</link>
      <pubDate>Mon, 16 Mar 2020 20:33:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/settings01_installation/</guid>
      <description>1. 개요 (Overview) tensorflow(텐서플로) R 패키지를 사용하기 전에 시스템에 TensorFlow 버전을 설치해야 한다. 아래에서는 TensorFlow 설치 방법과 설치 사용자 정의에 사용할 수 있는 다양한 옵션에 대해 설명 한다.
이번 포스트에서는 주로 R install_tensorflow() 함수의 사용을 다루며, 이는 TensorFlow를 설치하는 데 필요한 다양한 단계에서 wrapper 쉽게 사용할 수 있도록 도와 준다.
Tensorflow(텐서플로)는 아래와 같은 OS 환경에서 구동이 된다.
 Ubuntu 16.04 or later Windows 7 or later macOS 10.12.6 (Sierra) or later (no GPU support)  2.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Installation</title>
      <link>https://chloevan.github.io/python/settings01_installation/</link>
      <pubDate>Sun, 15 Mar 2020 21:32:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/settings01_installation/</guid>
      <description>I. 개요 pip를 사용하여 TensorFlow 설치를 해본다.
II. 시스템 요구사항  Python 3.5-3.7 pip 19.0 이상(manylinux2010 지원 필요) Ubuntu 16.04 이상(64비트) macOS 10.12.6(Sierra) 이상(64비트)(GPU 지원 없음) Windows 7 이상(64비트)(Python 3만 해당) Raspbian 9.0 이상 GPU 지원에는 CUDA® 지원 카드 필요(Ubuntu 및 Windows)  참고: TensorFlow2를 설치하려면 최신 버전의 pip가 필요하다.
III. 시스템에 Python 개발 환경 설치 (1) 환경 구성 우선 확인 우선, Python 환경이 이미 구성되었는지 확인합니다. 참고: Python 3.5~3.7 및 pip &amp;gt;= 19.</description>
    </item>
    
    <item>
      <title>Stat01_hypothesis</title>
      <link>https://chloevan.github.io/r/stat01_hypothesis/</link>
      <pubDate>Sun, 15 Mar 2020 21:23:58 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/stat01_hypothesis/</guid>
      <description>가설 설정 가설의 유형 (1) 귀무가설 ~
(2) 연구가설 ~~</description>
    </item>
    
    <item>
      <title>About ChloEvan</title>
      <link>https://chloevan.github.io/about/</link>
      <pubDate>Sun, 15 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://chloevan.github.io/about/</guid>
      <description>데이터 분석을 좋아하고 사랑하는 ChloEvan의 개인 블로그입니다. 데이터 과학과 관련한 다양한 글을 여기에서 집필할 예정이며, 강의 관련 자료나, 새로나운 모듈 또는 패키지 소개글을 올릴 예정입니다.
30대 초반에 통계/컴공 비전공자이며, 경력을 전환하면서, 쉽지는 않았습니다. 그러나, 지금은 프로젝트 및 강의, 스스로 독학하며 개발블로그까지 만들정도가 되었습니다. 이 개발블로그를 구글링하며, 구축한 것도 하루가 걸리지 않았습니다. (구글 Analytics, Search Console, Adsense까지 모두 작업 완료!)
어려운 시기에, 동종업계로 이직 및 전환을 하고 싶은 사람들에게 좋은 글과 영감을 주는 사람이고 있습니다.</description>
    </item>
    
    <item>
      <title>Leaflet for R</title>
      <link>https://chloevan.github.io/r/graph01_leaflet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chloevan.github.io/r/graph01_leaflet/</guid>
      <description>1. Introduction Leaflet 패키지는 동적 지도 시각화를 위한 자바스크립트-오픈소스 기반 라이브러리입니다. 일반적인 기업 회사 뿐만 아니라 GIS 전문 회사인 OpenStreetMap, Mapbox, 그리고 CartoDB에서도 이 패키지를 사용하고 있습니다.
R의 leaflet 패키지는 일종의 자바스크립트의 Leaflet을 쉽게 연동(Integrate) 할 수 있도록 도와 주는 패키지입니다.
2. Features 패키지의 주요 특징은 아래와 같습니다. 오역 방지를 위해 원문에 있는 내용을 그대로 사용했습니다.
  Interactive panning/zooming
  Compose maps using arbitrary combinations of:
 Map tiles Markers Polygons Lines Popups GeoJSON    Create maps right from the R console or RStudio</description>
    </item>
    
  </channel>
</rss>