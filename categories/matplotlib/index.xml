<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Matplotlib on Data Science | ChloEvan</title>
    <link>https://chloevan.github.io/categories/matplotlib/</link>
    <description>Recent content in Matplotlib on Data Science | ChloEvan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 27 Apr 2020 16:15:47 +0900</lastBuildDate>
    
        <atom:link href="https://chloevan.github.io/categories/matplotlib/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>matplotlib 05 pie plot</title>
      <link>https://chloevan.github.io/python/matplotlib/matplotlib_05_pie_chart/</link>
      <pubDate>Mon, 27 Apr 2020 16:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/matplotlib/matplotlib_05_pie_chart/</guid>
      <description>&lt;h2 id=&#34;공지&#34;&gt;공지&lt;/h2&gt;
&lt;p&gt;제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.&lt;/p&gt;
&lt;p&gt;도움이 되었다면 &lt;code&gt;Github&lt;/code&gt;에 &lt;code&gt;Star&lt;/code&gt;를 눌러주세요.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/chloevan/python_visualisation&#34;&gt;python_visualisation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;i-matplotlib--seaborn&#34;&gt;I. Matplotlib &amp;amp; Seaborn&lt;/h2&gt;
&lt;h3 id=&#34;1-기본-개요&#34;&gt;(1) 기본 개요&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Matplotlib&lt;/code&gt;는 파이썬 표준 시각화 도구라고 불리워지며 파이썬 그래프의 기본 토대가 된다고 해도 무방하다. 객체지향 프로그래밍을 지원하므로 세세하게 꾸밀 수 있다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Seaborn&lt;/code&gt; 그래는 파이썬 시각화 도구의 고급 버전이다. &lt;code&gt;Matplotlib&lt;/code&gt;에 비해 비교적 단순한 인터페이스를 제공하기 때문에 초보자도 어렵지 않게 배울 수 있다.&lt;/p&gt;
&lt;h3 id=&#34;2-matplotlib--seabon-설치&#34;&gt;(2) matplotlib &amp;amp; Seabon 설치&lt;/h3&gt;
&lt;p&gt;설치방법은 윈도우 명령 프롬프트, MacOS, Linux 터미널에서 &lt;code&gt;pip install matplotlib&lt;/code&gt;입력하면 되지만, 간혹 여러 환경에 따라 달라질 수 있으니 관련 싸이트에서 확인하기를 바란다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;matplotlib 설치 방법: &lt;a href=&#34;https://matplotlib.org/users/installing.html&#34;&gt;https://matplotlib.org/users/installing.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;seaborn 설치 방법: &lt;a href=&#34;https://seaborn.pydata.org/installing.html&#34;&gt;https://seaborn.pydata.org/installing.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ii-pie-plot&#34;&gt;II. Pie Plot&lt;/h2&gt;
&lt;p&gt;Pie Chart는 빈도수와 연관이 있는데, 사실 이 그래프는 약간의 호불호가 존재한다. Ian Spence는 &lt;a href=&#34;https://www.researchgate.net/profile/Ian_Spence2/publication/228401311_No_Humble_Pie_The_Origins_and_Usage_of_a_Statistical_Chart/links/0fcfd50c206a89af2e000000/No-Humble-Pie-The-Origins-and-Usage-of-a-Statistical-Chart.pdf?origin=publication_detail&#34;&gt;No Humble Pie:
The Origins and Usage of a Statistical Chart&lt;/a&gt; 라는 페이퍼를 작성했는데, 요지는 이 그래프가 대부분의 전문가들에게 어필하는데 실패했다는 것이다.&lt;/p&gt;
&lt;p&gt;구체적인 이유는 위 논문에서 영어공부도 할겸 찾아보시기를 바란다.&lt;/p&gt;
&lt;p&gt;그럼에도 불구하고, 여전히 사람들은 &lt;code&gt;Pie Chart&lt;/code&gt;가 원에서 비율을 직관적으로 확인할 수 있다는 것에 만족해 하는 것 같다. 특히, 상사나 클라이언트의 연령대가 높으면 높을수록 이러한 그래프를 좋아할 가능성은 경험적으로 조금 높았다.&lt;/p&gt;
&lt;p&gt;빠르게 그래프를 작성하기 위해 데이터부터 가져온다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pd
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; tabulate &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; tabulate

url &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://raw.githubusercontent.com/hmcuesta/PDA_Book/master/Chapter3/pokemonByType.csv&amp;#39;&lt;/span&gt;
pokemonByType &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read_csv(url, index_col&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;type&amp;#39;&lt;/span&gt;)

&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(tabulate(pokemonByType&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head(&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;), tablefmt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;pipe&amp;#39;&lt;/span&gt;, headers&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;keys&amp;#39;&lt;/span&gt;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;| type     |   amount |
|:---------|---------:|
| Bug      |       45 |
| Dark     |       16 |
| Dragon   |       12 |
| Electric |        7 |
| Fighting |        3 |
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;샘플 데이터는 매우 중요하다. 처음에는 그 중요성을 잘 몰랐으나, 샘플 데이터의 뜻은 기본적으로 앞단에서 데이터를 전처리하여, 샘플 데이터화 처럼 만들어 달라는 뜻이기도 하다.&lt;/p&gt;
&lt;p&gt;샘플 데이터를 다시 확인해보면, 첫번째 열은 문자로 구성이 되어 있고, 두번째 열은 숫자로 구성이 되어 있는 것을 확인하고 있다.&lt;/p&gt;
&lt;p&gt;즉, 데이터의 빈도수를 말하는 것이다. 이걸 그래프로 그리면 어떻게 될까?&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; plt
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pie(pokemonByType[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;amount&amp;#39;&lt;/span&gt;], labels&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;pokemonByType&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index, 
        shadow&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;False, startangle&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;90&lt;/span&gt;, autopct&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%1.1f%%&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;axis(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;equal&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/matplotlib/matplotlib_05_pie_chart/output_6_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;이렇게 완성이 되었다. 위 그래프는 사실 기본 그래프이고, 조금 더 응용해서 작업할 수도 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; plt
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; numpy &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; np
&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;func&lt;/span&gt;(pct, allvals):
    absolute &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; int(pct&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100.&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sum(allvals))
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{:.1f}%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;({:d} cnt)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(pct, absolute)


plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;figure(figsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;))
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pie(pokemonByType[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;amount&amp;#39;&lt;/span&gt;], labels&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;pokemonByType&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index, 
        shadow&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;False, startangle&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;90&lt;/span&gt;, autopct&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;lambda&lt;/span&gt; pct: func(pct, pokemonByType), 
        textprops&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;dict(color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;w&amp;#34;&lt;/span&gt;))

plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;legend(pokemonByType&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index,
          title&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PokemonByType Count&amp;#34;&lt;/span&gt;,
          loc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;center left&amp;#34;&lt;/span&gt;,
          bbox_to_anchor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;))
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;axis(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;equal&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/matplotlib/matplotlib_05_pie_chart/output_8_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;iii-실습파일&#34;&gt;III. 실습파일&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;구글코랩에서 빠르게 실습도 할 수 있습니다. &lt;a href=&#34;https://colab.research.google.com/github/chloevan/python_visualisation/blob/master/matplotlib/matplotlib_05_pie_chart.ipynb.ipynb&#34;&gt;실습&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;iv-reference&#34;&gt;IV. Reference&lt;/h2&gt;
&lt;p&gt;Mukhiya, Uuresh Kumar. Ahmed Usman. Hands-on Exploratory Data Analysis With Python: Perform EDA Techniques to understand, Summarize, and Investigate Your Data. Packt publishing limited, 2020.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>matplotlib 04 area and stacked plot</title>
      <link>https://chloevan.github.io/python/matplotlib/matplotlib_04_area_stacked_plot/</link>
      <pubDate>Sat, 25 Apr 2020 01:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/matplotlib/matplotlib_04_area_stacked_plot/</guid>
      <description>&lt;h2 id=&#34;공지&#34;&gt;공지&lt;/h2&gt;
&lt;p&gt;제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.&lt;/p&gt;
&lt;p&gt;도움이 되었다면 &lt;code&gt;Github&lt;/code&gt;에 &lt;code&gt;Star&lt;/code&gt;를 눌러주세요.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/chloevan/python_visualisation&#34;&gt;python_visualisation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;i-matplotlib--seaborn&#34;&gt;I. Matplotlib &amp;amp; Seaborn&lt;/h2&gt;
&lt;h3 id=&#34;1-기본-개요&#34;&gt;(1) 기본 개요&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Matplotlib&lt;/code&gt;는 파이썬 표준 시각화 도구라고 불리워지며 파이썬 그래프의 기본 토대가 된다고 해도 무방하다. 객체지향 프로그래밍을 지원하므로 세세하게 꾸밀 수 있다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Seaborn&lt;/code&gt; 그래는 파이썬 시각화 도구의 고급 버전이다. &lt;code&gt;Matplotlib&lt;/code&gt;에 비해 비교적 단순한 인터페이스를 제공하기 때문에 초보자도 어렵지 않게 배울 수 있다.&lt;/p&gt;
&lt;h3 id=&#34;2-matplotlib--seabon-설치&#34;&gt;(2) matplotlib &amp;amp; Seabon 설치&lt;/h3&gt;
&lt;p&gt;설치방법은 윈도우 명령 프롬프트, MacOS, Linux 터미널에서 &lt;code&gt;pip install matplotlib&lt;/code&gt;입력하면 되지만, 간혹 여러 환경에 따라 달라질 수 있으니 관련 싸이트에서 확인하기를 바란다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;matplotlib 설치 방법: &lt;a href=&#34;https://matplotlib.org/users/installing.html&#34;&gt;https://matplotlib.org/users/installing.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;seaborn 설치 방법: &lt;a href=&#34;https://seaborn.pydata.org/installing.html&#34;&gt;https://seaborn.pydata.org/installing.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ii-area-and-stacked-plot&#34;&gt;II. Area and Stacked Plot&lt;/h2&gt;
&lt;p&gt;위 그래프를 사용할 때에는 다양한 변수의 소위 누적 효과(&lt;code&gt;cumulative effect&lt;/code&gt;)를 보여줄 수 있다는 장점이 있다.&lt;/p&gt;
&lt;p&gt;먼저 &lt;code&gt;Line Graph&lt;/code&gt;를 작성한 후 각각의 변수에 따라 어떤 차이가 있는지 확인한다. 그래프를 작성해보자.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 데이터 값 생성&lt;/span&gt;
houseLoanMortage &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;9000&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;9000&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;8000&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;9000&lt;/span&gt;, 
                    &lt;span style=&#34;color:#ae81ff&#34;&gt;8000&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;9000&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;9000&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;9000&lt;/span&gt;, 
                    &lt;span style=&#34;color:#ae81ff&#34;&gt;9000&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;8000&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;9000&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;9000&lt;/span&gt;]
utilitiesBills &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;4218&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4218&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4218&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4218&lt;/span&gt;, 
                  &lt;span style=&#34;color:#ae81ff&#34;&gt;4218&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4218&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4219&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2218&lt;/span&gt;, 
                  &lt;span style=&#34;color:#ae81ff&#34;&gt;3218&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4233&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3000&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3000&lt;/span&gt;]

&lt;span style=&#34;color:#75715e&#34;&gt;# 시각화를 위한 모듈 불러오기&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; plt
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; seaborn &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; sns

&lt;span style=&#34;color:#75715e&#34;&gt;# 각 변수의 길이에 맞도록 지정 (월이라고 가정해보자)&lt;/span&gt;
months &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [x &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;)]

&lt;span style=&#34;color:#75715e&#34;&gt;# plot 기본 세팅, 색상 지정&lt;/span&gt;
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot([], [], color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sandybrown&amp;#39;&lt;/span&gt;, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;houseLoanMortage&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot([], [], color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;bisque&amp;#39;&lt;/span&gt;, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;utilitiesBills&amp;#39;&lt;/span&gt;)

&lt;span style=&#34;color:#75715e&#34;&gt;# stack 그래프 추가&lt;/span&gt;
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stackplot(months, houseLoanMortage, utilitiesBills, 
              colors &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sandybrown&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;bisque&amp;#39;&lt;/span&gt;])
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;legend()

&lt;span style=&#34;color:#75715e&#34;&gt;# 라벨 추가&lt;/span&gt;
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;title(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Household Expenses&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;xlabel(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Months of the year&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ylabel(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Cost&amp;#39;&lt;/span&gt;)

plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/matplotlib/matplotlib_04_area_stacked_plot/output_4_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;소스 코드상으로 어려운 것은 아마 없을 것이다. 다만 해석에 조금 유의할 필요는 있다. 위 그래프는 월별 전체 누적 그래프인데, &lt;code&gt;houseLoanMortage&lt;/code&gt;와 &lt;code&gt;utilitiesBills&lt;/code&gt; 사이에 어떤 항목이 지출이 큰 부분인지를 확인할 수 있을 것이다.&lt;/p&gt;
&lt;p&gt;이러한 그래프는 특히 시계열과 그래프를 작성하는 데, 비교군이 존재할 때 매우 유용한 그래프라고 할 수 있다.&lt;/p&gt;
&lt;h2 id=&#34;iii-코로나-시각화-area-plot-예제&#34;&gt;III. 코로나 시각화 Area Plot 예제&lt;/h2&gt;
&lt;p&gt;이번에는 이슈가 되고 있는 코로나 데이터를 통해 그래프를 작성해본다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pd
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; tabulate &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; tabulate

url &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://raw.githubusercontent.com/chloevan/datasets/master/covid_19/covid_19.csv&amp;#39;&lt;/span&gt;
covid_19 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read_csv(url)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(tabulate(covid_19&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head(), tablefmt&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pipe&amp;#34;&lt;/span&gt;, headers&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;keys&amp;#34;&lt;/span&gt;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;|    | dateRep    |   day |   month |   year |   cases |   deaths | countriesAndTerritories   | geoId   | countryterritoryCode   |   popData2018 |
|---:|:-----------|------:|--------:|-------:|--------:|---------:|:--------------------------|:--------|:-----------------------|--------------:|
|  0 | 2020/04/05 |     5 |       4 |   2020 |      35 |        1 | Afghanistan               | AF      | AFG                    |   3.71724e+07 |
|  1 | 2020/04/04 |     4 |       4 |   2020 |       0 |        0 | Afghanistan               | AF      | AFG                    |   3.71724e+07 |
|  2 | 2020/04/03 |     3 |       4 |   2020 |      43 |        0 | Afghanistan               | AF      | AFG                    |   3.71724e+07 |
|  3 | 2020/04/02 |     2 |       4 |   2020 |      26 |        0 | Afghanistan               | AF      | AFG                    |   3.71724e+07 |
|  4 | 2020/04/01 |     1 |       4 |   2020 |      25 |        0 | Afghanistan               | AF      | AFG                    |   3.71724e+07 |
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;위 데이터에서 이제, 대표적인 국가만 출력하는 것으로 한다. 그럴려면 국가를 알아야 하기 때문에, 국가만 출력하도록 해보자. &lt;code&gt;unique()&lt;/code&gt; 함수를 사용해서 구해본다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;covid_19[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;countriesAndTerritories&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;unique()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;array([&#39;Afghanistan&#39;, &#39;Albania&#39;, &#39;Andorra&#39;, &#39;Algeria&#39;, &#39;Angola&#39;,
       &#39;Anguilla&#39;, &#39;Antigua_and_Barbuda&#39;, &#39;Argentina&#39;, &#39;Armenia&#39;, &#39;Aruba&#39;,
       &#39;Australia&#39;, &#39;Austria&#39;, &#39;Azerbaijan&#39;, &#39;Bahamas&#39;, &#39;Bahrain&#39;,
       &#39;Bangladesh&#39;, &#39;Barbados&#39;, &#39;Belarus&#39;, &#39;Belgium&#39;, &#39;Belize&#39;, &#39;Benin&#39;,
       &#39;Bermuda&#39;, &#39;Bhutan&#39;, &#39;Bolivia&#39;,
       &#39;Bonaire, Saint Eustatius and Saba&#39;, &#39;Bosnia_and_Herzegovina&#39;,
       &#39;Botswana&#39;, &#39;Brazil&#39;, &#39;British_Virgin_Islands&#39;,
       &#39;Brunei_Darussalam&#39;, &#39;Bulgaria&#39;, &#39;Burkina_Faso&#39;, &#39;Burundi&#39;,
       &#39;Cambodia&#39;, &#39;Cameroon&#39;, &#39;Canada&#39;, &#39;Cape_Verde&#39;,
       &#39;Cases_on_an_international_conveyance_Japan&#39;, &#39;Cayman_Islands&#39;,
       &#39;Central_African_Republic&#39;, &#39;Chad&#39;, &#39;Chile&#39;, &#39;China&#39;, &#39;Colombia&#39;,
       &#39;Congo&#39;, &#39;Costa_Rica&#39;, &#39;Cote_dIvoire&#39;, &#39;Croatia&#39;, &#39;Cuba&#39;,
       &#39;CuraÃ§ao&#39;, &#39;Cyprus&#39;, &#39;Czech_Republic&#39;,
       &#39;Democratic_Republic_of_the_Congo&#39;, &#39;Denmark&#39;, &#39;Djibouti&#39;,
       &#39;Dominica&#39;, &#39;Dominican_Republic&#39;, &#39;Ecuador&#39;, &#39;Egypt&#39;,
       &#39;El_Salvador&#39;, &#39;Equatorial_Guinea&#39;, &#39;Eritrea&#39;, &#39;Estonia&#39;,
       &#39;Eswatini&#39;, &#39;Ethiopia&#39;, &#39;Falkland_Islands_(Malvinas)&#39;,
       &#39;Faroe_Islands&#39;, &#39;Fiji&#39;, &#39;Finland&#39;, &#39;France&#39;, &#39;French_Polynesia&#39;,
       &#39;Gabon&#39;, &#39;Gambia&#39;, &#39;Georgia&#39;, &#39;Germany&#39;, &#39;Ghana&#39;, &#39;Gibraltar&#39;,
       &#39;Greece&#39;, &#39;Greenland&#39;, &#39;Grenada&#39;, &#39;Guam&#39;, &#39;Guatemala&#39;, &#39;Guernsey&#39;,
       &#39;Guinea&#39;, &#39;Guinea_Bissau&#39;, &#39;Guyana&#39;, &#39;Haiti&#39;, &#39;Holy_See&#39;,
       &#39;Honduras&#39;, &#39;Hungary&#39;, &#39;Iceland&#39;, &#39;India&#39;, &#39;Indonesia&#39;, &#39;Iran&#39;,
       &#39;Iraq&#39;, &#39;Ireland&#39;, &#39;Isle_of_Man&#39;, &#39;Israel&#39;, &#39;Italy&#39;, &#39;Jamaica&#39;,
       &#39;Japan&#39;, &#39;Jersey&#39;, &#39;Jordan&#39;, &#39;Kazakhstan&#39;, &#39;Kenya&#39;, &#39;Kosovo&#39;,
       &#39;Kuwait&#39;, &#39;Kyrgyzstan&#39;, &#39;Laos&#39;, &#39;Latvia&#39;, &#39;Lebanon&#39;, &#39;Liberia&#39;,
       &#39;Libya&#39;, &#39;Liechtenstein&#39;, &#39;Lithuania&#39;, &#39;Luxembourg&#39;, &#39;Madagascar&#39;,
       &#39;Malawi&#39;, &#39;Malaysia&#39;, &#39;Maldives&#39;, &#39;Mali&#39;, &#39;Malta&#39;, &#39;Mauritania&#39;,
       &#39;Mauritius&#39;, &#39;Mexico&#39;, &#39;Moldova&#39;, &#39;Monaco&#39;, &#39;Mongolia&#39;,
       &#39;Montenegro&#39;, &#39;Montserrat&#39;, &#39;Morocco&#39;, &#39;Mozambique&#39;, &#39;Myanmar&#39;,
       &#39;Namibia&#39;, &#39;Nepal&#39;, &#39;Netherlands&#39;, &#39;New_Caledonia&#39;, &#39;New_Zealand&#39;,
       &#39;Nicaragua&#39;, &#39;Niger&#39;, &#39;Nigeria&#39;, &#39;North_Macedonia&#39;,
       &#39;Northern_Mariana_Islands&#39;, &#39;Norway&#39;, &#39;Oman&#39;, &#39;Pakistan&#39;,
       &#39;Palestine&#39;, &#39;Panama&#39;, &#39;Papua_New_Guinea&#39;, &#39;Paraguay&#39;, &#39;Peru&#39;,
       &#39;Philippines&#39;, &#39;Poland&#39;, &#39;Portugal&#39;, &#39;Puerto_Rico&#39;, &#39;Qatar&#39;,
       &#39;Romania&#39;, &#39;Russia&#39;, &#39;Rwanda&#39;, &#39;Saint_Barthelemy&#39;,
       &#39;Saint_Kitts_and_Nevis&#39;, &#39;Saint_Lucia&#39;,
       &#39;Saint_Vincent_and_the_Grenadines&#39;, &#39;San_Marino&#39;, &#39;Saudi_Arabia&#39;,
       &#39;Senegal&#39;, &#39;Serbia&#39;, &#39;Seychelles&#39;, &#39;Sierra_Leone&#39;, &#39;Singapore&#39;,
       &#39;Sint_Maarten&#39;, &#39;Slovakia&#39;, &#39;Slovenia&#39;, &#39;Somalia&#39;, &#39;South_Africa&#39;,
       &#39;South_Korea&#39;, &#39;Spain&#39;, &#39;Sri_Lanka&#39;, &#39;Sudan&#39;, &#39;Suriname&#39;, &#39;Sweden&#39;,
       &#39;Switzerland&#39;, &#39;Syria&#39;, &#39;Taiwan&#39;, &#39;Thailand&#39;, &#39;Timor_Leste&#39;,
       &#39;Togo&#39;, &#39;Trinidad_and_Tobago&#39;, &#39;Tunisia&#39;, &#39;Turkey&#39;,
       &#39;Turks_and_Caicos_islands&#39;, &#39;Uganda&#39;, &#39;Ukraine&#39;,
       &#39;United_Arab_Emirates&#39;, &#39;United_Kingdom&#39;,
       &#39;United_Republic_of_Tanzania&#39;, &#39;United_States_of_America&#39;,
       &#39;United_States_Virgin_Islands&#39;, &#39;Uruguay&#39;, &#39;Uzbekistan&#39;,
       &#39;Venezuela&#39;, &#39;Vietnam&#39;, &#39;Zambia&#39;, &#39;Zimbabwe&#39;], dtype=object)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;여기에서 &lt;code&gt;South_Korea&lt;/code&gt;, &lt;code&gt;China&lt;/code&gt;, &lt;code&gt;Italy&lt;/code&gt;, &lt;code&gt;United_States_of_America&lt;/code&gt; 이렇게 4개 국가만 날짜별로 어떻게 달라지는지 확인해본다.&lt;/p&gt;
&lt;p&gt;먼저 &lt;code&gt;isin()&lt;/code&gt;을 활용해서 데이터 전처리를 해서 새로운 데이터를 만든다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; tabulate &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; tabulate

new_data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; covid_19[covid_19[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;countriesAndTerritories&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;isin([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;South_Korea&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;China&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Italy&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;United_States_of_America&amp;#39;&lt;/span&gt;])]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;reset_index(drop &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; True)
temp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; new_data&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head()
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(tabulate(temp, tablefmt&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pipe&amp;#34;&lt;/span&gt;, headers&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;keys&amp;#34;&lt;/span&gt;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;|    | dateRep    |   day |   month |   year |   cases |   deaths | countriesAndTerritories   | geoId   | countryterritoryCode   |   popData2018 |
|---:|:-----------|------:|--------:|-------:|--------:|---------:|:--------------------------|:--------|:-----------------------|--------------:|
|  0 | 2020/04/05 |     5 |       4 |   2020 |      48 |        3 | China                     | CN      | CHN                    |   1.39273e+09 |
|  1 | 2020/04/04 |     4 |       4 |   2020 |      62 |        4 | China                     | CN      | CHN                    |   1.39273e+09 |
|  2 | 2020/04/03 |     3 |       4 |   2020 |      70 |       10 | China                     | CN      | CHN                    |   1.39273e+09 |
|  3 | 2020/04/02 |     2 |       4 |   2020 |     100 |        6 | China                     | CN      | CHN                    |   1.39273e+09 |
|  4 | 2020/04/01 |     1 |       4 |   2020 |      54 |        1 | China                     | CN      | CHN                    |   1.39273e+09 |
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# stack 그래프를 작성하기 위해 데이터를 피벗을 해줘야 한다.  &lt;/span&gt;
plotDF &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; new_data&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_index([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dateRep&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;countriesAndTerritories&amp;#39;&lt;/span&gt;])[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;cases&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;unstack(fill_value&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(tabulate(plotDF&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head(), tablefmt&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pipe&amp;#34;&lt;/span&gt;, headers&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;keys&amp;#34;&lt;/span&gt;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;| dateRep    |   China |   Italy |   South_Korea |   United_States_of_America |
|:-----------|--------:|--------:|--------------:|---------------------------:|
| 2019/12/31 |      27 |       0 |             0 |                          0 |
| 2020/01/01 |       0 |       0 |             0 |                          0 |
| 2020/01/02 |       0 |       0 |             0 |                          0 |
| 2020/01/03 |      17 |       0 |             0 |                          0 |
| 2020/01/04 |       0 |       0 |             0 |                          0 |
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;이렇게 피벗이 완성이 된 이후에 그래프를 작성해본다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;figure(figsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;))
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;xticks(rotation&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;, size&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;)

plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stackplot(plotDF&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index,
              [plotDF[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;China&amp;#39;&lt;/span&gt;], plotDF[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Italy&amp;#39;&lt;/span&gt;],
               plotDF[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;South_Korea&amp;#39;&lt;/span&gt;], plotDF[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;United_States_of_America&amp;#39;&lt;/span&gt;]],
              labels&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;China&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Italy&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;South_Korea&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;United_States_of_America&amp;#39;&lt;/span&gt;],
              alpha&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.8&lt;/span&gt;)

plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;legend(loc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, fontsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;large&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/matplotlib/matplotlib_04_area_stacked_plot/output_14_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;iv-실습파일&#34;&gt;IV. 실습파일&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;구글코랩에서 빠르게 실습도 할 수 있습니다. &lt;a href=&#34;https://colab.research.google.com/github/chloevan/python_visualisation/blob/master/matplotlib/matplotlib_04_area_stacked_plot.ipynb&#34;&gt;실습&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;v-reference&#34;&gt;V. Reference&lt;/h2&gt;
&lt;p&gt;Mukhiya, Uuresh Kumar. Ahmed Usman. Hands-on Exploratory Data Analysis With Python: Perform EDA Techniques to understand, Summarize, and Investigate Your Data. Packt publishing limited, 2020.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>matplotlib 03 Scatter Plot</title>
      <link>https://chloevan.github.io/python/matplotlib/matplotlib_03_scatterplot/</link>
      <pubDate>Wed, 22 Apr 2020 22:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/matplotlib/matplotlib_03_scatterplot/</guid>
      <description>&lt;h2 id=&#34;공지&#34;&gt;공지&lt;/h2&gt;
&lt;p&gt;제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.&lt;/p&gt;
&lt;p&gt;도움이 되었다면 &lt;code&gt;Github&lt;/code&gt;에 &lt;code&gt;Star&lt;/code&gt;를 눌러주세요.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/chloevan/python_visualisation&#34;&gt;python_visualisation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;i-matplotlib-기본-그래프&#34;&gt;I. Matplotlib 기본 그래프&lt;/h2&gt;
&lt;p&gt;Matplotlib는 파이썬 표준 시각화 도구라고 불리워지며 파이썬 그래프의 기본 토대가 된다고 해도 무방하다. 객체지향 프로그래밍을 지원하므로 세세하게 꾸밀 수 있다.&lt;/p&gt;
&lt;h2 id=&#34;ii-matplotlib-설치&#34;&gt;II. matplotlib 설치&lt;/h2&gt;
&lt;p&gt;설치방법은 윈도우 명령 프롬프트, MacOS, Linux 터미널에서 &lt;code&gt;pip install matplotlib&lt;/code&gt;입력하면 되지만, 간혹 여러 환경에 따라 달라질 수 있으니 관련 싸이트에서 확인하기를 바란다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;설치 방법: &lt;a href=&#34;https://matplotlib.org/users/installing.html&#34;&gt;https://matplotlib.org/users/installing.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;iii-산점도scatter-plot&#34;&gt;III. 산점도(Scatter Plot)&lt;/h2&gt;
&lt;p&gt;산점도는 서로 다른 두 변수 사이의 관계를 나타날 때 사용한다. 이 때 두 변수는 &lt;code&gt;continous&lt;/code&gt;, 수량형 변수여야 하고, 서로 독립적이어야 한다. 두 연속 변수의 관계를 보여준다는 점에서 선 그래프와 비슷하다. 선 그래프를 그릴 때 &lt;code&gt;plot()&lt;/code&gt; 함수에 &lt;code&gt;o&lt;/code&gt; 옵션을 사용하면 선 없이 점으로만 표현되는데, 산점도라고 할 수 있다.&lt;/p&gt;
&lt;p&gt;또한 산점도 그래프를 작성하면 상관관계도 그릴 수 있다. 상관관계에 대한 내용은 여기에서는 자세하게 서술하지는 않는다.&lt;/p&gt;
&lt;h2 id=&#34;iv-그래프-작성&#34;&gt;IV. 그래프 작성&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Goa1 1. 수면시간과 나이에 관한 데이터를 활용하여 실제 나이에 따라 수면시간이 달라지는지 확인해보자.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Goal 2. 고등교육 연수에 따른 성인의 평균 임금과 관련된 그래프를 작성해보자.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1-데이터-수집&#34;&gt;(1) 데이터 수집&lt;/h3&gt;
&lt;p&gt;먼저 데이터를 가져옵니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pd
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; tabulate &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; tabulate

url &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://raw.githubusercontent.com/chloevan/python_visualisation/master/data/sleep_vs_age.csv&amp;#39;&lt;/span&gt;
headers_cols &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;age&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;min_recommended&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;max_recommended&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;may_be_appropriate_min&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;may_be_appropriate_max&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;min_not_recommended&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;max_not_recommended&amp;#39;&lt;/span&gt;]

sleep &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read_csv(url)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;iloc[:, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:] &lt;span style=&#34;color:#75715e&#34;&gt;# 첫번째 열 제거&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(tabulate(sleep&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head(&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;), tablefmt&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pipe&amp;#34;&lt;/span&gt;, headers&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;keys&amp;#34;&lt;/span&gt;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;|    |   age |   min_recommended |   max_recommended |   may_be_appropriate_min |   may_be_appropriate_max |   min_not_recommended |   max_not_recommended |
|---:|------:|------------------:|------------------:|-------------------------:|-------------------------:|----------------------:|----------------------:|
|  0 |     0 |                14 |                17 |                       11 |                       13 |                    11 |                    19 |
|  1 |     1 |                14 |                17 |                       11 |                       13 |                    11 |                    19 |
|  2 |     2 |                14 |                17 |                       11 |                       13 |                    11 |                    19 |
|  3 |     3 |                14 |                17 |                       11 |                       13 |                    11 |                    19 |
|  4 |     4 |                12 |                15 |                       10 |                       11 |                    10 |                    18 |
|  5 |     5 |                12 |                15 |                       10 |                       11 |                    10 |                    18 |
|  6 |     6 |                12 |                15 |                       10 |                       11 |                    10 |                    18 |
|  7 |     7 |                12 |                15 |                       10 |                       11 |                    10 |                    18 |
|  8 |     8 |                12 |                15 |                       10 |                       11 |                    10 |                    18 |
|  9 |     9 |                12 |                15 |                       10 |                       11 |                    10 |                    18 |
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;2-matplotlib-방식&#34;&gt;(2) matplotlib 방식&lt;/h3&gt;
&lt;p&gt;수집된 데이터를 토대로 산점도를 작성해본다. 이 때에는 &lt;code&gt;seaborn&lt;/code&gt; 라이브러리를 활용하여 &lt;code&gt;iris&lt;/code&gt; 데이터를 가져온다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; seaborn &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; sns
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; plt

sns&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set()

&lt;span style=&#34;color:#75715e&#34;&gt;# 일반적인 산점도&lt;/span&gt;
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;scatter(x&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;sleep[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;age&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12.&lt;/span&gt;,
            y&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;sleep[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;min_recommended&amp;#39;&lt;/span&gt;])

plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;scatter(x&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;sleep[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;age&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12.&lt;/span&gt;,
            y&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;sleep[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;max_recommended&amp;#39;&lt;/span&gt;])

plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;xlabel(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Age of person in Years&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ylabel(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Total hours of sleep required&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/matplotlib/matplotlib_03_scatterplot/output_4_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;그래프를 작성하는 것은 어렵지 않다. 다만 해석이 조금 난해할 뿐이다. 문제는 산점도로 그리니, 무언가 딱딱 끊기는 느낌이다. 이번에는 선 그래프로 전환해보자. 사실 전체적인 코드는 비슷하고, &lt;code&gt;g--&lt;/code&gt;, &lt;code&gt;r--&lt;/code&gt; 명령어만 추가했다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; seaborn &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; sns
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; plt

sns&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set()

plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(sleep[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;age&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12.&lt;/span&gt;,
         sleep[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;min_recommended&amp;#39;&lt;/span&gt;], &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;g--&amp;#39;&lt;/span&gt;)

plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(sleep[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;age&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12.&lt;/span&gt;,
         sleep[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;max_recommended&amp;#39;&lt;/span&gt;], 
         &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;r--&amp;#39;&lt;/span&gt;)

plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;xlabel(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Age of person in Years&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ylabel(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Total hours of sleep required&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/matplotlib/matplotlib_03_scatterplot/output_6_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;위 두 그래프 모두 시간이 지남에 따라 필요한 수면시간이 감소하다가 약 18세 되는 시점부터는 일정한 것을 알 수 있다.&lt;/p&gt;
&lt;p&gt;이번에는 &lt;code&gt;iris&lt;/code&gt;데이터를 활용하는데, &lt;code&gt;matplotlib&lt;/code&gt; 스타일로 그래프를 작성한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; seaborn &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; sns
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; plt

plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;rcParams[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;figure.figsize&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;rcParams[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;figure.dpi&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;150&lt;/span&gt;
sns&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set()

iris &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sns&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;load_dataset(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;iris&amp;#39;&lt;/span&gt;)
iris[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;species&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; iris[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;species&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;map({&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;setosa&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;versicolor&amp;#39;&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;virginica&amp;#39;&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;})

plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;scatter(x&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;iris[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sepal_length&amp;#39;&lt;/span&gt;], 
            y&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;iris[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sepal_width&amp;#39;&lt;/span&gt;], c&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;iris&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;species)

plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;xlabel(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Sepal Length&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ylabel(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Petal Length&amp;#39;&lt;/span&gt;)

plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;No handles with labels found to put in legend.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/matplotlib/matplotlib_03_scatterplot/output_8_1.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;그런데, 여기에 한가지 문제점이 있다. 범례(&lt;code&gt;legend&lt;/code&gt;)가 없어서 어떤 종인지 색상의 구별이 잘 가지 않는다. 이럴 때 어떻게 해야할까?&lt;/p&gt;
&lt;p&gt;이 때에는 사실 &lt;code&gt;matplotlib&lt;/code&gt;만 활용하면 조금 코드가 복잡해진다. 아래 코드를 보자.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Scatter plot with a different color by groups&lt;/span&gt;
groups &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; iris&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;groupby(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;species&amp;#39;&lt;/span&gt;)

fig, ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;subplots()
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; name, group &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; groups:
    ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(group&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sepal_length, 
            group&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sepal_width, 
            marker&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;o&amp;#39;&lt;/span&gt;, 
            linestyle&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;,
            label&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;name)

ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;legend(fontsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;, loc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;upper left&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;# legend position&lt;/span&gt;
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;title(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Scatter Plot of iris by matplotlib&amp;#39;&lt;/span&gt;, fontsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;xlabel(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Petal Length&amp;#39;&lt;/span&gt;, fontsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ylabel(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Petal Width&amp;#39;&lt;/span&gt;, fontsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/matplotlib/matplotlib_03_scatterplot/output_10_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;즉 For-loop를 활용해서 각각의 &lt;code&gt;label&lt;/code&gt;을 해줘야 하는 매우 큰 번거로움이 있다. 이 때에는 &lt;code&gt;seaborn&lt;/code&gt; 패키지를 활용하면 매우 쉽게 그래프를 작성할 수 있다.&lt;/p&gt;
&lt;h3 id=&#34;3-seaborn-방식&#34;&gt;(3) seaborn 방식&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;iris &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sns&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;load_dataset(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;iris&amp;#39;&lt;/span&gt;)
iris[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;species&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; iris[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;species&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;map({&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;setosa&amp;#39;&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;versicolor&amp;#39;&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;virginica&amp;#39;&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;})
sns&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;scatterplot(x&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;iris[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sepal_length&amp;#39;&lt;/span&gt;], 
                y&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;iris[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sepal_width&amp;#39;&lt;/span&gt;], hue&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;iris&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;species, data&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;iris)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x7fc3cd092048&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/matplotlib/matplotlib_03_scatterplot/output_12_1.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;위와 같이 코드가 매우 간결해진 것을 볼 수 있다.&lt;/p&gt;
&lt;h2 id=&#34;v-실습파일&#34;&gt;V. 실습파일&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;구글코랩에서 빠르게 실습도 할 수 있습니다. &lt;a href=&#34;https://colab.research.google.com/github/chloevan/python_visualisation/blob/master/matplotlib/matplotlib_02_barchart.ipynb&#34;&gt;실습&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;vi-reference&#34;&gt;VI. Reference&lt;/h2&gt;
&lt;p&gt;Mukhiya, Uuresh Kumar. Ahmed Usman. Hands-on Exploratory Data Analysis With Python: Perform EDA Techniques to understand, Summarize, and Investigate Your Data. Packt publishing limited, 2020.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>matplotlib 02 bar chart</title>
      <link>https://chloevan.github.io/python/matplotlib/matplotlib_02_barchart/</link>
      <pubDate>Sun, 19 Apr 2020 16:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/matplotlib/matplotlib_02_barchart/</guid>
      <description>&lt;h2 id=&#34;공지&#34;&gt;공지&lt;/h2&gt;
&lt;p&gt;제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.&lt;/p&gt;
&lt;p&gt;도움이 되었다면 &lt;code&gt;Github&lt;/code&gt;에 &lt;code&gt;Star&lt;/code&gt;를 눌러주세요.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/chloevan/python_visualisation&#34;&gt;python_visualisation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;i-matplotlib-기본-그래프&#34;&gt;I. Matplotlib 기본 그래프&lt;/h2&gt;
&lt;p&gt;Matplotlib는 파이썬 표준 시각화 도구라고 불리워지며 파이썬 그래프의 기본 토대가 된다고 해도 무방하다. 객체지향 프로그래밍을 지원하므로 세세하게 꾸밀 수 있다.&lt;/p&gt;
&lt;h2 id=&#34;ii-matplotlib-설치&#34;&gt;II. matplotlib 설치&lt;/h2&gt;
&lt;p&gt;설치방법은 윈도우 명령 프롬프트, MacOS, Linux 터미널에서 &lt;code&gt;pip install matplotlib&lt;/code&gt;입력하면 되지만, 간혹 여러 환경에 따라 달라질 수 있으니 관련 싸이트에서 확인하기를 바란다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;설치 방법: &lt;a href=&#34;https://matplotlib.org/users/installing.html&#34;&gt;https://matplotlib.org/users/installing.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;iii-막대-그래프bar-chart&#34;&gt;III. 막대 그래프(Bar Chart)&lt;/h2&gt;
&lt;p&gt;시계열 데이터와 같이 연속적인 값의 변화와 패턴을 파악하는데 적합하다. 그래프를 그리기 위해 2020년 전세계를 강타했던 코로나 데이터셋을 위주로 그래프를 그려보도록 한다.&lt;/p&gt;
&lt;h3 id=&#34;1-데이터-수집&#34;&gt;(1) 데이터 수집&lt;/h3&gt;
&lt;p&gt;엑셀파일 데이터를 불러와서 실제 잘 들어왔는지 확인해봅니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 모듈 불러오기&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pd
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; plt
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; calendar
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; numpy &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; np

&lt;span style=&#34;color:#75715e&#34;&gt;# Excel 데이터 데이터프레임으로 변환&lt;/span&gt;
covid_19 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read_excel(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/content/20200406-COVID-19-geographic-disbtribution-worldwide.xlsx&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(covid_19&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head())
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;     dateRep  day  month  ...  geoId  countryterritoryCode  popData2018
0 2020-04-05    5      4  ...     AF                   AFG   37172386.0
1 2020-04-04    4      4  ...     AF                   AFG   37172386.0
2 2020-04-03    3      4  ...     AF                   AFG   37172386.0
3 2020-04-02    2      4  ...     AF                   AFG   37172386.0
4 2020-04-01    1      4  ...     AF                   AFG   37172386.0

[5 rows x 10 columns]
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;2-데이터-필터링&#34;&gt;(2) 데이터 필터링&lt;/h3&gt;
&lt;p&gt;우선 &lt;code&gt;KOR&lt;/code&gt; 기준으로 데이터를 &lt;code&gt;Filter&lt;/code&gt;링을 해줍니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# KOR 데이터만 추출, val. countryterritoryCode&lt;/span&gt;
covid_kor &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; covid_19[covid_19[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;countryterritoryCode&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;KOR&amp;#39;&lt;/span&gt;]
covid_kor&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_index(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dateRep&amp;#39;&lt;/span&gt;, inplace&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True)

&lt;span style=&#34;color:#75715e&#34;&gt;# 월 생성&lt;/span&gt;
months &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; covid_kor[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;month&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;unique()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;tolist()

&lt;span style=&#34;color:#75715e&#34;&gt;# cases 생성&lt;/span&gt;
case_quantity &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; covid_kor&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;groupby(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;month&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sum()[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;cases&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;tolist()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;3-그래프-레이아웃-구성&#34;&gt;(3) 그래프 레이아웃 구성&lt;/h3&gt;
&lt;p&gt;그래프의 크기 등을 구성합니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;figure, axis &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;subplots()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/matplotlib/matplotlib_02_barchart/output_6_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;4-x축-설정&#34;&gt;(4) x축 설정&lt;/h3&gt;
&lt;p&gt;X축에는 12월~4월까지 구성이 될 것입니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;xticks(months, rotation&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;([&amp;lt;matplotlib.axis.XTick at 0x7f574b40fd68&amp;gt;,
  &amp;lt;matplotlib.axis.XTick at 0x7f574b40fd30&amp;gt;,
  &amp;lt;matplotlib.axis.XTick at 0x7f574b40f978&amp;gt;,
  &amp;lt;matplotlib.axis.XTick at 0x7f574b42e160&amp;gt;,
  &amp;lt;matplotlib.axis.XTick at 0x7f574b42e5c0&amp;gt;],
 &amp;lt;a list of 5 Text major ticklabel objects&amp;gt;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/matplotlib/matplotlib_02_barchart/output_8_1.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;5-막대-그래프-출력-세로&#34;&gt;(5) 막대 그래프 출력 (세로)&lt;/h3&gt;
&lt;p&gt;이제 막대 그래프를 그려본다. 이 때, 단순히 그래프가 작성하는 것이 아니라 &lt;code&gt;text&lt;/code&gt;도 같이 입력하도록 한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;figure, axis &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;subplots()
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;xticks(months, rotation&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;)

plot &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; axis&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;bar(months, case_quantity)

&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; rectangle &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; plot:
  height &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rectangle&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_height()
  axis&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;text(rectangle&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_x() &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; rectangle&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_width()&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2.&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.002&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; height, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;int(height), ha&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;center&amp;#39;&lt;/span&gt;, va&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;bottom&amp;#39;&lt;/span&gt;)

plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/matplotlib/matplotlib_02_barchart/output_10_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;여기에서 &lt;code&gt;for-loop&lt;/code&gt;를 작성하는 이유는 각 그래프마다 데이터의 값이 달라지기 때문이며, 데이터의 값을 기준으로 높이를 설정하는 것이기 때문에 그렇습니다.&lt;/p&gt;
&lt;h3 id=&#34;6-막대-그래프-출력-가로&#34;&gt;(6) 막대 그래프 출력 (가로)&lt;/h3&gt;
&lt;p&gt;이번에는 동일한 코드이지만, 막대 그래프를 가로로 표시될 수 있도록 소스코드를 구현합니다.&lt;/p&gt;
&lt;p&gt;이 때 주의해야 하는 것은 &lt;code&gt;plt.yticks&lt;/code&gt;로 수정해야 한다는 점입니다. 또한, &lt;code&gt;height&lt;/code&gt;에 해당하는 부분은 모두 &lt;code&gt;width&lt;/code&gt;로 바꿔준 후, 적정한 값을 입력하여 출력합니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;figure, axis &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;subplots()
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;yticks(months, rotation&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;)

plot &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; axis&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;barh(months, case_quantity)

&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; rectangle &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; plot:
  width &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rectangle&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_width()
  axis&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;text(width &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;300&lt;/span&gt;, rectangle&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_y() &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;int(width), ha&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;center&amp;#39;&lt;/span&gt;, va&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;bottom&amp;#39;&lt;/span&gt;)

plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/matplotlib/matplotlib_02_barchart/output_12_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;vi-실습파일&#34;&gt;VI. 실습파일&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;구글코랩에서 빠르게 실습도 할 수 있습니다. &lt;a href=&#34;https://colab.research.google.com/github/chloevan/python_visualisation/blob/master/matplotlib/matplotlib_02_barchart.ipynb&#34;&gt;실습&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;v-reference&#34;&gt;V. Reference&lt;/h2&gt;
&lt;p&gt;Mukhiya, Uuresh Kumar. Ahmed Usman. Hands-on Exploratory Data Analysis With Python: Perform EDA Techniques to understand, Summarize, and Investigate Your Data. Packt publishing limited, 2020.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>matplotlib 한글 폰트 오류 해결</title>
      <link>https://chloevan.github.io/settings/matplotlib_koreanfont/</link>
      <pubDate>Fri, 17 Apr 2020 23:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/settings/matplotlib_koreanfont/</guid>
      <description>&lt;h2 id=&#34;공지&#34;&gt;공지&lt;/h2&gt;
&lt;p&gt;제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.&lt;/p&gt;
&lt;p&gt;도움이 되었다면 &lt;code&gt;Github&lt;/code&gt;에 &lt;code&gt;Star&lt;/code&gt;를 눌러주세요.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/chloevan/python_visualisation&#34;&gt;python_visualisation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;matplotlib-한글폰트-오류-해결&#34;&gt;Matplotlib 한글폰트 오류 해결&lt;/h2&gt;
&lt;p&gt;한글을 사랑하지만, 코딩의 예외다. 프로그래밍 언어 자체가 영어기반이기 때문에 그런것도 있고, 아무튼 한글 부분이 네모 박스로 표시되면서 한글폰트가 깨지는 현상이 종종 발생한다. 오류를 해결하려면 먼저 한글폰트를 지정하는 다음의 코드를 추가해야 한다.&lt;/p&gt;
&lt;p&gt;우선 실제로 한글 폰트가 깨지는지 확인해보는 코드를 작성해보자.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 모듈 불러오기&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pd
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; plt

&lt;span style=&#34;color:#75715e&#34;&gt;# Excel 데이터 데이터프레임으로 변환&lt;/span&gt;
covid_19 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read_excel(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/Users/jihoonjung/Documents/python_visualisation/data/20200406-COVID-19-geographic-disbtribution-worldwide.xlsx&amp;#34;&lt;/span&gt;)

&lt;span style=&#34;color:#75715e&#34;&gt;# KOR 데이터만 추출, val. countryterritoryCode&lt;/span&gt;
covid_kor &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; covid_19[covid_19[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;countryterritoryCode&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;KOR&amp;#39;&lt;/span&gt;]
covid_kor&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_index(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dateRep&amp;#39;&lt;/span&gt;, inplace&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True)

plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;style&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;use(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;bmh&amp;#39;&lt;/span&gt;)

plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(covid_kor&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index, covid_kor&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;cases)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;title(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;대한민국 코로나 확진자 수 그래프&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;xlabel(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;기간&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ylabel(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;확진자수&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;legend(labels&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;확진자수&amp;#39;&lt;/span&gt;], loc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;best&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/settings/matplotlib_koreanfont/output_1_1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;위 그래프를 보니, 실제로 네모박스가 나왔다. 이 때 어떻게 해결해야 할까? 우선 OS 환경에 따라 다르다. 그러나, 기본 원리는 똑같다.
폰트 경로를 지정하면 된다.&lt;/p&gt;
&lt;h2 id=&#34;macos-버전&#34;&gt;MacOS 버전&lt;/h2&gt;
&lt;p&gt;강사는 MacOS를 사용하기 때문에, 두줄 코드만 입력하면 된다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; matplotlib &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; rc
rc(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;font&amp;#39;&lt;/span&gt;, family&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AppleGothic&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;위 코드를 입력 후, 다시 출력해본다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 한글폰트 오류 해결&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; matplotlib &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; rc
rc(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;font&amp;#39;&lt;/span&gt;, family&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AppleGothic&amp;#34;&lt;/span&gt;)

plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;style&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;use(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;bmh&amp;#39;&lt;/span&gt;)

plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(covid_kor&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index, covid_kor&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;cases)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;title(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;대한민국 코로나 확진자 수 그래프&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;xlabel(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;기간&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ylabel(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;확진자수&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;legend(labels&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;확진자수&amp;#39;&lt;/span&gt;], loc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;best&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/settings/matplotlib_koreanfont/output_3_0.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;이렇게 정상적으로 출력되는 것을 확인할 수 있다.&lt;/p&gt;
&lt;h2 id=&#34;windows-버전&#34;&gt;Windows 버전&lt;/h2&gt;
&lt;p&gt;윈도우즈의 경우 Mac과 달리 font_manager 코드가 추가가 된다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# matplotlib 한글 폰트 오류 문제 해결&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; matplotlib &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; font_manager, rc
font_path &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;./한글폰트.ttf&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 폰트 파일 위치&lt;/span&gt;
font_name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; font_manager&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;FontProperties(fname&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;font_path)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_name()
rc(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;font&amp;#39;&lt;/span&gt;, family&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;font_name)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;
&lt;p&gt;“똑똑이” [Python] matplotlib 한글폰트 설정방법, &lt;a href=&#34;http://wideeyed.blog.me/221225208497&#34;&gt;http://wideeyed.blog.me/221225208497&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>matplotlib_01_linegraph</title>
      <link>https://chloevan.github.io/python/matplotlib/matplotlib_01_linegraph/</link>
      <pubDate>Fri, 17 Apr 2020 11:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/matplotlib/matplotlib_01_linegraph/</guid>
      <description>&lt;h2 id=&#34;공지&#34;&gt;공지&lt;/h2&gt;
&lt;p&gt;제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.&lt;/p&gt;
&lt;p&gt;도움이 되었다면 &lt;code&gt;Github&lt;/code&gt;에 &lt;code&gt;Star&lt;/code&gt;를 눌러주세요.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/chloevan/python_visualisation&#34;&gt;python_visualisation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;i-matplotlib-기본-그래프&#34;&gt;I. Matplotlib 기본 그래프&lt;/h2&gt;
&lt;p&gt;Matplotlib는 파이썬 표준 시각화 도구라고 불리워지며 파이썬 그래프의 기본 토대가 된다고 해도 무방하다. 객체지향 프로그래밍을 지원하므로 세세하게 꾸밀 수 있다.&lt;/p&gt;
&lt;h2 id=&#34;ii-matplotlib-설치&#34;&gt;II. matplotlib 설치&lt;/h2&gt;
&lt;p&gt;설치방법은 윈도우 명령 프롬프트, MacOS, Linux 터미널에서 &lt;code&gt;pip install matplotlib&lt;/code&gt;입력하면 되지만, 간혹 여러 환경에 따라 달라질 수 있으니 관련 싸이트에서 확인하기를 바란다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;설치 방법: &lt;a href=&#34;https://matplotlib.org/users/installing.html&#34;&gt;https://matplotlib.org/users/installing.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;iii-선-그래프line-plot&#34;&gt;III. 선 그래프(line plot)&lt;/h2&gt;
&lt;p&gt;시계열 데이터와 같이 연속적인 값의 변화와 패턴을 파악하는데 적합하다. 그래프를 그리기 위해 2020년 전세계를 강타했던 코로나 데이터셋을 위주로 그래프를 그려보도록 한다.&lt;/p&gt;
&lt;h3 id=&#34;1-전체-소스코드&#34;&gt;(1) 전체 소스코드&lt;/h3&gt;
&lt;p&gt;코로나 데이터셋을 기반으로 데이터 수집부터 시각화까지 전체 소스코드를 보여준 뒤, 다시 설명하도록 한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 모듈 불러오기&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pd
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; plt

&lt;span style=&#34;color:#75715e&#34;&gt;# Excel 데이터 데이터프레임으로 변환&lt;/span&gt;
covid_19 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read_excel(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;data/20200406-COVID-19-geographic-disbtribution-worldwide.xlsx&amp;#34;&lt;/span&gt;)

&lt;span style=&#34;color:#75715e&#34;&gt;# KOR 데이터만 추출, val. countryterritoryCode&lt;/span&gt;
covid_kor &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; covid_19[covid_19[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;countryterritoryCode&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;KOR&amp;#39;&lt;/span&gt;]
covid_kor&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_index(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dateRep&amp;#39;&lt;/span&gt;, inplace&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True)

plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;style&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;use(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;bmh&amp;#39;&lt;/span&gt;)

plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(covid_kor&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index, covid_kor&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;cases)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;title(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Corona Time Series in S.Korea&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;xlabel(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Date&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ylabel(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Cases&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;legend(labels&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Cases&amp;#39;&lt;/span&gt;], loc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;best&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/matplotlib/output_2_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;2-코드-설명&#34;&gt;(2) 코드 설명&lt;/h3&gt;
&lt;p&gt;데이터 분석의 &lt;code&gt;Workflow&lt;/code&gt;는 대개 다음과 같이 진행한다. 분석관련 모듈 설치, 데이터 수집, 데이터 가공, 그리고 데이터 시각화 순서로 진행이 된다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;(1) 분석관련 모듈 설치&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 모듈 불러오기&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pd
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; plt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;pandas&lt;/code&gt;는 데이터 수집 및 가공에 특화된 모듈이다. &lt;code&gt;matplotlib.pyplot&lt;/code&gt; 모듈을 &lt;code&gt;as plt&lt;/code&gt;와 같이 약칭 &lt;code&gt;plt&lt;/code&gt;로 &lt;code&gt;import&lt;/code&gt;한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;(2) 엑셀파일을 판다스를 활용하여 데이터프레임 변환&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;covid_19 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read_excel(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;data/20200406-COVID-19-geographic-disbtribution-worldwide.xlsx&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;엑셀파일을 불러오는 과정에 대한 전반적인 설명은 강사가 작성한 자료를 참고한다. &lt;a href=&#34;https://chloevan.github.io/python/pandas/pandas_with_excel/&#34;&gt;Pandas With Excel&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;데이터 가공&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# KOR 데이터만 추출, val. countryterritoryCode&lt;/span&gt;
covid_kor &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; covid_19[covid_19[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;countryterritoryCode&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;KOR&amp;#39;&lt;/span&gt;]
covid_kor&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_index(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dateRep&amp;#39;&lt;/span&gt;, inplace&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;위 소스코드에 대한 설명은 조금 필요하다. 선 그래프를 그리기 위해 필요한 변수는 &lt;code&gt;country&lt;/code&gt; &amp;amp; &lt;code&gt;cases&lt;/code&gt; 두개의 변수만 필요하다. 그런데, 여기에서 &lt;code&gt;filter&lt;/code&gt;를 진행한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(covid_19&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head())
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;     dateRep  day  month  year  cases  deaths countriesAndTerritories geoId  \
0 2020-04-05    5      4  2020     35       1             Afghanistan    AF   
1 2020-04-04    4      4  2020      0       0             Afghanistan    AF   
2 2020-04-03    3      4  2020     43       0             Afghanistan    AF   
3 2020-04-02    2      4  2020     26       0             Afghanistan    AF   
4 2020-04-01    1      4  2020     25       0             Afghanistan    AF   

  countryterritoryCode  popData2018  
0                  AFG   37172386.0  
1                  AFG   37172386.0  
2                  AFG   37172386.0  
3                  AFG   37172386.0  
4                  AFG   37172386.0  
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;위 데이터를 보면, &lt;code&gt;countryterritoryCode&lt;/code&gt;별로 날짜별로 데이터가 집계중인 것을 알 수 있다. 이 데이터에서 필요한 정보를 담은 데이터만 가져오는 것이 주요 핵심이다. 아래 코드가 &lt;code&gt;countryterritoryCode&lt;/code&gt;에서 &lt;code&gt;KOR&lt;/code&gt;에 관련된 행만 가져오는 데이터를 추출한 것이다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;covid_kor &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; covid_19[covid_19[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;countryterritoryCode&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;KOR&amp;#39;&lt;/span&gt;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;두번째로 봐야 하는 것은 &lt;code&gt;set_index(&#39;dateRep&#39;, inplace=True)&lt;/code&gt;라는 코드는 간단하게 표현하면, 데이터를 업데이트 하는데, &lt;code&gt;dateRep&lt;/code&gt;열을 기준으로 0부터 재정렬한다는 뜻이다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;데이터 시각화
시각화는 다양한 스타일이 존재하기 마련이다. matplotlib에서도 다양한 스타일이 존재한다. 스타일 리스트를 출력해보자.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;style&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;available)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[&#39;Solarize_Light2&#39;, &#39;_classic_test_patch&#39;, &#39;bmh&#39;, &#39;classic&#39;, &#39;dark_background&#39;, &#39;fast&#39;, &#39;fivethirtyeight&#39;, &#39;ggplot&#39;, &#39;grayscale&#39;, &#39;seaborn&#39;, &#39;seaborn-bright&#39;, &#39;seaborn-colorblind&#39;, &#39;seaborn-dark&#39;, &#39;seaborn-dark-palette&#39;, &#39;seaborn-darkgrid&#39;, &#39;seaborn-deep&#39;, &#39;seaborn-muted&#39;, &#39;seaborn-notebook&#39;, &#39;seaborn-paper&#39;, &#39;seaborn-pastel&#39;, &#39;seaborn-poster&#39;, &#39;seaborn-talk&#39;, &#39;seaborn-ticks&#39;, &#39;seaborn-white&#39;, &#39;seaborn-whitegrid&#39;, &#39;tableau-colorblind10&#39;]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;위와 같이 다양한 스타일이 존재한다. 여기에서 마음에 드는 것 선택해서 입력하면 된다. 스타일이 어떻게 적용되는지 상세한 정보가 필요하다면 다음의 링크를 참조한다. &lt;a href=&#34;https://matplotlib.org/examples/style_sheets/style_sheets_reference.html&#34;&gt;Style_Sheet&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;style&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;use(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;bmh&amp;#39;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;선 그래프를 그리는 &lt;code&gt;plot()&lt;/code&gt; 함수에 입력할 &lt;code&gt;x, y&lt;/code&gt;축 데이터를 선택한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(covid_kor&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index, covid_kor&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;cases)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;legend(labels&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Cases&amp;#39;&lt;/span&gt;], loc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;best&amp;#39;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;matplotlib.legend.Legend at 0x11cef6c10&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/matplotlib/output_16_1.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;위와 같이 그래프가 출력이 되었다면, 그 다음부터는 그래프를 꾸미는 것이다. 차트의 제목, x축 이름, y축 이름 함수를 활용하여 그래프를 완성한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;title(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Corona Time Series in S.Korea&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;xlabel(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Date&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ylabel(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Cases&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/matplotlib/output_18_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;
&lt;p&gt;“Usage Guide¶.” Usage Guide - Matplotlib 3.2.1 Documentation, matplotlib.org/tutorials/introductory/usage.html.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>