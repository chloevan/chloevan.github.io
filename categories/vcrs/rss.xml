<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>vcrs on Data Science | ChloEvan</title>
    <link>https://chloevan.github.io/categories/vcrs/</link>
    <description>Recent content in vcrs on Data Science | ChloEvan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 28 Apr 2020 10:20:39 +0900</lastBuildDate>
    
        <atom:link href="https://chloevan.github.io/categories/vcrs/rss.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>vcrts01 - Combining Vectors</title>
      <link>https://chloevan.github.io/r/datatransform/vcrts01/</link>
      <pubDate>Tue, 28 Apr 2020 10:20:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/datatransform/vcrts01/</guid>
      <description>&lt;h2 id=&#34;i-개요&#34;&gt;I. 개요&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;vctrs&lt;/code&gt; 패키지. Vector Helpers 패키지&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;라고 불리운다. 벡터를 활용할 때, 어려운 부분은 데이터와 조합해서 사용할 때다. 특히 서로다른 성질의 &lt;code&gt;Vectors&lt;/code&gt;를 Combining 할 때 발생하는 에러에 대해 효과적으로 해결할 수 있는 대안을 제시한다.&lt;/p&gt;
&lt;h2 id=&#34;ii-vectors&#34;&gt;II. Vectors&lt;/h2&gt;
&lt;p&gt;벡터에 관한 기초 부분은 여기에서 생략하고, 필자가 작성한 기초 부분에서 참조하기를 바란다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/basics/basic_objects_vector/&#34;&gt;Basci Objects&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1-벡터의-정의&#34;&gt;(1) 벡터의 정의&lt;/h3&gt;
&lt;p&gt;R의 기본문법에서 벡터의 정의는 다음과 같다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## [1] 1 2 3
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;b&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;c&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;a&amp;quot; &amp;quot;b&amp;quot; &amp;quot;c&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;2-tidyverse&#34;&gt;(2) tidyverse&lt;/h3&gt;
&lt;p&gt;벡터와 관련되어서 일반적으로 다음과 같은 함수에서 넓게 활용된다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;dplyr::mutate()&lt;/code&gt;와 &lt;code&gt;dplyr::summarise()&lt;/code&gt;은 각 그룹에서 나오는 결과물들을 벡터화해서 처리한다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dplyr::bind_rows()&lt;/code&gt;는 서로 다른 데이터셋에 존재하는 &lt;code&gt;vector&lt;/code&gt;들을 연결한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;iii-problems&#34;&gt;III. Problems&lt;/h2&gt;
&lt;p&gt;이렇게, 데이터 프레임의 기본연산으로 벡터는 매우 중요하게 다뤄지는 것이 R의 기본문법이다. 그런데, R의 기본문법에는 비슷하지만, 조금씩 다른 벡터의 성질이 있다.&lt;/p&gt;
&lt;p&gt;다음 코드를 보자.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;factor&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;x&amp;#34;&lt;/span&gt;), &lt;span style=&#34;color:#a6e22e&#34;&gt;factor&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;y&amp;#34;&lt;/span&gt;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## [1] 1 1
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;즉, &lt;code&gt;c()&lt;/code&gt;함수를 활용해 &lt;code&gt;factor&lt;/code&gt; 범주화 하는 것은 허용되지 않고, integer level로 바뀌는 것을 볼 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;이번엔 날짜와 관련된 코드를 보자. 사실 누구나 경험하는 에러일 것이다. 또한 대처법도 쉽지가 않다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;today &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.Date&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2020-04-21&amp;#34;&lt;/span&gt;)
now &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.POSIXct&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2020-04-21 10:34&amp;#34;&lt;/span&gt;)

&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(today, now)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;2020-04-21&amp;quot;    &amp;quot;4348213-07-01&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;즉, &lt;code&gt;Date&lt;/code&gt; 형식과, &lt;code&gt;POSIXct&lt;/code&gt; 형식에서 &lt;code&gt;c()&lt;/code&gt;함수는 약간 다르게 인식하는 것을 확인할 수 있다. 문제는 이렇게 다른 형식이라 할지라도 &lt;code&gt;class&lt;/code&gt;는 동일하게 &lt;code&gt;Date&lt;/code&gt;로 인식한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(today, now))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Date&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;상상해보자. 만약 1000개의 데이터가 있는데, 이 중, 800개는 &lt;code&gt;Date&lt;/code&gt; 형식이고, 200개는 &lt;code&gt;POSIXct&lt;/code&gt;형식일 때, 일일이 Date를 조회하면서 수정할수는 없다.&lt;/p&gt;
&lt;p&gt;이번에는 &lt;code&gt;unclass&lt;/code&gt;를 활용해서 다시한번 &lt;code&gt;c()&lt;/code&gt;를 확인해보자.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;unclass&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(today, now))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## [1]      18373 1587432840
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;unclass&lt;/code&gt;를 활용하니 이번에는 둘다 숫자로 나온다. 이번에는 now, today의 순서를 바꿔보자.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(now, today)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;2020-04-21 10:34:00 KST&amp;quot; &amp;quot;1970-01-01 14:06:13 KST&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;today의 날짜가 제대로 인식되지 못하는 걸 확인할 수 있다. 이번엔 어떤 데이터 타입인지 &lt;code&gt;class&lt;/code&gt;를 사용하여 확인해보자.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(now, today))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;POSIXct&amp;quot; &amp;quot;POSIXt&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이번엔 &lt;code&gt;POSIxt&lt;/code&gt;로 출력되는 걸 확인할 수 있다. &lt;code&gt;unclass&lt;/code&gt;를 활용하면 어떻게 될까?&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;unclass&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(now, today))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## [1] 1587432840      18373
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이번에도 숫자로 출력된다. 지금까지 계속 읽어왔다면, 느끼겠지만, 현재 today와 now 값을 통일시키지 않는다면 이러한 에러는 계속 발생할 것이다. 즉, 데이터가 적으면 상관이 없지만 만약 많으면 어떻게 할 것인가? 현재로써 유일한 대안은 사용자 정의 함수를 만들어야 한다.&lt;/p&gt;
&lt;p&gt;그런데, 시간이 없다면??&lt;/p&gt;
&lt;h2 id=&#34;iv-vctrs-패키지-활용&#34;&gt;IV. vctrs 패키지 활용&lt;/h2&gt;
&lt;p&gt;이 때 필요한 것이, vector helpers 패키지를 활용하는 것이다. 이 때, &lt;code&gt;vec_c&lt;/code&gt;함수를 사용하는데, 크게 3가지의 원칙을 삼는다.&lt;/p&gt;
&lt;h3 id=&#34;1-symmetry&#34;&gt;(1) Symmetry&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;즉, today, now의 순서가 바뀌어도 일단 값은 동일하게 나온다는 원칙이다. 소스코드를 보며 직접 확인해보자.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(vctrs)
&lt;span style=&#34;color:#a6e22e&#34;&gt;vec_c&lt;/span&gt;(today, now)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;2020-04-21 00:00:00 KST&amp;quot; &amp;quot;2020-04-21 10:34:00 KST&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;vec_c&lt;/span&gt;(now, today)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;2020-04-21 10:34:00 KST&amp;quot; &amp;quot;2020-04-21 00:00:00 KST&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;2-enrichment&#34;&gt;(2) Enrichment&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;vec_c&lt;/code&gt;함수는 조금 더 확장성 있는 레벨의 데이터타입을 변환한다는 뜻이다. 간단히 설명하면, integer와 double의 데이터가 섞여 있으면, 조금더 유연한 double로 반환하다는 것이고, 앞에서 본것 처럼, 날짜의 경우, Date와 POSIXct의 데이터는 POSIXct의 유형으로 결과값이 반환된다는 뜻이다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Integer and Double&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;vec_c&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.5&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## [1] 1.0 1.5
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Date and POSIXct&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;vec_c&lt;/span&gt;(today, now)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;2020-04-21 00:00:00 KST&amp;quot; &amp;quot;2020-04-21 10:34:00 KST&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;3-consistency&#34;&gt;(3) Consistency&lt;/h3&gt;
&lt;p&gt;R의 기본문법은 서로 다른 데이터 유형이라면, 문자열-숫자형 순으로 자동으로 치환되서 출력된다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;1&amp;quot; &amp;quot;2&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;그런데, &lt;code&gt;vec_c&lt;/code&gt;는 데이터의 유형이 완전히 서로 다른 형태라면 반환되지 않고 에러가 발생한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;에러부터 확인해보자.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;vec_c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
Error&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; No common type for `..1` &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;character&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; and `..2` &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;double&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;vec_c&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;factor&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;x&amp;#34;&lt;/span&gt;), today)
Error&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; No common type for `..1` &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;factor&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;a425&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; and `..2` &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;date&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Error 메시지를 보면 &lt;code&gt;No common type&lt;/code&gt;이라는 것을 볼 수 있다. 즉, 완전히 다른 형태의 값이 존재한다는 것을 알 수 있다. 결과적으로 조금 더 엄격한 것을 확인할 수 있다.&lt;/p&gt;
&lt;h2 id=&#34;v-활용-및-응용&#34;&gt;V. 활용 및 응용&lt;/h2&gt;
&lt;p&gt;R의 기본문법에서는 에러가 발생 했던 부분을 다시한번 응용해서 적용해보자. 아마 아래와 같이 적용할 수 있을 것 같다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;vec_c&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;factor&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;x&amp;#34;&lt;/span&gt;), &lt;span style=&#34;color:#a6e22e&#34;&gt;factor&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;y&amp;#34;&lt;/span&gt;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## [1] x y
## Levels: x y
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;vec_c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;x&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;factor&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;y&amp;#34;&lt;/span&gt;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;x&amp;quot; &amp;quot;y&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;vec_c&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;factor&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;x&amp;#34;&lt;/span&gt;), &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;y&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;x&amp;quot; &amp;quot;y&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;vec_c&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;as.integer&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2&amp;#34;&lt;/span&gt;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## [1] 1 2
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;vec_c&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;), &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;1&amp;quot; &amp;quot;2&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;즉, 이렇게 데이터 형변환을 조금 더 엄격하게 해서 혹시 있을지 모를 데이터의 섞임을 방지하고자 노력하는 것이 위 문법의 취지인 것 같다.&lt;/p&gt;
&lt;h2 id=&#34;vi-reference&#34;&gt;VI. Reference&lt;/h2&gt;
&lt;p&gt;Wickham, H. (2020, April 27). dplyr 1.0.0 and vctrs. Retrieved April 28, 2020, from &lt;a href=&#34;https://www.tidyverse.org/blog/2020/04/dplyr-1-0-0-and-vctrs/&#34;&gt;https://www.tidyverse.org/blog/2020/04/dplyr-1-0-0-and-vctrs/&lt;/a&gt;&lt;/p&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;Hadley Wickham이 주도하는 RStudio팀에서 개발하였으며, 현재 0.2.4버전으로 2020-03-10에 배포되었다. 출처: &lt;a href=&#34;https://cran.r-project.org/web/packages/vctrs/index.html&#34;&gt;https://cran.r-project.org/web/packages/vctrs/index.html&lt;/a&gt; &lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
    </item>
    
  </channel>
</rss>