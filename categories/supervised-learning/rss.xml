<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Supervised Learning on Data Science | ChloEvan</title>
    <link>https://chloevan.github.io/categories/supervised-learning/</link>
    <description>Recent content in Supervised Learning on Data Science | ChloEvan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 19 Mar 2020 18:11:47 +0900</lastBuildDate>
    
        <atom:link href="https://chloevan.github.io/categories/supervised-learning/rss.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Machine Learning Tutorial 01 - Regression (1)</title>
      <link>https://chloevan.github.io/python/machin_learning/scikit_regression/ml01_regression/</link>
      <pubDate>Thu, 19 Mar 2020 18:11:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/machin_learning/scikit_regression/ml01_regression/</guid>
      <description>&lt;h2 id=&#34;i-지도-학습-vs-비지도-학습&#34;&gt;I 지도 학습 VS 비지도 학습&lt;/h2&gt;
&lt;p&gt;머신러닝은 크게 두 가지 유형으로 분류한다. 우선 아래 표를 보자.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;구분&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;지도학습&lt;!-- raw HTML omitted --&gt;(Supervised Learning)&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;비지도 학습&lt;!-- raw HTML omitted --&gt;(Unsupervised Learning)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;알고리즘&lt;!-- raw HTML omitted --&gt;(분석모형)&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;회귀분석&lt;!-- raw HTML omitted --&gt;분류모형&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;군집분석&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;특징&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;정답을 알고 있는 상태에서 학습&lt;!-- raw HTML omitted --&gt;모형 평가 방법이 다양한 편&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;정답이 없는 상태에서 서로 비슷한 데이터를 찾아서 그룹화&lt;!-- raw HTML omitted --&gt;모형 평가 방법이 제한적&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;code&gt;지도학습(Supervised Learning)&lt;/code&gt;은 종속변수(Dependent Variable) 선정이 매우 중요하며. 종속변수 선정과 함께 데이터 분석도 같이 병행이 된다. 그러나 &lt;code&gt;비지도학습(Unsupervised Learning)&lt;/code&gt;은 데이터가 많은데, 어떻게 분류하면 좋을지 모를 때 서로 비슷한 특징끼리 결합 및 그룹화 하는 것을 말한다.&lt;/p&gt;
&lt;h2 id=&#34;ii-회귀모형-예제&#34;&gt;II. 회귀모형 예제&lt;/h2&gt;
&lt;p&gt;우선 회귀모형 모형부터 만들자. 아래 코드를 그대로 실행하면 될 것이다. 만약 &lt;code&gt;파이썬(Python)&lt;/code&gt; 설치가 필요한 사람은 &lt;a href=&#34;https://chloevan.github.io/python/settings01_installation/&#34;&gt;Tensorflow 2.0 Installation&lt;/a&gt;에서 설치 방법을 따라 설치를 진행하기를 바란다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## 기본 라이브러리 불러오기&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pd  
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; numpy &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; np  
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; plt  
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; seaborn &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; sns 
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; sklearn.model_selection &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; train_test_split 
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; sklearn.linear_model &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; LinearRegression
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; sklearn &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; metrics
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;---------------------------------------------------------------------------
ModuleNotFoundError                       Traceback (most recent call last)
&amp;lt;ipython-input-1-5e3e002ab9bf&amp;gt; in &amp;lt;module&amp;gt;
      2 import pandas as pd
      3 import numpy as np
----&amp;gt; 4 import matplotlib.pyplot as plt
      5 import seaborn as sns
      6 from sklearn.model_selection import train_test_split

ModuleNotFoundError: No module named &#39;matplotlib&#39;

&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;1-no-module-names-name_of_library&#34;&gt;(1) No Module Names &amp;lsquo;name_of_library&amp;rsquo;&lt;/h3&gt;
&lt;p&gt;가끔 이런 모듈이 없다고 나올 때가 있다. 이해하기 어려운 것은 아니다. 가장 좋은 것은 언제나 에러 메시지 전체를 복사해서 구글에서 검색을 한 뒤 해결책을 빠르게 찾는 것이 좋다.&lt;/p&gt;
&lt;p&gt;위 에러는 &lt;code&gt;matplotlib&lt;/code&gt; 모듈이 없다는 뜻이다.&lt;/p&gt;
&lt;p&gt;그럼 설치를 해보자. 어떻게? 자세한 내용은 공식문서를 참고한다. &lt;a href=&#34;https://matplotlib.org/users/installing.html&#34;&gt;matplotlib&lt;/a&gt;
간단한 설치방법은 아래와 같다.&lt;/p&gt;
&lt;p&gt;터미널에서 아래와 같이 입력한다. 참고로 MacOS / 필자는 pip3로 설치할 예정이다. &lt;a href=&#34;https://anaconda.org/conda-forge/matplotlib&#34;&gt;윈도우 아나콘다 설치 버전&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{terminal}&#34; data-lang=&#34;{terminal}&#34;&gt;$ python3 -m pip install -U pip
$ python3 -m pip install -U matplotlib
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;matplotlib&lt;/code&gt;와 마찬가지로 &lt;code&gt;seaborn&lt;/code&gt; 그리고 &lt;code&gt;scikit-learn&lt;/code&gt; 모듈도 같이 위와 같은 형태로 설치를 하면 된다.&lt;/p&gt;
&lt;h3 id=&#34;2-sample-tutorial&#34;&gt;(2) Sample Tutorial&lt;/h3&gt;
&lt;p&gt;전체 소스코드를 실행한 뒤, 하나씩 간단하게 설명을 진행하도록 한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; io
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; requests
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pprint

url &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://raw.githubusercontent.com/chloevan/datasets/master/weather/Weather.csv&amp;#34;&lt;/span&gt;
url &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; requests&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(url)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;content
weather_df &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read_csv(io&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;StringIO(url&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;decode(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;)))

pprint&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pprint(weather_df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head())
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;     STA      Date Precip  WindGustSpd    MaxTemp    MinTemp   MeanTemp  \
0  10001  1942-7-1  1.016          NaN  25.555556  22.222222  23.888889   
1  10001  1942-7-2      0          NaN  28.888889  21.666667  25.555556   
2  10001  1942-7-3   2.54          NaN  26.111111  22.222222  24.444444   
3  10001  1942-7-4   2.54          NaN  26.666667  22.222222  24.444444   
4  10001  1942-7-5      0          NaN  26.666667  21.666667  24.444444   

  Snowfall PoorWeather  YR  ...  FB  FTI ITH  PGT  TSHDSBRSGF  SD3  RHX  RHN  \
0        0         NaN  42  ... NaN  NaN NaN  NaN         NaN  NaN  NaN  NaN   
1        0         NaN  42  ... NaN  NaN NaN  NaN         NaN  NaN  NaN  NaN   
2        0         NaN  42  ... NaN  NaN NaN  NaN         NaN  NaN  NaN  NaN   
3        0         NaN  42  ... NaN  NaN NaN  NaN         NaN  NaN  NaN  NaN   
4        0         NaN  42  ... NaN  NaN NaN  NaN         NaN  NaN  NaN  NaN   

  RVG  WTE  
0 NaN  NaN  
1 NaN  NaN  
2 NaN  NaN  
3 NaN  NaN  
4 NaN  NaN  

[5 rows x 31 columns]
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;pprint&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pprint(weather_df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;describe())
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;                 STA  WindGustSpd        MaxTemp        MinTemp  \
count  119040.000000   532.000000  119040.000000  119040.000000   
mean    29659.435795    37.774534      27.045111      17.789511   
std     20953.209402    10.297808       8.717817       8.334572   
min     10001.000000    18.520000     -33.333333     -38.333333   
25%     11801.000000    29.632000      25.555556      15.000000   
50%     22508.000000    37.040000      29.444444      21.111111   
75%     33501.000000    43.059000      31.666667      23.333333   
max     82506.000000    75.932000      50.000000      34.444444   

            MeanTemp             YR             MO             DA          DR  \
count  119040.000000  119040.000000  119040.000000  119040.000000  533.000000   
mean       22.411631      43.805284       6.726016      15.797530   26.998124   
std         8.297982       1.136718       3.425561       8.794541   15.221732   
min       -35.555556      40.000000       1.000000       1.000000    2.000000   
25%        20.555556      43.000000       4.000000       8.000000   11.000000   
50%        25.555556      44.000000       7.000000      16.000000   32.000000   
75%        27.222222      45.000000      10.000000      23.000000   34.000000   
max        40.000000      45.000000      12.000000      31.000000   78.000000   

              SPD  ...   FT   FB  FTI  ITH         PGT  SD3  RHX  RHN  RVG  \
count  532.000000  ...  0.0  0.0  0.0  0.0  525.000000  0.0  0.0  0.0  0.0   
mean    20.396617  ...  NaN  NaN  NaN  NaN   12.085333  NaN  NaN  NaN  NaN   
std      5.560371  ...  NaN  NaN  NaN  NaN    5.731328  NaN  NaN  NaN  NaN   
min     10.000000  ...  NaN  NaN  NaN  NaN    0.000000  NaN  NaN  NaN  NaN   
25%     16.000000  ...  NaN  NaN  NaN  NaN    8.500000  NaN  NaN  NaN  NaN   
50%     20.000000  ...  NaN  NaN  NaN  NaN   11.600000  NaN  NaN  NaN  NaN   
75%     23.250000  ...  NaN  NaN  NaN  NaN   15.000000  NaN  NaN  NaN  NaN   
max     41.000000  ...  NaN  NaN  NaN  NaN   23.900000  NaN  NaN  NaN  NaN   

       WTE  
count  0.0  
mean   NaN  
std    NaN  
min    NaN  
25%    NaN  
50%    NaN  
75%    NaN  
max    NaN  

[8 rows x 24 columns]
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;X &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; weather_df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;MinTemp&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;reshape(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; weather_df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;MaxTemp&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;reshape(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)

&lt;span style=&#34;color:#75715e&#34;&gt;# 데이터 셋 분리 &lt;/span&gt;
X_train, X_test, y_train, y_test &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; train_test_split(X, y, test_size&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.2&lt;/span&gt;, random_state&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)

&lt;span style=&#34;color:#75715e&#34;&gt;# 모형 개발 선언&lt;/span&gt;
regressor &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; LinearRegression()  
regressor&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fit(X_train, y_train) &lt;span style=&#34;color:#75715e&#34;&gt;# 알고리즘 트레이닝&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# intercept: 상수&lt;/span&gt;
pprint&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pprint(regressor&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;intercept_)
&lt;span style=&#34;color:#75715e&#34;&gt;# slope: 기울기&lt;/span&gt;
pprint&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pprint(regressor&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;coef_) 

&lt;span style=&#34;color:#75715e&#34;&gt;# 예측&lt;/span&gt;
y_pred &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; regressor&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;predict(X_test)

&lt;span style=&#34;color:#75715e&#34;&gt;# 데이터 셋 비교&lt;/span&gt;
pred_df &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataFrame({&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;실제값&amp;#39;&lt;/span&gt;: y_test&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;flatten(), &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;예측값&amp;#39;&lt;/span&gt;: y_pred&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;flatten()})
pprint&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pprint(pred_df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head())
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;array([10.66185201])
array([[0.92033997]])
         실제값        예측값
0  28.888889  33.670351
1  31.111111  30.091251
2  27.222222  26.512151
3  28.888889  31.113851
4  23.333333  15.774852
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 테스트 데이터와 예측값의 기울기 비교&lt;/span&gt;
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;scatter(X_test, y_test,  color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;gray&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(X_test, y_pred, color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;, linewidth&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/scikit_regression/ML01_regression/output_7_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 모형 성능&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;MAE:&amp;#39;&lt;/span&gt;, metrics&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mean_absolute_error(y_test, y_pred))  
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;MSE:&amp;#39;&lt;/span&gt;, metrics&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mean_squared_error(y_test, y_pred))  
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;RMSE:&amp;#39;&lt;/span&gt;, np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sqrt(metrics&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mean_squared_error(y_test, y_pred)))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;MAE: 3.19932917837853
MSE: 17.631568097568447
RMSE: 4.198996082109204
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;위 소스코드의 구체적인 설명자료는 &lt;a href=&#34;https://chloevan.github.io/python/machin_learning/scikit_regression/ml01_regression2/&#34;&gt;Machine Learning Tutorial 02 - Regression (2)&lt;/a&gt;를 참고하시기를 바랍니다.&lt;/p&gt;
&lt;h2 id=&#34;iii-reference&#34;&gt;III. Reference&lt;/h2&gt;
&lt;p&gt;Chauhan, N. S. (2019, September 7). A beginner&amp;rsquo;s guide to Linear Regression in Python with Scikit-Learn. Retrieved March 19, 2020, from &lt;a href=&#34;https://towardsdatascience.com/a-beginners-guide-to-linear-regression-in-python-with-scikit-learn-83a8f7ae2b4f&#34;&gt;https://towardsdatascience.com/a-beginners-guide-to-linear-regression-in-python-with-scikit-learn-83a8f7ae2b4f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;End of Document&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>