<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>function on Data Science | ChloEvan</title>
    <link>https://chloevan.github.io/categories/function/</link>
    <description>Recent content in function on Data Science | ChloEvan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 27 Aug 2020 16:00:47 +0900</lastBuildDate>
    
	<atom:link href="https://chloevan.github.io/categories/function/rss.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>LSTM을 활용한 주식가격 예측</title>
      <link>https://chloevan.github.io/python/python_edu/07_deeplearning/deep_learning_lstm/</link>
      <pubDate>Thu, 27 Aug 2020 16:00:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/07_deeplearning/deep_learning_lstm/</guid>
      <description>LSTM과 RNN의 개요  RNN은 자연어처리에서 사용되는 대표적인 알고리즘  순환신경망으로 표현됨 활용범위: 음성 인식, 언어 모델링, 번역, 이미지 주석 생성      Long Short-term Memory로 1997년에 소개되었음(Hochreiter and Schmidhuber, 1997).
 논문: Long Short-term Memory    LSTM 네트워크는 recurrent neural network(RNN)의 한 종류임.
 LSTM은 RNN의 특별한 한 종류로, 긴 의존 기간을 필요로 하는 학습을 수행할 능력을 갖고 있다.    간단하게 영어 단어를 맞춰보자.</description>
    </item>
    
    <item>
      <title>NumPy with ndarray</title>
      <link>https://chloevan.github.io/python/python_edu/01_basic/chapter_3_8_numpy/</link>
      <pubDate>Tue, 11 Aug 2020 18:00:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/01_basic/chapter_3_8_numpy/</guid>
      <description>Numpy ndarray 개요  넘파이 array()는 ndarray로 변환 가능 생성된 ndarray배열의 shape변수는 ndarray의 크기, 행과 열의 수를 튜플 형태로 가지고 있으며, 이를 통해 ndarray 배열의 차원까지 알 수 있음  (1) 배열이란?  NumPy에서 배열은 동일한 타입의 값을 가짐 shape는 각 차원의 크기를 튜플로 표시한다. 차원이란 무엇일까?  1차원은 보통 하나의 선을 의미 2차원은 평면을 의미하고, 데이터 분석에서는 보통 데이터프레임을 의미한다. 3차원은 공간을 의미하고, 딥러닝에서는 보통 이미지를 의미한다. (RGB)    shape와 ndim  코드를 통해서 shape와 ndim 함수를 확인해본다.</description>
    </item>
    
    <item>
      <title>How to create my own function</title>
      <link>https://chloevan.github.io/python/python_edu/01_basic/chapter_3_6_def/</link>
      <pubDate>Thu, 09 Jul 2020 12:00:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/01_basic/chapter_3_6_def/</guid>
      <description>I. 개요  나만의 함수를 작성해 본다. 실행가능한 함수를 만들어 본다.  II. 기존 내장 함수  함수는 특정 기능을 수행하는 코드를 의미한다. 함수는 Sum(), Len()을 의미한다.  x = [1,2,3,4,5] print(sum(x)) print(len(x)) 5  III 사용자 정의 함수 예제  이제 사용자 정의 함수를 사용하자. 함수 선언 시, def는 define의 약자다.  def my_avg(x): sum_var = sum(x) len_var = len(x) return sum_var / len_var print(my_avg(x)) 3.0   기본적인 사용정의 함수는 크게 매개 변수와 return으로 이루어진다.</description>
    </item>
    
  </channel>
</rss>