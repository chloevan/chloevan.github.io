<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Google Colab on Data Science | ChloEvan</title>
    <link>https://chloevan.github.io/categories/google-colab/</link>
    <description>Recent content in Google Colab on Data Science | ChloEvan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 24 May 2020 13:11:47 +0900</lastBuildDate>
    
        <atom:link href="https://chloevan.github.io/categories/google-colab/rss.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Kakao Arena 3 EDA on Google Colab</title>
      <link>https://chloevan.github.io/settings/kakao_arena_3_eda/</link>
      <pubDate>Sun, 24 May 2020 13:11:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/settings/kakao_arena_3_eda/</guid>
      <description>&lt;h2 id=&#34;공지&#34;&gt;공지&lt;/h2&gt;
&lt;p&gt;제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.&lt;/p&gt;
&lt;p&gt;이전 포스트인 &lt;a href=&#34;https://chloevan.github.io/settings/colab_drive_github_settings/&#34;&gt;Colab + Drive + Github Workflow&lt;/a&gt; 실전 테스트용으로 생각하면서 읽어주기를 바란다.&lt;/p&gt;
&lt;h2 id=&#34;i-개요&#34;&gt;I. 개요&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;프로젝트 폴더 내에서 간단하게 EDA를 실습하는 시간을 갖도록 한다.&lt;/li&gt;
&lt;li&gt;관련 패키지는 우선 다른 곳에서 설치 되었다는 것을 가정한다.
&lt;ul&gt;
&lt;li&gt;참고: &lt;a href=&#34;https://chloevan.github.io/settings/colab_package_settings/&#34;&gt;Python Package Settings on Google Colab&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;본 포스트의 핵심은 환경설정이 &lt;code&gt;Google Colab + Drive내&lt;/code&gt;에서 작업하는 것이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ii-패키지-불러오기&#34;&gt;II. 패키지 불러오기&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;다음과 같은 순서로 실행한다.&lt;/li&gt;
&lt;li&gt;첫째, 나눔고딕 한글 폰트를 설치한다.&lt;/li&gt;
&lt;li&gt;둘째, 내부 패키지를 먼저 불러온다.&lt;/li&gt;
&lt;li&gt;셋째, 런타임을 다시 실행한다.&lt;/li&gt;
&lt;li&gt;넷째, &lt;code&gt;Drive&lt;/code&gt; 마운트를 진행한다.&lt;/li&gt;
&lt;li&gt;다섯째, 외부 패키지를 불러온다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1-나눔고딕-폰트-불러오기&#34;&gt;(1) 나눔고딕 폰트 불러오기&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;다음과 같은 방식으로 폰트를 불러온다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;config InlineBackend&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;figure_format &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;retina&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;apt &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;qq &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;y install fonts&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;nanum
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;The following NEW packages will be installed:
  fonts-nanum
0 upgraded, 1 newly installed, 0 to remove and 31 not upgraded.
Need to get 9,604 kB of archives.
After this operation, 29.5 MB of additional disk space will be used.
Selecting previously unselected package fonts-nanum.
(Reading database ... 144433 files and directories currently installed.)
Preparing to unpack .../fonts-nanum_20170925-1_all.deb ...
Unpacking fonts-nanum (20170925-1) ...
Setting up fonts-nanum (20170925-1) ...
Processing triggers for fontconfig (2.12.6-0ubuntu2) ...
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;2-내부에-기-설치된-패키지-불러오기&#34;&gt;(2) 내부에 기 설치된 패키지 불러오기&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;관련 패키지를 불러온다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; datetime &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; timedelta, datetime
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; glob
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; itertools &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; chain
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; json
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; os
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; re

&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; numpy &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; np
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pd

&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; wordcloud &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; WordCloud
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; nltk
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; nltk.corpus &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; stopwords
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; collections &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Counter
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; sklearn.feature_extraction.text &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; TfidfVectorizer
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; sklearn.feature_extraction.text &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; CountVectorizer

&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; pandas.plotting &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; register_matplotlib_converters
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; seaborn &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; sns
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; plt
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; mpl
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; plt
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib.font_manager &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; fm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;fontpath &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/usr/share/fonts/truetype/nanum/NanumBarunGothic.ttf&amp;#39;&lt;/span&gt;
font &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; fm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;FontProperties(fname&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;fontpath, size&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;rc(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;font&amp;#39;&lt;/span&gt;, family&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;NanumBarunGothic&amp;#39;&lt;/span&gt;) 
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;rcParams[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;figure.figsize&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)
register_matplotlib_converters()
mpl&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;font_manager&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;_rebuild()
mpl&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pyplot&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;rc(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;font&amp;#39;&lt;/span&gt;, family&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;NanumGothic&amp;#39;&lt;/span&gt;)
fm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;_rebuild()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;3-외부-패키지인-konlpy-불러오기&#34;&gt;(3) 외부 패키지인 &lt;code&gt;konlpy&lt;/code&gt; 불러오기&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;다음 코드를 실행하기 전 반드시 [런타임]-[런타임 다시 시작]을 누르자.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Mount Google Drive&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; google.colab &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; drive &lt;span style=&#34;color:#75715e&#34;&gt;# import drive from google colab&lt;/span&gt;

ROOT &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/content/drive&amp;#34;&lt;/span&gt;     &lt;span style=&#34;color:#75715e&#34;&gt;# default location for the drive&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(ROOT)                 &lt;span style=&#34;color:#75715e&#34;&gt;# print content of ROOT (Optional)&lt;/span&gt;
drive&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mount(ROOT)           &lt;span style=&#34;color:#75715e&#34;&gt;# we mount the google drive at /content/drive&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;/content/drive
Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(&amp;quot;/content/drive&amp;quot;, force_remount=True).
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; sys
my_path &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/content/notebooks&amp;#39;&lt;/span&gt;
os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;symlink(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/content/drive/My Drive/Colab Notebooks/competition/pkgs_folder&amp;#39;&lt;/span&gt;, my_path)
sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;insert(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,my_path)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; konlpy.tag &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Twitter
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;위 코드에서 만약 에러가 나면 처음부터 다시 해야 하니, 유의 바란다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;options&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mode&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;chained_assignment &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; None
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;iii-데이터-불러오기&#34;&gt;III. 데이터 불러오기&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;이제 깃허브 프로젝트인 &lt;code&gt;competition&lt;/code&gt;으로 파일 경로를 변경 한 뒤, 데이터를 불러오도록 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# import join used to join ROOT path and MY_GOOGLE_DRIVE_PATH&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; os.path &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; join  

&lt;span style=&#34;color:#75715e&#34;&gt;# path to your project on Google Drive&lt;/span&gt;
MY_GOOGLE_DRIVE_PATH &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;My Drive/Colab Notebooks/competition&amp;#39;&lt;/span&gt;

PROJECT_PATH &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; join(ROOT, MY_GOOGLE_DRIVE_PATH)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;cd &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{PROJECT_PATH}&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;/content/drive/My Drive/Colab Notebooks/competition
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;git status
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;On branch master
Your branch is up to date with &#39;origin/master&#39;.

Changes not staged for commit:
  (use &amp;quot;git add/rm &amp;lt;file&amp;gt;...&amp;quot; to update what will be committed)
  (use &amp;quot;git checkout -- &amp;lt;file&amp;gt;...&amp;quot; to discard changes in working directory)

    [31mmodified:   .gitignore[m
    [31mdeleted:    kakao_arena_3/source/temp.ipynb[m
    [31mdeleted:    kakao_arena_3/source/temp2.ipynb[m

Untracked files:
  (use &amp;quot;git add &amp;lt;file&amp;gt;...&amp;quot; to include in what will be committed)

    [31mkakao_arena_3/source/kakao_arena_3_eda.ipynb[m

no changes added to commit (use &amp;quot;git add&amp;quot; and/or &amp;quot;git commit -a&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;ls
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;kakao_arena_3  pkgs_folder  README.md
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# genre_gn_all.json&lt;/span&gt;
genre_gn_all &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read_json(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;kakao_arena_3/data/genre_gn_all.json&amp;#39;&lt;/span&gt;, typ &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;series&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;color:#75715e&#34;&gt;# 장르코드 : gnr_code, 장르명 : gnr_name&lt;/span&gt;
genre_gn_all &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataFrame(genre_gn_all, columns &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;gnr_name&amp;#39;&lt;/span&gt;])&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;reset_index()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;rename(columns &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;index&amp;#39;&lt;/span&gt; : &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;gnr_code&amp;#39;&lt;/span&gt;})
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(genre_gn_all&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head())
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;  gnr_code gnr_name
0   GN0100      발라드
1   GN0101   세부장르전체
2   GN0102      &#39;80
3   GN0103      &#39;90
4   GN0104      &#39;00
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 장르코드 뒷자리 두 자리가 00이 아닌 코드를 필터링&lt;/span&gt;
dtl_gnr_code &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; genre_gn_all[genre_gn_all[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;gnr_code&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;str[&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:] &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;00&amp;#39;&lt;/span&gt;]
dtl_gnr_code&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;rename(columns &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;gnr_code&amp;#39;&lt;/span&gt; : &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dtl_gnr_code&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;gnr_name&amp;#39;&lt;/span&gt; : &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dtl_gnr_name&amp;#39;&lt;/span&gt;}, inplace &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; True)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(dtl_gnr_code&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head())
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;  dtl_gnr_code dtl_gnr_name
1       GN0101       세부장르전체
2       GN0102          &#39;80
3       GN0103          &#39;90
4       GN0104          &#39;00
5       GN0105         &#39;10-
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;iv-데이터-시각화-구현&#34;&gt;IV. 데이터 시각화 구현&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;한글 시각화를 구현한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Plotting a bar graph of the number of stores in each city, for the first ten cities listed&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# in the column &amp;#39;City&amp;#39;&lt;/span&gt;
dtl_gnr_name_count  &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dtl_gnr_code[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dtl_gnr_name&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;value_counts()
dtl_gnr_name_count &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dtl_gnr_name_count[:&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;,]
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;figure(figsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;))
sns&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;barplot(dtl_gnr_name_count&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index, dtl_gnr_name_count&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values, alpha&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.8&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;title(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;한글 시각화 테스트&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ylabel(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Number of Occurrences&amp;#39;&lt;/span&gt;, fontsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;xlabel(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;세부장르&amp;#39;&lt;/span&gt;, fontsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/settings/kakao_arena_3_eda/output_22_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;한글 시각화가 정상적으로 나온 것을 꼭 확인한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;v-github-연동&#34;&gt;V. Github 연동&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;우선 깃허브와 연동하자.&lt;/li&gt;
&lt;li&gt;그리고, 작성된 코드를 업데이트 하도록 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Clone github repository setup&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# import join used to join ROOT path and MY_GOOGLE_DRIVE_PATH&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; os.path &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; join  

&lt;span style=&#34;color:#75715e&#34;&gt;# path to your project on Google Drive&lt;/span&gt;
MY_GOOGLE_DRIVE_PATH &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;My Drive/Colab Notebooks/&amp;#39;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# replace with your github username&lt;/span&gt;
GIT_USERNAME &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;chloevan&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# definitely replace with your&lt;/span&gt;
GIT_TOKEN &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;your_token&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# this is temporary, whenever you add, need to get token number&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# Replace with your github repository in this case we want &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# to clone deep-learning-v2-pytorch repository&lt;/span&gt;
GIT_REPOSITORY &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;competition&amp;#34;&lt;/span&gt;

PROJECT_PATH &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; join(ROOT, MY_GOOGLE_DRIVE_PATH)

&lt;span style=&#34;color:#75715e&#34;&gt;# It&amp;#39;s good to print out the value if you are not sure &lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PROJECT_PATH: &amp;#34;&lt;/span&gt;, PROJECT_PATH)  

&lt;span style=&#34;color:#75715e&#34;&gt;# In case we haven&amp;#39;t created the folder already; we will create a folder in the project path &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# !mkdir &amp;#34;{PROJECT_PATH}&amp;#34;    &lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;#GIT_PATH = &amp;#34;https://{GIT_TOKEN}@github.com/{GIT_USERNAME}/{GIT_REPOSITORY}.git&amp;#34; this return 400 Bad Request for me&lt;/span&gt;
GIT_PATH &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; GIT_TOKEN &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;@github.com/&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; GIT_USERNAME &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; GIT_REPOSITORY &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.git&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;GIT_PATH: &amp;#34;&lt;/span&gt;, GIT_PATH)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;PROJECT_PATH:  /content/drive/My Drive/Colab Notebooks/
GIT_PATH:  https://619..your_token..46b@github.com/chloevan/competition.git
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;git remote set&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;url origin &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{GIT_PATH}&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;git add &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# Linked to account&lt;/span&gt;
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;git config &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;global&lt;/span&gt; user&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;email &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;your_email_address&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;git config &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;global&lt;/span&gt; user&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;name &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;your_username&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# Git commit&lt;/span&gt;
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;git commit &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;finally updated&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;git push
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[master c93a004] finally updated
1 file changed, 1 insertion(+), 1 deletion(-)
Counting objects: 15, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (15/15), done.
Writing objects: 100% (15/15), 1.79 KiB | 367.00 KiB/s, done.
Total 15 (delta 9), reused 0 (delta 0)
remote: Resolving deltas: 100% (9/9), completed with 3 local objects.
To https://github.com/chloevan/competition.git
  320ecd5..c93a004  master -&amp;gt; master
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;v-reference&#34;&gt;V. Reference&lt;/h2&gt;
&lt;p&gt;PinkWink. (2019, November 18). 구글 Colab에서 한글 문제 대응하기. Retrieved May 24, 2020, from &lt;a href=&#34;https://pinkwink.kr/1255&#34;&gt;https://pinkwink.kr/1255&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Say, V. (2020, January 01). Google Drive + Google Colab + GitHub; Don’t Just Read, Do It! Retrieved May 24, 2020, from &lt;a href=&#34;https://towardsdatascience.com/google-drive-google-colab-github-dont-just-read-do-it-5554d5824228&#34;&gt;https://towardsdatascience.com/google-drive-google-colab-github-dont-just-read-do-it-5554d5824228&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Żero, O. (2019, October 30). Colaboratory + Drive + Github - the workflow made simpler. Retrieved May 24, 2020, from &lt;a href=&#34;https://towardsdatascience.com/colaboratory-drive-github-the-workflow-made-simpler-bde89fba8a39&#34;&gt;https://towardsdatascience.com/colaboratory-drive-github-the-workflow-made-simpler-bde89fba8a39&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;소스코드&lt;a href=&#34;https://arena.kakao.com/c/7&#34;&gt;카카오 아레나 3 EDA&lt;/a&gt;에서 일부 사용했다. (Chapter 2-4)&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Colab &#43; Drive &#43; Github Workflow</title>
      <link>https://chloevan.github.io/settings/colab_drive_github_settings/</link>
      <pubDate>Sun, 24 May 2020 11:11:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/settings/colab_drive_github_settings/</guid>
      <description>&lt;h2 id=&#34;공지&#34;&gt;공지&lt;/h2&gt;
&lt;p&gt;제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.&lt;/p&gt;
&lt;h2 id=&#34;i-동기-부여-및-개요&#34;&gt;I. 동기 부여 및 개요&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Google Colab&lt;/code&gt;을 알게 된 이후에, 모든 파일을 가급적 여기에서 작성을 한다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Why?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;첫째, &lt;code&gt;GPU&lt;/code&gt;를 무료로 사용할 수 있다.&lt;/li&gt;
&lt;li&gt;둘째, 맥북에어의 저용량을 쓰는 나에게 있어, 시스템 파일 등을 &lt;code&gt;Local&lt;/code&gt;로 내려받는데 버거움이 있다.&lt;/li&gt;
&lt;li&gt;셋째, 온라인 강의 및 책을 협업해서 써야 하는데, 각 &lt;code&gt;Local&lt;/code&gt; 환경을 구축하는 번거로움을 없애고 싶었다.&lt;/li&gt;
&lt;li&gt;마지막으로, 파일 공유가 가능하다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;문제는 &lt;code&gt;Google Colab&lt;/code&gt; + &lt;code&gt;Drive&lt;/code&gt; + &lt;code&gt;Github&lt;/code&gt;로 연동하여 소스파일을 관리해야 하는 시점이 도래했다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;주 목적은 &lt;code&gt;Google Colab&lt;/code&gt;을 향후에 팀 프로젝트로 연결하고자 하는 준비 차원에서 작성을 해본다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/settings/colab_drive_github_settings/triangle.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;ii-기존-방식---google-colab-with-github&#34;&gt;II. 기존 방식 - Google Colab with Github&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;기존에는 [파일]-[Github에 사본저장]을 클릭하여 조금은 수동으로 파일을 저장하고 있었다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/settings/colab_drive_github_settings/before.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;그런데, 가끔 파일을 다른 &lt;code&gt;repo&lt;/code&gt;에 저장하는 등의 실수(&lt;code&gt;mistake&lt;/code&gt;)를 저지르기도 하여, 불필요한 작업을 수행하였다. 삭제하는 것이 어려운 것은 아니나, 가끔 있어야 하는 파일이 없을 때, 조금 황당하기도 했다.&lt;/li&gt;
&lt;li&gt;이제, 본격적으로 &lt;code&gt;프로젝트 폴더&lt;/code&gt; 단위로 &lt;code&gt;github&lt;/code&gt;와 연동하는 작업을 수행하고, &lt;code&gt;Drive&lt;/code&gt;에 이를 반영하도록 하자.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;iii-업무-개선---colab-with-drive&#34;&gt;III. 업무 개선 - Colab with Drive&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;각종 경진대회에 나가는 &lt;code&gt;repo&lt;/code&gt;를 하나 만들었다.&lt;/li&gt;
&lt;li&gt;그 &lt;code&gt;repo&lt;/code&gt;는 그대로 &lt;code&gt;Drive&lt;/code&gt;로 내려받는데, &lt;code&gt;colab&lt;/code&gt;을 이용한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1-mount-google-drive-to-google-colab&#34;&gt;(1) Mount Google Drive to Google Colab&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;구글 드라이브(Drive)&lt;/code&gt;를 &lt;code&gt;구글 코랩(Colab)&lt;/code&gt;에 &lt;code&gt;mount&lt;/code&gt;하기 위해 아래 코드를 작성한다.&lt;/li&gt;
&lt;li&gt;이 때 &lt;code&gt;authorization code&lt;/code&gt;가 활성화 되는데, 인증을 진행한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Mount Google Drive&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; google.colab &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; drive &lt;span style=&#34;color:#75715e&#34;&gt;# import drive from google colab&lt;/span&gt;

ROOT &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/content/drive&amp;#34;&lt;/span&gt;     &lt;span style=&#34;color:#75715e&#34;&gt;# default location for the drive&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(ROOT)                 &lt;span style=&#34;color:#75715e&#34;&gt;# print content of ROOT (Optional)&lt;/span&gt;
drive&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mount(ROOT)           &lt;span style=&#34;color:#75715e&#34;&gt;# we mount the google drive at /content/drive&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;/content/drive
Go to this URL in a browser: https://accounts.google.com/o/oauth2/auth?client_id=947318989803-6bn6qk8qdgf4n4g3pfee6491hc0brc4i.apps.googleusercontent.com&amp;amp;redirect_uri=urn%3aietf%3awg%3aoauth%3a2.0%3aoob&amp;amp;response_type=code&amp;amp;scope=email%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdocs.test%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive.photos.readonly%20https%3a%2f%2fwww.googleapis.com%2fauth%2fpeopleapi.readonly

Enter your authorization code:
··········
Mounted at /content/drive
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Mounted at /content/drive&lt;/code&gt; 결과값이 나오면 성공적으로 &lt;code&gt;Google Drive&lt;/code&gt;가 &lt;code&gt;mount&lt;/code&gt;가 되었다는 뜻이다.&lt;/li&gt;
&lt;li&gt;간단하게 &lt;code&gt;CLI(=Command-Line Interface)&lt;/code&gt;을 활용하여 현재 경로를 확인한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;pwd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&#39;/content&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;ls
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[0m[01;34mdrive[0m/  [01;34msample_data[0m/
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;cd drive&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;My Drive&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Colab Notebooks&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;/content/drive/My Drive/Colab Notebooks
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;ls
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&#39;Colaboratory에 오신 것을 환영합니다의 사본&#39;   [0m[01;34mpython_edu[0m/
&#39;colab_package_settings.ipynb의 사본&#39;          tempMelonData.ipynb
 [01;34mcompetition_temp[0m/                             Untitled0.ipynb
 [01;34mdeeplearningAI[0m/                               Untitled1.ipynb
 [01;34mgcp_tutorial[0m/                                 Untitled2.ipynb
 [01;34mimg[0m/                                          Untitled3.ipynb
 melonData.ipynb                              [01;34m&#39;카카오X멜론 공모전&#39;[0m[K/
 [01;34mpkg_folders[0m/
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;iv-업무-개선---clone-github-repo-to-google-drive&#34;&gt;IV. 업무 개선 - Clone Github Repo to Google Drive&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;우선 깃허브에서 &lt;code&gt;competition&lt;/code&gt;이라는 &lt;code&gt;Repo&lt;/code&gt;를 사전에 만들었다. (이 부분은 안다는 것으로 전제한다!)
&lt;ul&gt;
&lt;li&gt;만약, 처음 &lt;code&gt;Github&lt;/code&gt;를 접한다면, 댓글을 남겨주실 것을 권한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;필자는 &lt;code&gt;Colab Notebooks&lt;/code&gt; 폴더 안에 &lt;code&gt;competiton&lt;/code&gt;라는 &lt;code&gt;repo&lt;/code&gt;를 다운로드 받을 것이다.&lt;/li&gt;
&lt;li&gt;이 때, 아래 4개의 변수를 &lt;code&gt;script&lt;/code&gt;에 저장할 필요가 있다.
&lt;ul&gt;
&lt;li&gt;GIT_TOKEN (GitHub Access Token)&lt;/li&gt;
&lt;li&gt;MY_GOOGLE_DRIVE_PATH&lt;/li&gt;
&lt;li&gt;GIT_USERNAME&lt;/li&gt;
&lt;li&gt;GIT_REPOSITORY&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1-깃허브-access-token&#34;&gt;(1) 깃허브 Access Token&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;[Profile]-[Settings]-[Developer settings]-[Personal Access tokens] 순서대로 클릭한다.
&lt;img src=&#34;https://chloevan.github.io/img/settings/colab_drive_github_settings/settings_01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;이 때, 꼭 아래 그림처럼 &lt;code&gt;repo&lt;/code&gt;를 클릭한다.
&lt;img src=&#34;https://chloevan.github.io/img/settings/colab_drive_github_settings/settings_02.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-4가지-변수-할당&#34;&gt;(2) 4가지 변수 할당&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;소스 코드 작성 전, 몇가지 주의사항이 있다.
&lt;ul&gt;
&lt;li&gt;첫째, 구글 드라이브와 경로에 해당하는 폴더 명과 깃허브의 &lt;code&gt;repo&lt;/code&gt;명을 통일시킨다 (필자는 &lt;code&gt;competition&lt;/code&gt;으로 통일함).&lt;/li&gt;
&lt;li&gt;이 때 한가지 주의점은 &lt;code&gt;Access Token&lt;/code&gt;은 외부로 유출시키지 않는다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;pwd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&#39;/content/drive/My Drive/Colab Notebooks&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Clone github repository setup&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# import join used to join ROOT path and MY_GOOGLE_DRIVE_PATH&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; os.path &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; join  

&lt;span style=&#34;color:#75715e&#34;&gt;# path to your project on Google Drive&lt;/span&gt;
MY_GOOGLE_DRIVE_PATH &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;My Drive/Colab Notebooks/&amp;#39;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# replace with your github username&lt;/span&gt;
GIT_USERNAME &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;chloevan&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# definitely replace with your&lt;/span&gt;
GIT_TOKEN &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;your_token&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# Replace with your github repository in this case we want &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# to clone deep-learning-v2-pytorch repository&lt;/span&gt;
GIT_REPOSITORY &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;competition&amp;#34;&lt;/span&gt;

PROJECT_PATH &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; join(ROOT, MY_GOOGLE_DRIVE_PATH)

&lt;span style=&#34;color:#75715e&#34;&gt;# It&amp;#39;s good to print out the value if you are not sure &lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PROJECT_PATH: &amp;#34;&lt;/span&gt;, PROJECT_PATH)  

&lt;span style=&#34;color:#75715e&#34;&gt;# In case we haven&amp;#39;t created the folder already; we will create a folder in the project path &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# !mkdir &amp;#34;{PROJECT_PATH}&amp;#34;    &lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;#GIT_PATH = &amp;#34;https://{GIT_TOKEN}@github.com/{GIT_USERNAME}/{GIT_REPOSITORY}.git&amp;#34; this return 400 Bad Request for me&lt;/span&gt;
GIT_PATH &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; GIT_TOKEN &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;@github.com/&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; GIT_USERNAME &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; GIT_REPOSITORY &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.git&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;GIT_PATH: &amp;#34;&lt;/span&gt;, GIT_PATH)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;PROJECT_PATH:  /content/drive/My Drive/Colab Notebooks/
GIT_PATH:  https://27e6426ead8d8c63444979436bda4ea8aaf2aea3@github.com/chloevan/competition.git
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;2-깃허브-연동-두가지-옵션&#34;&gt;(2) 깃허브 연동 두가지 옵션&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;여기에서 고려해야 할 사항은 구글 드라이브내 이미 존재하는 파일과 합치는 부분이 있다.&lt;/li&gt;
&lt;li&gt;아래 코드를 확인해보자.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-terminal&#34; data-lang=&#34;terminal&#34;&gt;!git clone &amp;quot;{GIT_PATH}&amp;quot; ./temp      # clone github repository to temp folder
!mv ./temp/* &amp;quot;{PROJECT_PATH}&amp;quot;       # move all files/folders in temp folder to folder defined in project path
!rm -rf ./temp                      # remove all the files/folders in temp folder
!rsync -aP --exclude=data/ &amp;quot;{PROJECT_PATH}&amp;quot;/*  ./   # use remote sync to copy from google drive to local runtime google colab
                                                    # but exclude data folder
                                                    # https://www.computerhope.com/unix/rsync.htm
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;첫번째라인의 코드는 깃허브 &lt;code&gt;repo&lt;/code&gt;를 드라이브 내 &lt;code&gt;temp&lt;/code&gt;폴더에 저장한다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;두번째라인의 코드는 &lt;code&gt;temp&lt;/code&gt;폴더의 모든 파일을 &lt;code&gt;{PROJECT_PATH}&lt;/code&gt;에 잘라넣기 한다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;세번째라인의 코드는 기존 &lt;code&gt;temp&lt;/code&gt;를 삭제 한다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;네번째라인의 코드는 큰 용량을 차지하는 &lt;code&gt;data&lt;/code&gt;와 같은 부분은 제외한다는 뜻이다. (이 부분은 별도의 에러를 경험해야 필요성을 알 수 있을 것 같다!)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;여기에서는 간단하게 &lt;code&gt;!git clone&lt;/code&gt;을 실행한다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;cd &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{PROJECT_PATH}&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;git clone &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{GIT_PATH}&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;/content/drive/My Drive/Colab Notebooks
Cloning into &#39;competition&#39;...
remote: Enumerating objects: 7, done.[K
remote: Counting objects: 100% (7/7), done.[K
remote: Compressing objects: 100% (4/4), done.[K
remote: Total 7 (delta 0), reused 0 (delta 0), pack-reused 0[K
Unpacking objects: 100% (7/7), done.
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;에러가 없다면, 정상적으로 &lt;code&gt;git clone&lt;/code&gt;이 수행된 것이다.&lt;/li&gt;
&lt;li&gt;이 때, 구글 드라이브 내 &lt;code&gt;competition&lt;/code&gt; 폴더에서 &lt;code&gt;.git&lt;/code&gt; 폴더가 생성되었는지 확인한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/settings/colab_drive_github_settings/settings_03.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;3-폴더-정보-확인&#34;&gt;(3) 폴더 정보 확인&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git clone&lt;/code&gt;을 통해서 파일을 내려받았다면, 간단한 명령어로 폴더를 탐색한다.&lt;/li&gt;
&lt;li&gt;이 때 &lt;code&gt;git branch&lt;/code&gt;를 실행하면 &lt;code&gt;master folder&lt;/code&gt;외에 어떤 &lt;code&gt;branch&lt;/code&gt;들이 있는지 확인이 가능하다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;pwd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&#39;/content/drive/My Drive/Colab Notebooks&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;cd competition&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;/content/drive/My Drive/Colab Notebooks/competition
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;git branch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;* [32mmaster[m
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;git checkout master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Already on &#39;master&#39;
Your branch is up to date with &#39;origin/master&#39;.
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;git status
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;On branch master
Your branch is up to date with &#39;origin/master&#39;.

nothing to commit, working tree clean
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;v-파일-추가-및-업데이트&#34;&gt;V. 파일 추가 및 업데이트&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;이제 위 &lt;code&gt;competition&lt;/code&gt;에 참가하기 위한 기본 파일들을 &lt;code&gt;kakao_arena_3&lt;/code&gt;에 저장한다.
&lt;ul&gt;
&lt;li&gt;위 부분은 터미널 명령어가 약하다면 구글 드라이브에서 직접 실행해도 상관없다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1-파일-추가-및-깃허브-업데이트&#34;&gt;(1) 파일 추가 및 깃허브 업데이트&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;간단한게 현재 경로의 파일을 확인하고 소스코드를 작성한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;apt&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;get install tree
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;tree
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Reading package lists... Done
Building dependency tree       
Reading state information... Done
The following NEW packages will be installed:
  tree
0 upgraded, 1 newly installed, 0 to remove and 31 not upgraded.
Need to get 40.7 kB of archives.
After this operation, 105 kB of additional disk space will be used.
Get:1 http://archive.ubuntu.com/ubuntu bionic/universe amd64 tree amd64 1.7.0-5 [40.7 kB]
Fetched 40.7 kB in 0s (117 kB/s)
Selecting previously unselected package tree.
(Reading database ... 144433 files and directories currently installed.)
Preparing to unpack .../tree_1.7.0-5_amd64.deb ...
Unpacking tree (1.7.0-5) ...
Setting up tree (1.7.0-5) ...
Processing triggers for man-db (2.8.3-2ubuntu0.1) ...
.
├── kakao_arena_3
│   └── README.md
└── README.md

1 directory, 2 files
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;!tree&lt;/code&gt;가 실행되지 않는다면, 다음 해당 패키지를 다음 코드 셀에서 다음 명령어를 입력 후 실행한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-terminal&#34; data-lang=&#34;terminal&#34;&gt;!apt-get install tree
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;source&lt;/code&gt; 폴더에 아무것도 없기 때문에, &lt;code&gt;temp.ipynb&lt;/code&gt;파일 생성 후 저장한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;tree
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;.
├── kakao_arena_3
│   ├── README.md
│   └── source
│       └── temp.ipynb
└── README.md

2 directories, 3 files
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;추가된 파일을 확인 후 깃허브에 파일을 저장해보자.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Add / track changed files&lt;/span&gt;
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;git add &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Linked to account&lt;/span&gt;
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;git config &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;global&lt;/span&gt; user&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;email &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;j2hoon85@gmail.com&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;git config &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;global&lt;/span&gt; user&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;name &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;chloevan&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# commit the changes&lt;/span&gt;
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;git commit &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;create temp file&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[master dc8af91] create temp file
 1 file changed, 1 insertion(+)
 create mode 100644 kakao_arena_3/source/temp.ipynb
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# push the changes to github repo&lt;/span&gt;
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;git push
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Counting objects: 5, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (4/4), done.
Writing objects: 100% (5/5), 653 bytes | 163.00 KiB/s, done.
Total 5 (delta 0), reused 0 (delta 0)
To https://github.com/chloevan/competition.git
   04ca27a..dc8af91  master -&amp;gt; master
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;생성된 파일이 깃허브에 잘 올라갔는지 학인해보자.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/settings/colab_drive_github_settings/settings_04.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;2-gitignore-파일-작성&#34;&gt;(2) .gitignore 파일 작성&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Project&lt;/code&gt;에 원하지 않는 &lt;code&gt;백업 File&lt;/code&gt;이나 &lt;code&gt;로그 File&lt;/code&gt;, 혹은 컴파일 된 파일들을 Git에서 제외시킬수 있는 설정 File이다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;여기에서는 &lt;code&gt;.json&lt;/code&gt;을 모두 제외할 예정이다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;첫째, 100MB 이상의 데이터를 굳이 &lt;code&gt;github&lt;/code&gt;에 올릴 필요는 없다.&lt;/li&gt;
&lt;li&gt;둘째, 구글 드라이브에 데이터를 올려놓고 그대로 불러와서 사용하는 방법을 택하고 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;.gitignore&lt;/code&gt;파일은 구글 드라이브에서 만드는 것 보다는 직접 깃허브에서 만들도록 하자.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;이 때, &lt;code&gt;.gitignore&lt;/code&gt;의 파일 위치는 프로젝트의 최상위 경로에 위치해야 한다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;# exclude json file
*.json
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;이제 &lt;code&gt;git pull&lt;/code&gt;로 다시 드라이브 내 파일을 업데이트 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-terminal&#34; data-lang=&#34;terminal&#34;&gt;!git pull
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;3-데이터-파일-및-폰트-파일-업데이트&#34;&gt;(3) 데이터 파일 및 폰트 파일 업데이트&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;다운로드 받은 데이터와 폰트 파일을 프로젝트 폴더에 업데이트 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-terminal&#34; data-lang=&#34;terminal&#34;&gt;!tree
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;.
├── kakao_arena_3
│   ├── data
│   │   ├── genre_gn_all.json
│   │   ├── song_meta.json
│   │   ├── test.json
│   │   ├── train.json
│   │   └── val.json
│   ├── README.md
│   ├── settings
│   │   └── NanumGothic.ttf
│   └── source
│       ├── temp2.ipynb
│       └── temp.ipynb
└── README.md

4 directories, 10 files
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;이제 &lt;code&gt;json&lt;/code&gt;파일은 업데이트 되지 않지만, &lt;code&gt;NanumGothic.ttf&lt;/code&gt; 파일은 업데이트 될 것이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-terminal&#34; data-lang=&#34;terminal&#34;&gt;!git add .
!git commit -m &amp;quot;font updated excluded data&amp;quot;
!git push origin master
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;[master 7d45fd3] font updated excluded data
2 files changed, 0 insertions(+), 0 deletions(-)
create mode 100644 kakao_arena_3/settings/NanumGothic.ttf
rename kakao_arena_3/source/{Copy of temp.ipynb =&amp;gt; temp2.ipynb} (100%)
Counting objects: 6, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (5/5), done.
Writing objects: 100% (6/6), 2.28 MiB | 4.40 MiB/s, done.
Total 6 (delta 1), reused 0 (delta 0)
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
To https://github.com/chloevan/competition.git
  b6c954c..7d45fd3  master -&amp;gt; master
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;json&lt;/code&gt; 파일을 제외한 폰트 파일은 업데이트 되었는지 &lt;code&gt;github&lt;/code&gt;에서 확인해본다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/settings/colab_drive_github_settings/settings_05.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;vi-final-test&#34;&gt;VI. Final Test&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;새로운 노트북을 열고 이제 마지막 테스트를 진행해본다.&lt;/li&gt;
&lt;li&gt;파일명은 &lt;code&gt;kakao_arena_3_eda&lt;/code&gt;이라고 지정했다.&lt;/li&gt;
&lt;li&gt;결과 파일은 다음 게시글에서 확인한다.
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/settings/kakao_arena_3_eda/&#34;&gt;Kakao Arena 3 EDA on Google Colab&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;
&lt;p&gt;Say, V. (2020, January 01). Google Drive + Google Colab + GitHub; Don&amp;rsquo;t Just Read, Do It! Retrieved May 24, 2020, from &lt;a href=&#34;https://towardsdatascience.com/google-drive-google-colab-github-dont-just-read-do-it-5554d5824228&#34;&gt;https://towardsdatascience.com/google-drive-google-colab-github-dont-just-read-do-it-5554d5824228&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Żero, O. (2019, October 30). Colaboratory + Drive + Github - the workflow made simpler. Retrieved May 24, 2020, from &lt;a href=&#34;https://towardsdatascience.com/colaboratory-drive-github-the-workflow-made-simpler-bde89fba8a39&#34;&gt;https://towardsdatascience.com/colaboratory-drive-github-the-workflow-made-simpler-bde89fba8a39&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Python Package Settings on Google Colab</title>
      <link>https://chloevan.github.io/settings/colab_package_settings/</link>
      <pubDate>Sat, 23 May 2020 21:01:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/settings/colab_package_settings/</guid>
      <description>&lt;h2 id=&#34;공지&#34;&gt;공지&lt;/h2&gt;
&lt;p&gt;제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.&lt;/p&gt;
&lt;h2 id=&#34;i-개요&#34;&gt;I. 개요&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;교육상, 최근 &lt;code&gt;kaggle&lt;/code&gt; 및 국내 경진 대회에 참여할 일이 생겼다.&lt;/li&gt;
&lt;li&gt;실습을 해보니, 매번 패키지와 파일을 다운로드 받는 것이 많이 불편했다.
&lt;ul&gt;
&lt;li&gt;파일을 열 때마다, &lt;code&gt;!pip install name_of_package&lt;/code&gt;을 실행해야 하는 번거로움이 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;이러한 해결책으로 파이썬 패키지를 &lt;code&gt;Google Colab&lt;/code&gt;에 영구적(&lt;code&gt;Permantly&lt;/code&gt;)으로 설치하는 것을 실습한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/kaggle/kaggle_with_colab/logo.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;ii-구글-드라이브-활용&#34;&gt;II. 구글 드라이브 활용&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;구글 드라이브에 패키지 모듈을 내려받고, 구글 드라이브에서 패키지를 불러오는 방식이다. 아래 코드를 보자.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1-사전-준비&#34;&gt;(1) 사전 준비&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;이 때 패키지 관리 폴더는 &lt;code&gt;Colab Notebooks&lt;/code&gt; 안에 &lt;code&gt;pkg_folders&lt;/code&gt;가 없다면 관련 경로대로 추가를 해야 한다. 만약 폴더가 없다면 에러가 날 것이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; sys
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; google.colab &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; drive
drive&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mount(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/content/mnt&amp;#39;&lt;/span&gt;)
my_path &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/content/notebooks&amp;#39;&lt;/span&gt;
os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;symlink(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/content/mnt/My Drive/Colab Notebooks/pkg_folders&amp;#39;&lt;/span&gt;, my_path)
sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;insert(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,my_path)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Go to this URL in a browser: https://accounts.google.com/o/oauth2/auth?client_id=947318989803-6bn6qk8qdgf4n4g3pfee6491hc0brc4i.apps.googleusercontent.com&amp;amp;redirect_uri=urn%3aietf%3awg%3aoauth%3a2.0%3aoob&amp;amp;response_type=code&amp;amp;scope=email%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdocs.test%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive.photos.readonly%20https%3a%2f%2fwww.googleapis.com%2fauth%2fpeopleapi.readonly

Enter your authorization code:
··········
Mounted at /content/mnt
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;위 코드의 실행 결과는 구글 드라이브가 &lt;code&gt;mount&lt;/code&gt;가 되었음을 의미하며, 이제 &lt;code&gt;pip install package&lt;/code&gt;를 실행하면 타겟 경로에 패키지 파일을 받을 수 있습니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-패키지-설치-실습-openpyxl&#34;&gt;(2) 패키지 설치 실습 &lt;code&gt;openpyxl&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;엑셀 관련 패키지인 &lt;code&gt;openpyxl&lt;/code&gt;을 설치합니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-terminal&#34; data-lang=&#34;terminal&#34;&gt;!pip install openpyxl
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;그러나, 이제 아래와 같이 설치를 해야 합니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-terminal&#34; data-lang=&#34;terminal&#34;&gt;!pip install --target=$my_path openpyxl
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code class=&#34;language-terminal&#34; data-lang=&#34;terminal&#34;&gt;!pip install --target=$my_path openpyxl
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;Processing /root/.cache/pip/wheels/b5/85/ca/e768ac132e57e75e645a151f8badac71cc0089e7225dddf76b/openpyxl-3.0.3-py2.py3-none-any.whl
Collecting jdcal
Using cached https://files.pythonhosted.org/packages/f0/da/572cbc0bc582390480bbd7c4e93d14dc46079778ed915b505dc494b37c57/jdcal-1.4.1-py2.py3-none-any.whl
Processing /root/.cache/pip/wheels/2a/77/35/0da0965a057698121fc7d8c5a7a9955cdbfb3cc4e2423cad39/et_xmlfile-1.0.1-cp36-none-any.whl
Installing collected packages: jdcal, et-xmlfile, openpyxl
Successfully installed et-xmlfile-1.0.1 jdcal-1.4.1 openpyxl-3.0.3
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;에러 없이 정상적으로 설치가 된 것을 확인할 수 있다.&lt;/li&gt;
&lt;li&gt;이 때, &lt;code&gt;Google Drive&lt;/code&gt;인 &lt;code&gt;Web UI&lt;/code&gt;에서도 패키지가 정상적으로 다운로드가 받아진 것을 확인할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/kaggle/colab_package_settings/drive_01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;예제 코드를 실행하자.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;package&lt;/code&gt;를 불러와보자.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; openpyxl &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; __version__
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(__version__)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;3.0.3
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;정상적으로 버전이 불러와졌다면 패키지가 설치된 것이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-한글-konlpy-설치&#34;&gt;(3) 한글 konlpy 설치&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;이번에는 &lt;code&gt;konlpy&lt;/code&gt;를 설치해보자.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-terminal&#34; data-lang=&#34;terminal&#34;&gt;!apt-get update
!apt-get install g++ openjdk-8-jdk 
!pip3 install --target=$my_path konlpy
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;Hit:1 http://ppa.launchpad.net/graphics-drivers/ppa/ubuntu bionic InRelease
Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease                        
.
.
.
Collecting konlpy
Downloading https://files.pythonhosted.org/packages/85/0e/f385566fec837c0b83f216b2da65db9997b35dd675e107752005b7d392b1/konlpy-0.5.2-py2.py3-none-any.whl (19.4MB)
    |████████████████████████████████| 19.4MB 37.0MB/s 
.
.
.
Installing collected packages: beautifulsoup4, numpy, colorama, lxml, six, PySocks, urllib3, chardet, certifi, idna, requests, oauthlib, requests-oauthlib, tweepy, JPype1, konlpy
Successfully installed JPype1-0.7.5 PySocks-1.7.1 beautifulsoup4-4.6.0 certifi-2020.4.5.1 chardet-3.0.4 colorama-0.4.3 idna-2.9 konlpy-0.5.2 lxml-4.5.1 numpy-1.18.4 oauthlib-3.1.0 requests-2.23.0 requests-oauthlib-1.3.0 six-1.15.0 tweepy-3.8.0 urllib3-1.25.9
WARNING: Target directory /content/notebooks/__pycache__ already exists. Specify --upgrade to force replacement.
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; konlpy.tag &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Twitter

twitter &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Twitter()
twitter&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pos(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;질문이나 건의사항은 깃헙 이슈 트래커에 남겨주세요&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;/content/notebooks/konlpy/tag/_okt.py:16: UserWarning: &amp;quot;Twitter&amp;quot; has changed to &amp;quot;Okt&amp;quot; since KoNLPy v0.4.5.
warn(&#39;&amp;quot;Twitter&amp;quot; has changed to &amp;quot;Okt&amp;quot; since KoNLPy v0.4.5.&#39;)
[(&#39;질문&#39;, &#39;Noun&#39;),
(&#39;이나&#39;, &#39;Josa&#39;),
(&#39;건의&#39;, &#39;Noun&#39;),
(&#39;사항&#39;, &#39;Noun&#39;),
(&#39;은&#39;, &#39;Josa&#39;),
(&#39;깃&#39;, &#39;Noun&#39;),
(&#39;헙&#39;, &#39;Verb&#39;),
(&#39;이슈&#39;, &#39;Noun&#39;),
(&#39;트래커&#39;, &#39;Noun&#39;),
(&#39;에&#39;, &#39;Josa&#39;),
(&#39;남겨주세요&#39;, &#39;Verb&#39;)]
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;정상적으로 패키지가 불러와지는 것을 확인할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;iii-새로운-노트북에서의-실습&#34;&gt;III. 새로운 노트북에서의 실습&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;이제 새로운 &lt;code&gt;Notebook&lt;/code&gt;을 열고 위 기 설치된 두개의 패키지가 정상적으로 실행되는지 확인해본다.&lt;/li&gt;
&lt;li&gt;이 때 주의해야 하는 것은 새로운 &lt;code&gt;Notebook&lt;/code&gt;은 자동으로 경로가 설정된 것은 아니기 때문에, 아래 코드를 명시적으로 상단에 입력해주는 것이 좋다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; sys
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; google.colab &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; drive
drive&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mount(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/content/mnt&amp;#39;&lt;/span&gt;)
my_path &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/content/notebooks&amp;#39;&lt;/span&gt;
os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;symlink(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/content/mnt/My Drive/Colab Notebooks/pkg_folders&amp;#39;&lt;/span&gt;, my_path)
sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;insert(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,my_path)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;아래 그림을 보면 별도의 패키지 설치 없이 &lt;code&gt;Google Drive&lt;/code&gt;를 활용하여 패키지가 불러와지는 것을 확인할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/kaggle/colab_package_settings/test_01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;iv-reference&#34;&gt;IV. Reference&lt;/h2&gt;
&lt;p&gt;어쩐지 오늘은. (2018, August 30). Google Colab 사용하기. Retrieved May 23, 2020, from &lt;a href=&#34;https://zzsza.github.io/data/2018/08/30/google-colab/&#34;&gt;https://zzsza.github.io/data/2018/08/30/google-colab/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Korakot. (2019, March 20). How do I install a library permanently in Colab? Retrieved May 23, 2020, from &lt;a href=&#34;https://stackoverflow.com/questions/55253498/how-do-i-install-a-library-permanently-in-colab&#34;&gt;https://stackoverflow.com/questions/55253498/how-do-i-install-a-library-permanently-in-colab&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Lee, T. (2020, March 20). Google Colab에서 python 패키지를 영구적(permanently)으로 설치하는 방법. Retrieved May 23, 2020, from &lt;a href=&#34;shorturl.at/ktANW&#34;&gt;shorturl.at/ktANW&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>competition - M5 EDA</title>
      <link>https://chloevan.github.io/kaggle/competition_m5_eda_1/</link>
      <pubDate>Thu, 21 May 2020 17:12:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/kaggle/competition_m5_eda_1/</guid>
      <description>&lt;h2 id=&#34;공지&#34;&gt;공지&lt;/h2&gt;
&lt;p&gt;제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.&lt;/p&gt;
&lt;h2 id=&#34;i-개요&#34;&gt;I. 개요&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Kaggle에서 데이터를 다운로드 하는 방법에 대해서는 생략한다.&lt;/li&gt;
&lt;li&gt;본 포스트는 &lt;code&gt;Google Colab&lt;/code&gt;을 기반으로 작성하였다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Kaggle + Google Colab&lt;/code&gt; 데이터 연동하는 방법은 이전 포스트를 참고한다.
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/settings/kaggle_with_colab/&#34;&gt;Kaggle with Google Colab&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/kaggle/kaggle_eda/01_competition.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;데이터는 크게 4가지로 구성되어 있다. (원문 인용)
&lt;ul&gt;
&lt;li&gt;calendar.csv - Contains information about the dates on which the products are sold.&lt;/li&gt;
&lt;li&gt;sales_train_validation.csv - Contains the historical daily unit sales data per product and store [d_1 - d_1913]&lt;/li&gt;
&lt;li&gt;sample_submission.csv - The correct format for submissions. Reference the Evaluation tab for more info.&lt;/li&gt;
&lt;li&gt;sell_prices.csv - Contains information about the price of the products sold per store and date.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ii-데이터-불러오기&#34;&gt;II. 데이터 불러오기&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;pip install kaggle
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; google.colab &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; files
files&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;upload()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Requirement already satisfied: kaggle in /usr/local/lib/python3.6/dist-packages (1.5.6)
Requirement already satisfied: tqdm in /usr/local/lib/python3.6/dist-packages (from kaggle) (4.41.1)
Requirement already satisfied: certifi in /usr/local/lib/python3.6/dist-packages (from kaggle) (2020.4.5.1)
Requirement already satisfied: requests in /usr/local/lib/python3.6/dist-packages (from kaggle) (2.23.0)
Requirement already satisfied: python-dateutil in /usr/local/lib/python3.6/dist-packages (from kaggle) (2.8.1)
Requirement already satisfied: python-slugify in /usr/local/lib/python3.6/dist-packages (from kaggle) (4.0.0)
Requirement already satisfied: six&amp;gt;=1.10 in /usr/local/lib/python3.6/dist-packages (from kaggle) (1.12.0)
Requirement already satisfied: urllib3&amp;lt;1.25,&amp;gt;=1.21.1 in /usr/local/lib/python3.6/dist-packages (from kaggle) (1.24.3)
Requirement already satisfied: chardet&amp;lt;4,&amp;gt;=3.0.2 in /usr/local/lib/python3.6/dist-packages (from requests-&amp;gt;kaggle) (3.0.4)
Requirement already satisfied: idna&amp;lt;3,&amp;gt;=2.5 in /usr/local/lib/python3.6/dist-packages (from requests-&amp;gt;kaggle) (2.9)
Requirement already satisfied: text-unidecode&amp;gt;=1.3 in /usr/local/lib/python3.6/dist-packages (from python-slugify-&amp;gt;kaggle) (1.3)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
Upload widget is only available when the cell has been executed in the
current browser session. Please rerun this cell to enable.
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;pre&gt;&lt;code&gt;Saving kaggle.json to kaggle.json





{&#39;kaggle.json&#39;: b&#39;{&amp;quot;username&amp;quot;:&amp;quot;your_name&amp;quot;,&amp;quot;key&amp;quot;:&amp;quot;your_key&amp;quot;}&#39;}
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;ls &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;ha kaggle&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;json
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;kaggle.json
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;mkdir &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;p &lt;span style=&#34;color:#f92672&#34;&gt;~/.&lt;/span&gt;kaggle &lt;span style=&#34;color:#75715e&#34;&gt;# 파일 생성&lt;/span&gt;
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;mv kaggle&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;json &lt;span style=&#34;color:#f92672&#34;&gt;~/.&lt;/span&gt;kaggle&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# kaggle.json 파일 이동&lt;/span&gt;
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;chmod &lt;span style=&#34;color:#ae81ff&#34;&gt;600&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;~/.&lt;/span&gt;kaggle&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;kaggle&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;json &lt;span style=&#34;color:#75715e&#34;&gt;# 권한 부여&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt; kaggle competitions download &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;c m5&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;forecasting&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;accuracy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Warning: Looks like you&#39;re using an outdated API Version, please consider updating (server 1.5.6 / client 1.5.4)
Downloading sales_train_validation.csv.zip to /content
100% 15.5M/15.5M [00:00&amp;lt;00:00, 56.9MB/s]

Downloading sample_submission.csv.zip to /content
  0% 0.00/163k [00:00&amp;lt;?, ?B/s]
100% 163k/163k [00:00&amp;lt;00:00, 146MB/s]
Downloading sell_prices.csv.zip to /content
 63% 9.00M/14.2M [00:00&amp;lt;00:00, 52.0MB/s]
100% 14.2M/14.2M [00:00&amp;lt;00:00, 69.6MB/s]
Downloading calendar.csv to /content
  0% 0.00/101k [00:00&amp;lt;?, ?B/s]
100% 101k/101k [00:00&amp;lt;00:00, 98.8MB/s]
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;unzip sales_train_validation&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;csv&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;zip
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;unzip sample_submission&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;csv&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;zip
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;unzip sell_prices&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;csv&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;zip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Archive:  sales_train_validation.csv.zip
  inflating: sales_train_validation.csv  
Archive:  sample_submission.csv.zip
  inflating: sample_submission.csv   
Archive:  sell_prices.csv.zip
  inflating: sell_prices.csv         
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;ls
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;calendar.csv			sample_data		   sell_prices.csv
sales_train_validation.csv	sample_submission.csv	   sell_prices.csv.zip
sales_train_validation.csv.zip	sample_submission.csv.zip
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pd
sales_train_val &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read_csv(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sales_train_validation.csv&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(sales_train_val&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head())
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;                              id        item_id  ... d_1912 d_1913
0  HOBBIES_1_001_CA_1_validation  HOBBIES_1_001  ...      1      1
1  HOBBIES_1_002_CA_1_validation  HOBBIES_1_002  ...      0      0
2  HOBBIES_1_003_CA_1_validation  HOBBIES_1_003  ...      1      1
3  HOBBIES_1_004_CA_1_validation  HOBBIES_1_004  ...      7      2
4  HOBBIES_1_005_CA_1_validation  HOBBIES_1_005  ...      2      4

[5 rows x 1919 columns]
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;calendar &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read_csv(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;calendar.csv&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(calendar&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head())
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;         date  wm_yr_wk    weekday  ...  snap_CA  snap_TX  snap_WI
0  2011-01-29     11101   Saturday  ...        0        0        0
1  2011-01-30     11101     Sunday  ...        0        0        0
2  2011-01-31     11101     Monday  ...        0        0        0
3  2011-02-01     11101    Tuesday  ...        1        1        0
4  2011-02-02     11101  Wednesday  ...        1        0        1

[5 rows x 14 columns]
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;sample_submission &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read_csv(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sample_submission.csv&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(sample_submission&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head())
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;                              id  F1  F2  F3  F4  ...  F24  F25  F26  F27  F28
0  HOBBIES_1_001_CA_1_validation   0   0   0   0  ...    0    0    0    0    0
1  HOBBIES_1_002_CA_1_validation   0   0   0   0  ...    0    0    0    0    0
2  HOBBIES_1_003_CA_1_validation   0   0   0   0  ...    0    0    0    0    0
3  HOBBIES_1_004_CA_1_validation   0   0   0   0  ...    0    0    0    0    0
4  HOBBIES_1_005_CA_1_validation   0   0   0   0  ...    0    0    0    0    0

[5 rows x 29 columns]
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;sell_prices &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read_csv(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sell_prices.csv&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(sell_prices&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head())
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;  store_id        item_id  wm_yr_wk  sell_price
0     CA_1  HOBBIES_1_001     11325        9.58
1     CA_1  HOBBIES_1_001     11326        9.58
2     CA_1  HOBBIES_1_001     11327        8.26
3     CA_1  HOBBIES_1_001     11328        8.26
4     CA_1  HOBBIES_1_001     11329        8.26
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;iii-data-exploration&#34;&gt;III. Data Exploration&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;데이터 탐색을 위해 사전준비를 진행해보자.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pd
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; numpy &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; np
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib.pylab &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; plt
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; seaborn &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; sns
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; itertools &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; cycle
pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_option(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;max_columns&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;style&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;use(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;bmh&amp;#39;&lt;/span&gt;)
color_pal &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;rcParams[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;axes.prop_cycle&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;by_key()[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;color&amp;#39;&lt;/span&gt;]
color_cycle &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cycle(plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;rcParams[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;axes.prop_cycle&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;by_key()[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;color&amp;#39;&lt;/span&gt;])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pd.set_optinos(&#39;max_columns&#39;, 50)&lt;/code&gt;, 컬럼 출력개수를 의미한다.&lt;/li&gt;
&lt;li&gt;그 외 나머지 코드는 그래프의 색상과 의미가 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1-각-id에-대한-시각화&#34;&gt;(1) 각 &lt;code&gt;id&lt;/code&gt;에 대한 시각화&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;다음과 같은 순서대로 시각화를 진행한다.
&lt;ul&gt;
&lt;li&gt;item을 선택한다.&lt;/li&gt;
&lt;li&gt;id를 index로 지정 후, &lt;code&gt;sales&lt;/code&gt; &lt;code&gt;sales&lt;/code&gt; 데이터의 &lt;code&gt;column&lt;/code&gt;만 지정한다.&lt;/li&gt;
&lt;li&gt;위 값을 &lt;code&gt;column&lt;/code&gt;으로 변환한다.&lt;/li&gt;
&lt;li&gt;데이터를 시각화 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# extract sales data columns&lt;/span&gt;
d_cols &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [c &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; c &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; sales_train_val&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;columns &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;d_&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; c] &lt;span style=&#34;color:#75715e&#34;&gt;# sales data columns&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# print(d_cols)&lt;/span&gt;

sales_train_val&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;loc[sales_train_val[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;FOODS_3_090_CA_3_validation&amp;#39;&lt;/span&gt;]\
  &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_index(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;)[d_cols]\
  &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;T\
  &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(figsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;), 
        title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;FOODS_3_090_CA_3 sales by &amp;#34;d&amp;#34; number&amp;#39;&lt;/span&gt;, color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; next(color_cycle))
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;legend(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/kaggle/competition_m5_eda_(1)/output_18_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;T&lt;/code&gt;는 &lt;code&gt;columns &amp;amp; index&lt;/code&gt; 위치를 바꿔주는 기능을 가지고 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-데이터-merge&#34;&gt;(2) 데이터 Merge&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2개의 데이터를 &lt;code&gt;Merge&lt;/code&gt; 하도록 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;temp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sales_train_val[sales_train_val[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;FOODS_3_090_CA_3_validation&amp;#39;&lt;/span&gt;][d_cols]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;T
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(temp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head())
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;     8412
d_1   108
d_2   132
d_3   102
d_4   120
d_5   106
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;8412&lt;/code&gt;의 column명을 &lt;code&gt;FOODS_3_090_CA_3_validation&lt;/code&gt;로 변경한다.&lt;/li&gt;
&lt;li&gt;그리고 &lt;code&gt;index&lt;/code&gt;에 &lt;code&gt;d&lt;/code&gt;로 &lt;code&gt;column&lt;/code&gt;명을 변경 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;temp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; temp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;rename(columns&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#ae81ff&#34;&gt;8412&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;FOODS_3_090_CA_3&amp;#39;&lt;/span&gt;})&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;reset_index()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;rename(columns&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;index&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;d&amp;#39;&lt;/span&gt;})
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(temp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head())
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;     d  FOODS_3_090_CA_3
0  d_1               108
1  d_2               132
2  d_3               102
3  d_4               120
4  d_5               106
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;calender&lt;/code&gt; 데이터셋과 &lt;code&gt;Merge&lt;/code&gt; 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;temp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; temp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;merge(calendar, how&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;left&amp;#39;&lt;/span&gt;, validate&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;1:1&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(temp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head())
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;     d  FOODS_3_090_CA_3        date  wm_yr_wk    weekday  wday  month  year  \
0  d_1               108  2011-01-29     11101   Saturday     1      1  2011   
1  d_2               132  2011-01-30     11101     Sunday     2      1  2011   
2  d_3               102  2011-01-31     11101     Monday     3      1  2011   
3  d_4               120  2011-02-01     11101    Tuesday     4      2  2011   
4  d_5               106  2011-02-02     11101  Wednesday     5      2  2011   

  event_name_1 event_type_1 event_name_2 event_type_2  snap_CA  snap_TX  \
0          NaN          NaN          NaN          NaN        0        0   
1          NaN          NaN          NaN          NaN        0        0   
2          NaN          NaN          NaN          NaN        0        0   
3          NaN          NaN          NaN          NaN        1        1   
4          NaN          NaN          NaN          NaN        1        0   

   snap_WI  
0        0  
1        0  
2        0  
3        0  
4        1  
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;날짜별 기준으로 &lt;code&gt;FOODS_3_090_CA_3&lt;/code&gt;에 관한 그래프를 작성한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;temp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_index(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;date&amp;#39;&lt;/span&gt;)[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;FOODS_3_090_CA_3&amp;#39;&lt;/span&gt;]\
  &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(figsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;), 
        color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;next(color_cycle), 
        title&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;FOODS_3_090_CA_3 sales by actual sale dates&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/kaggle/competition_m5_eda_(1)/output_27_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;이번에는 &lt;code&gt;HOBBIES_1_234_CA_3&lt;/code&gt;에 대한 데이터를 &lt;code&gt;Merge&lt;/code&gt;하여 시각화를 작성해보자.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;temp2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sales_train_val[sales_train_val[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;HOBBIES_1_234_CA_3_validation&amp;#39;&lt;/span&gt;][d_cols]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;T
temp2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; temp2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;rename(columns&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#ae81ff&#34;&gt;6324&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;HOBBIES_1_234_CA_3&amp;#39;&lt;/span&gt;}) &lt;span style=&#34;color:#75715e&#34;&gt;# name it correctly&lt;/span&gt;
temp2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; temp2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;reset_index()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;rename(columns&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;index&amp;#39;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;d&amp;#39;&lt;/span&gt;}) &lt;span style=&#34;color:#75715e&#34;&gt;# make the index &amp;#39;d&amp;#39;&lt;/span&gt;
temp2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; temp2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;merge(calendar, how&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;left&amp;#39;&lt;/span&gt;, validate&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;1:1&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(temp2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head())
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;     d  HOBBIES_1_234_CA_3        date  wm_yr_wk    weekday  wday  month  \
0  d_1                   0  2011-01-29     11101   Saturday     1      1   
1  d_2                   0  2011-01-30     11101     Sunday     2      1   
2  d_3                   0  2011-01-31     11101     Monday     3      1   
3  d_4                   0  2011-02-01     11101    Tuesday     4      2   
4  d_5                   0  2011-02-02     11101  Wednesday     5      2   

   year event_name_1 event_type_1 event_name_2 event_type_2  snap_CA  snap_TX  \
0  2011          NaN          NaN          NaN          NaN        0        0   
1  2011          NaN          NaN          NaN          NaN        0        0   
2  2011          NaN          NaN          NaN          NaN        0        0   
3  2011          NaN          NaN          NaN          NaN        1        1   
4  2011          NaN          NaN          NaN          NaN        1        0   

   snap_WI  
0        0  
1        0  
2        0  
3        0  
4        1  
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;temp2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_index(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;date&amp;#39;&lt;/span&gt;)[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;HOBBIES_1_234_CA_3&amp;#39;&lt;/span&gt;]\
  &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(figsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;), 
        color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;next(color_cycle), 
        title&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;HOBBIES_1_234_CA_3 sales by actual sale dates&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/kaggle/competition_m5_eda_(1)/output_30_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;이번에는 &lt;code&gt;HOUSEHOLD_1_118_CA_3_validation&lt;/code&gt;를 &lt;code&gt;Merge&lt;/code&gt; 하여 시각화를 진행해보자.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;temp3 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sales_train_val[sales_train_val[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;HOUSEHOLD_1_118_CA_3_validation&amp;#39;&lt;/span&gt;][d_cols]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;T
temp3 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; temp3&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;rename(columns&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#ae81ff&#34;&gt;6776&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;HOUSEHOLD_1_118_CA_3&amp;#39;&lt;/span&gt;}) &lt;span style=&#34;color:#75715e&#34;&gt;# name it correctly&lt;/span&gt;
temp3 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; temp3&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;reset_index()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;rename(columns&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;index&amp;#39;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;d&amp;#39;&lt;/span&gt;}) &lt;span style=&#34;color:#75715e&#34;&gt;# make the index &amp;#39;d&amp;#39;&lt;/span&gt;
temp3 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; temp3&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;merge(calendar, how&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;left&amp;#39;&lt;/span&gt;, validate&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;1:1&amp;#39;&lt;/span&gt;)
temp3&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_index(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;date&amp;#39;&lt;/span&gt;)[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;HOUSEHOLD_1_118_CA_3&amp;#39;&lt;/span&gt;]\
  &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(figsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;), 
        color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;next(color_cycle), 
        title&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;HOUSEHOLD_1_118_CA_3 sales by actual sale dates&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/kaggle/competition_m5_eda_(1)/output_32_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;3-연월-요일-기준으로-한-sales-시각화&#34;&gt;(3) 연월 요일 기준으로 한 Sales 시각화&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;연도, 월, 요일을 기준으로 위 3가지 데이터에 대한 값 시각화를 진행한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;temps &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;FOODS_3_090_CA_3&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;HOBBIES_1_234_CA_3&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;HOUSEHOLD_1_118_CA_3&amp;#39;&lt;/span&gt;]
temps_df &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [temp, temp2, temp3]

&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;]:
  fig, (ax1, ax2, ax3) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;subplots(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, figsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;))
  &lt;span style=&#34;color:#75715e&#34;&gt;# wday 시각화&lt;/span&gt;
  temps_df[i]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;groupby(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;wday&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mean()[temps[i]]\
    &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(kind&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;line&amp;#39;&lt;/span&gt;, 
          title&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;average sale: day of week&amp;#39;&lt;/span&gt;,
          lw &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, 
          color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;color_pal[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;], 
          ax&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ax1)
  
  &lt;span style=&#34;color:#75715e&#34;&gt;# month 시각화&lt;/span&gt;
  temps_df[i]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;groupby(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;month&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mean()[temps[i]]\
    &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(kind&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;line&amp;#39;&lt;/span&gt;, 
          title&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;average sale: day of month&amp;#39;&lt;/span&gt;,
          lw &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, 
          color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;color_pal[&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;], 
          ax&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ax2)
  
  &lt;span style=&#34;color:#75715e&#34;&gt;# year 시각화&lt;/span&gt;
  temps_df[i]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;groupby(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;year&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mean()[temps[i]]\
    &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(kind&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;line&amp;#39;&lt;/span&gt;, 
          title&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;average sale: day of year&amp;#39;&lt;/span&gt;,
          lw &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, 
          color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;color_pal[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;], 
          ax&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ax3)

  &lt;span style=&#34;color:#75715e&#34;&gt;# suptitle&lt;/span&gt;
  fig&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;suptitle(f&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Trens for item: {temps[i]}&amp;#39;&lt;/span&gt;, 
               size&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;, 
               y&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.1&lt;/span&gt;)
  plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;tight_layout()
  plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/kaggle/competition_m5_eda_(1)/output_34_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/kaggle/competition_m5_eda_(1)/output_34_1.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/kaggle/competition_m5_eda_(1)/output_34_2.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;tight_layout&lt;/code&gt; 함수는 각 데이터에 관한 여백(&lt;code&gt;padding&lt;/code&gt;)에 관련된 &lt;code&gt;subplot&lt;/code&gt; 파라미터를 조정한다.&lt;/li&gt;
&lt;li&gt;위 3개의 &lt;code&gt;item&lt;/code&gt;만 가지고 비교 했을 경우에는 &lt;code&gt;HOBBIES_1_234_CA_3&lt;/code&gt;이 다른 두 아이템에 비해 평균적인 &lt;code&gt;sales&lt;/code&gt;가 높은 것으로 확인되고 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;iv-결론&#34;&gt;IV. 결론&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Kaggle에서 데이터를 다운로드 받는 부분을 수행하였고, 이 부분을 통해서 이제 여러분들이 적극적으로 코드를 경험하기를 바란다.&lt;/li&gt;
&lt;li&gt;오늘 코드에서 중요한 부분은 서로 다른 데이터를 어떻게 &lt;code&gt;Merge&lt;/code&gt;할 것인가가 핵심이고, 이 때 &lt;code&gt;T&lt;/code&gt;라는 함수를 활용하여 행과 열을 &lt;code&gt;transpose&lt;/code&gt;하는 것이 주요 핵심 사항이다.&lt;/li&gt;
&lt;li&gt;다음에는 &lt;code&gt;sample item&lt;/code&gt; 30개를 조회해서 시각화를 구현하고, &lt;code&gt;sector&lt;/code&gt;별로 &lt;code&gt;판매개수&lt;/code&gt; 추이를 확인할 수 있는 시각화를 진행한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;v-reference&#34;&gt;V. Reference&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;M5 Forecasting Start Data Exploration. Retrieved from &lt;a href=&#34;https://www.kaggle.com/robikscube/m5-forecasting-starter-data-exploration&#34;&gt;https://www.kaggle.com/robikscube/m5-forecasting-starter-data-exploration&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Kaggle with Google Colab</title>
      <link>https://chloevan.github.io/settings/kaggle_with_colab/</link>
      <pubDate>Wed, 20 May 2020 08:12:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/settings/kaggle_with_colab/</guid>
      <description>&lt;h2 id=&#34;공지&#34;&gt;공지&lt;/h2&gt;
&lt;p&gt;제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.&lt;/p&gt;
&lt;h2 id=&#34;i-개요&#34;&gt;I. 개요&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Kaggle 대회에서 나오는 데이터의 용량은 작은 편은 아니다.&lt;/li&gt;
&lt;li&gt;성능이 적은 노트북을 사용해야 하는 경우라면 &lt;code&gt;Google Colab&lt;/code&gt;을 사용해야 한다.&lt;/li&gt;
&lt;li&gt;이 때, &lt;code&gt;Kaggle&lt;/code&gt; 데이터를 &lt;code&gt;Google Colab&lt;/code&gt;으로 다운로드 받는 과정에 대해 기술 하려고 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/kaggle/kaggle_with_colab/logo.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;ii-캐글-계정에서-해야-할-것&#34;&gt;II. 캐글 계정에서 해야 할 것&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;먼저 본인의 계정에서 &lt;code&gt;API Token&lt;/code&gt;을 다운로드 받는다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/kaggle/kaggle_with_colab/kaggle_01_api.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;iii-google-colab에서-해야-할-것&#34;&gt;III. Google Colab에서 해야 할 것&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Create New API Token&lt;/code&gt;을 누르면 &lt;code&gt;kaggle.json&lt;/code&gt; 파일이 다운로드 된다. 이 파일을 바탕화면에 옮긴 뒤, 아래 코드를 실행 시킨다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;pip install kaggle
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Requirement already satisfied: kaggle in /usr/local/lib/python3.6/dist-packages (1.5.6)
Requirement already satisfied: tqdm in /usr/local/lib/python3.6/dist-packages (from kaggle) (4.41.1)
Requirement already satisfied: urllib3&amp;lt;1.25,&amp;gt;=1.21.1 in /usr/local/lib/python3.6/dist-packages (from kaggle) (1.24.3)
Requirement already satisfied: python-slugify in /usr/local/lib/python3.6/dist-packages (from kaggle) (4.0.0)
Requirement already satisfied: six&amp;gt;=1.10 in /usr/local/lib/python3.6/dist-packages (from kaggle) (1.12.0)
Requirement already satisfied: certifi in /usr/local/lib/python3.6/dist-packages (from kaggle) (2020.4.5.1)
Requirement already satisfied: requests in /usr/local/lib/python3.6/dist-packages (from kaggle) (2.23.0)
Requirement already satisfied: python-dateutil in /usr/local/lib/python3.6/dist-packages (from kaggle) (2.8.1)
Requirement already satisfied: text-unidecode&amp;gt;=1.3 in /usr/local/lib/python3.6/dist-packages (from python-slugify-&amp;gt;kaggle) (1.3)
Requirement already satisfied: chardet&amp;lt;4,&amp;gt;=3.0.2 in /usr/local/lib/python3.6/dist-packages (from requests-&amp;gt;kaggle) (3.0.4)
Requirement already satisfied: idna&amp;lt;3,&amp;gt;=2.5 in /usr/local/lib/python3.6/dist-packages (from requests-&amp;gt;kaggle) (2.9)
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; google.colab &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; files
files&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;upload()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
Upload widget is only available when the cell has been executed in the
current browser session. Please rerun this cell to enable.
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;pre&gt;&lt;code&gt;Saving kaggle.json to kaggle.json





{&#39;kaggle.json&#39;: b&#39;{&amp;quot;username&amp;quot;:&amp;quot;your_id&amp;quot;,&amp;quot;key&amp;quot;:&amp;quot;your_key_value&amp;quot;}&#39;}
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;위 파일이 제대로 업로드 되었는지 확인하기 위해 아래 코드를 실행한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;ls &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;ha kaggle&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;json
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;kaggle.json
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;위 코드를 실행 시켰을 때, &lt;code&gt;kaggle.json&lt;/code&gt;이 나온다면 성공적이다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;json&lt;/code&gt; 파일을 &lt;code&gt;~/.kaggle&lt;/code&gt;로 이동 시켜야 하며, 아래 코드를 실행시키자.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;mkdir &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;p &lt;span style=&#34;color:#f92672&#34;&gt;~/.&lt;/span&gt;kaggle &lt;span style=&#34;color:#75715e&#34;&gt;# 파일 생성&lt;/span&gt;
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;mv kaggle&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;json &lt;span style=&#34;color:#f92672&#34;&gt;~/.&lt;/span&gt;kaggle&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# kaggle.json 파일 이동&lt;/span&gt;
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;chmod &lt;span style=&#34;color:#ae81ff&#34;&gt;600&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;~/.&lt;/span&gt;kaggle&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;kaggle&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;json &lt;span style=&#34;color:#75715e&#34;&gt;# 권한 부여&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;현재 진행중인 &lt;code&gt;Compeition&lt;/code&gt;을 확인한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;kaggle competitions list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Warning: Looks like you&#39;re using an outdated API Version, please consider updating (server 1.5.6 / client 1.5.4)
ref                                               deadline             category            reward  teamCount  userHasEntered  
------------------------------------------------  -------------------  ---------------  ---------  ---------  --------------  
digit-recognizer                                  2030-01-01 00:00:00  Getting Started  Knowledge       3000           False  
titanic                                           2030-01-01 00:00:00  Getting Started  Knowledge      22146            True  
house-prices-advanced-regression-techniques       2030-01-01 00:00:00  Getting Started  Knowledge       5138            True  
connectx                                          2030-01-01 00:00:00  Getting Started  Knowledge        399           False  
nlp-getting-started                               2030-01-01 00:00:00  Getting Started      Kudos       1965            True  
competitive-data-science-predict-future-sales     2020-12-31 23:59:00  Playground           Kudos       6867           False  
global-wheat-detection                            2020-08-04 23:59:00  Research           $15,000        386           False  
open-images-object-detection-rvc-2020             2020-07-31 16:00:00  Playground       Knowledge          1           False  
open-images-instance-segmentation-rvc-2020        2020-07-31 16:00:00  Playground       Knowledge          0           False  
hashcode-photo-slideshow                          2020-07-27 23:59:00  Playground       Knowledge         25           False  
prostate-cancer-grade-assessment                  2020-07-22 23:59:00  Featured           $25,000        395           False  
alaska2-image-steganalysis                        2020-07-20 23:59:00  Research           $25,000        328           False  
halite                                            2020-06-30 23:59:00  Featured             Kudos          0           False  
m5-forecasting-accuracy                           2020-06-30 23:59:00  Featured           $50,000       4008            True  
m5-forecasting-uncertainty                        2020-06-30 23:59:00  Featured           $50,000        439           False  
trends-assessment-prediction                      2020-06-29 23:59:00  Research           $25,000        363           False  
jigsaw-multilingual-toxic-comment-classification  2020-06-22 23:59:00  Featured           $50,000        998           False  
tweet-sentiment-extraction                        2020-06-16 23:59:00  Featured           $15,000       1278           False  
imet-2020-fgvc7                                   2020-05-28 23:59:00  Research         Knowledge         82           False  
abstraction-and-reasoning-challenge               2020-05-27 23:59:00  Research           $20,000        841           False  
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;이 때 참가하려는 현재 진행중인 대회 &lt;code&gt;M5 Forecasting - Accuracy&lt;/code&gt;에 참가한다고 가정해보자.&lt;/li&gt;
&lt;li&gt;아래 코드를 실행하면 데이터를 다운로드 받을 수 있다.&lt;/li&gt;
&lt;li&gt;구글 코랩 &lt;code&gt;content&lt;/code&gt; 폴더에 가면 &lt;code&gt;zip&lt;/code&gt; 파일을 확인할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt; kaggle competitions download &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;c m5&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;forecasting&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;accuracy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Warning: Looks like you&#39;re using an outdated API Version, please consider updating (server 1.5.6 / client 1.5.4)
sales_train_validation.csv.zip: Skipping, found more recently modified local copy (use --force to force download)
sample_submission.csv.zip: Skipping, found more recently modified local copy (use --force to force download)
calendar.csv: Skipping, found more recently modified local copy (use --force to force download)
sell_prices.csv.zip: Skipping, found more recently modified local copy (use --force to force download)
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;다운로드된 모든 파일을 아래와 같이 &lt;code&gt;unzip&lt;/code&gt;을 사용해서 확인한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;unzip sales_train_validation&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;csv&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;zip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Archive:  sales_train_validation.csv.zip
  inflating: sales_train_validation.csv  
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;ls
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;calendar.csv			sample_data
sales_train_validation.csv	sample_submission.csv.zip
sales_train_validation.csv.zip	sell_prices.csv.zip
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;iv-결론&#34;&gt;IV. 결론&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Kaggle에서 데이터를 다운로드 받는 부분을 수행하였고, 이 부분을 통해서 이제 여러분들이 적극적으로 코드를 경험하기를 바란다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;v-reference&#34;&gt;V. Reference&lt;/h2&gt;
&lt;p&gt;출처: Jay Speidell. Easy way to use Kaggle datasets in Google Colab. Retrieved from &lt;a href=&#34;https://www.kaggle.com/general/51898&#34;&gt;https://www.kaggle.com/general/51898&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>