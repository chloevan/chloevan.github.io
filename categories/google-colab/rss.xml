<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Google Colab on Data Science | ChloEvan</title>
    <link>https://chloevan.github.io/categories/google-colab/</link>
    <description>Recent content in Google Colab on Data Science | ChloEvan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 23 May 2020 21:01:47 +0900</lastBuildDate>
    
        <atom:link href="https://chloevan.github.io/categories/google-colab/rss.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Python Package Settings on Google Colab</title>
      <link>https://chloevan.github.io/kaggle/colab_package_settings/</link>
      <pubDate>Sat, 23 May 2020 21:01:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/kaggle/colab_package_settings/</guid>
      <description>&lt;h2 id=&#34;공지&#34;&gt;공지&lt;/h2&gt;
&lt;p&gt;제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.&lt;/p&gt;
&lt;h2 id=&#34;i-개요&#34;&gt;I. 개요&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;교육상, 최근 &lt;code&gt;kaggle&lt;/code&gt; 및 국내 경진 대회에 참여할 일이 생겼다.&lt;/li&gt;
&lt;li&gt;실습을 해보니, 매번 패키지와 파일을 다운로드 받는 것이 많이 불편했다.
&lt;ul&gt;
&lt;li&gt;파일을 열 때마다, &lt;code&gt;!pip install name_of_package&lt;/code&gt;을 실행해야 하는 번거로움이 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;파이썬 패키지를 &lt;code&gt;Google Colab&lt;/code&gt;에 영구적(&lt;code&gt;Permantly&lt;/code&gt;)으로 설치하는 것을 실습한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/kaggle/kaggle_with_colab/logo.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;ii-구글-드라이브-활용&#34;&gt;II. 구글 드라이브 활용&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;구글 드라이브에 패키지 모듈을 내려받고, 구글 드라이브에서 패키지를 불러오는 방식이다. 아래 코드를 보자.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1-사전-준비&#34;&gt;(1) 사전 준비&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;이 때 패키지 관리 폴더는 &lt;code&gt;Colab Notebooks&lt;/code&gt; 안에 &lt;code&gt;pkg_folders&lt;/code&gt;가 없다면 관련 경로대로 추가를 해야 한다. 만약 폴더가 없다면 에러가 날 것이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; sys
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; google.colab &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; drive
drive&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mount(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/content/mnt&amp;#39;&lt;/span&gt;)
my_path &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/content/notebooks&amp;#39;&lt;/span&gt;
os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;symlink(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/content/mnt/My Drive/Colab Notebooks/pkg_folders&amp;#39;&lt;/span&gt;, my_path)
sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;insert(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,my_path)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Go to this URL in a browser: https://accounts.google.com/o/oauth2/auth?client_id=947318989803-6bn6qk8qdgf4n4g3pfee6491hc0brc4i.apps.googleusercontent.com&amp;amp;redirect_uri=urn%3aietf%3awg%3aoauth%3a2.0%3aoob&amp;amp;response_type=code&amp;amp;scope=email%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdocs.test%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive.photos.readonly%20https%3a%2f%2fwww.googleapis.com%2fauth%2fpeopleapi.readonly

Enter your authorization code:
··········
Mounted at /content/mnt
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;위 코드의 실행 결과는 구글 드라이브가 &lt;code&gt;mount&lt;/code&gt;가 되었음을 의미하며, 이제 &lt;code&gt;pip install package&lt;/code&gt;를 실행하면 타겟 경로에 패키지 파일을 받을 수 있습니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-패키지-설치-실습-openpyxl&#34;&gt;(2) 패키지 설치 실습 &lt;code&gt;openpyxl&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;엑셀 관련 패키지인 &lt;code&gt;openpyxl&lt;/code&gt;을 설치합니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-terminal&#34; data-lang=&#34;terminal&#34;&gt;!pip install openpyxl
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;그러나, 이제 아래와 같이 설치를 해야 합니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-terminal&#34; data-lang=&#34;terminal&#34;&gt;!pip install --target=$my_path openpyxl
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code class=&#34;language-terminal&#34; data-lang=&#34;terminal&#34;&gt;!pip install --target=$my_path openpyxl
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;Processing /root/.cache/pip/wheels/b5/85/ca/e768ac132e57e75e645a151f8badac71cc0089e7225dddf76b/openpyxl-3.0.3-py2.py3-none-any.whl
Collecting jdcal
Using cached https://files.pythonhosted.org/packages/f0/da/572cbc0bc582390480bbd7c4e93d14dc46079778ed915b505dc494b37c57/jdcal-1.4.1-py2.py3-none-any.whl
Processing /root/.cache/pip/wheels/2a/77/35/0da0965a057698121fc7d8c5a7a9955cdbfb3cc4e2423cad39/et_xmlfile-1.0.1-cp36-none-any.whl
Installing collected packages: jdcal, et-xmlfile, openpyxl
Successfully installed et-xmlfile-1.0.1 jdcal-1.4.1 openpyxl-3.0.3
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;에러 없이 정상적으로 설치가 된 것을 확인할 수 있다.&lt;/li&gt;
&lt;li&gt;이 때, &lt;code&gt;Google Drive&lt;/code&gt;인 &lt;code&gt;Web UI&lt;/code&gt;에서도 패키지가 정상적으로 다운로드가 받아진 것을 확인할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/kaggle/colab_package_settings/drive_01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;예제 코드를 실행하자.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;package&lt;/code&gt;를 불러와보자.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; openpyxl &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; __version__
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(__version__)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;3.0.3
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;정상적으로 버전이 불러와졌다면 패키지가 설치된 것이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-한글-konlpy-설치&#34;&gt;(3) 한글 konlpy 설치&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;이번에는 &lt;code&gt;konlpy&lt;/code&gt;를 설치해보자.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-terminal&#34; data-lang=&#34;terminal&#34;&gt;!apt-get update
!apt-get install g++ openjdk-8-jdk 
!pip3 install --target=$my_path konlpy
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;Hit:1 http://ppa.launchpad.net/graphics-drivers/ppa/ubuntu bionic InRelease
Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease                        
.
.
.
Collecting konlpy
Downloading https://files.pythonhosted.org/packages/85/0e/f385566fec837c0b83f216b2da65db9997b35dd675e107752005b7d392b1/konlpy-0.5.2-py2.py3-none-any.whl (19.4MB)
    |████████████████████████████████| 19.4MB 37.0MB/s 
.
.
.
Installing collected packages: beautifulsoup4, numpy, colorama, lxml, six, PySocks, urllib3, chardet, certifi, idna, requests, oauthlib, requests-oauthlib, tweepy, JPype1, konlpy
Successfully installed JPype1-0.7.5 PySocks-1.7.1 beautifulsoup4-4.6.0 certifi-2020.4.5.1 chardet-3.0.4 colorama-0.4.3 idna-2.9 konlpy-0.5.2 lxml-4.5.1 numpy-1.18.4 oauthlib-3.1.0 requests-2.23.0 requests-oauthlib-1.3.0 six-1.15.0 tweepy-3.8.0 urllib3-1.25.9
WARNING: Target directory /content/notebooks/__pycache__ already exists. Specify --upgrade to force replacement.
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; konlpy.tag &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Twitter

twitter &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Twitter()
twitter&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pos(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;질문이나 건의사항은 깃헙 이슈 트래커에 남겨주세요&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;/content/notebooks/konlpy/tag/_okt.py:16: UserWarning: &amp;quot;Twitter&amp;quot; has changed to &amp;quot;Okt&amp;quot; since KoNLPy v0.4.5.
warn(&#39;&amp;quot;Twitter&amp;quot; has changed to &amp;quot;Okt&amp;quot; since KoNLPy v0.4.5.&#39;)
[(&#39;질문&#39;, &#39;Noun&#39;),
(&#39;이나&#39;, &#39;Josa&#39;),
(&#39;건의&#39;, &#39;Noun&#39;),
(&#39;사항&#39;, &#39;Noun&#39;),
(&#39;은&#39;, &#39;Josa&#39;),
(&#39;깃&#39;, &#39;Noun&#39;),
(&#39;헙&#39;, &#39;Verb&#39;),
(&#39;이슈&#39;, &#39;Noun&#39;),
(&#39;트래커&#39;, &#39;Noun&#39;),
(&#39;에&#39;, &#39;Josa&#39;),
(&#39;남겨주세요&#39;, &#39;Verb&#39;)]

- 정상적으로 패키지가 불러와지는 것을 확인할 수 있다. 
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;iii-새로운-노트북에서의-실습&#34;&gt;III. 새로운 노트북에서의 실습&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;이제 새로운 &lt;code&gt;Notebook&lt;/code&gt;을 열고 위 기 설치된 두개의 패키지가 정상적으로 실행되는지 확인해본다.&lt;/li&gt;
&lt;li&gt;이 때 주의해야 하는 것은 새로운 &lt;code&gt;Notebook&lt;/code&gt;은 자동으로 경로가 설정된 것은 아니기 때문에, 아래 코드를 명시적으로 상단에 입력해주는 것이 좋다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; sys
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; google.colab &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; drive
drive&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mount(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/content/mnt&amp;#39;&lt;/span&gt;)
my_path &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/content/notebooks&amp;#39;&lt;/span&gt;
os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;symlink(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/content/mnt/My Drive/Colab Notebooks/pkg_folders&amp;#39;&lt;/span&gt;, my_path)
sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;insert(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,my_path)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;아래 그림을 보면 별도의 패키지 설치 없이 &lt;code&gt;Google Drive&lt;/code&gt;를 활용하여 패키지가 불러와지는 것을 확인할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/kaggle/colab_package_settings/test_01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;iv-reference&#34;&gt;IV. Reference&lt;/h2&gt;
&lt;p&gt;어쩐지 오늘은. (2018, August 30). Google Colab 사용하기. Retrieved May 23, 2020, from &lt;a href=&#34;https://zzsza.github.io/data/2018/08/30/google-colab/&#34;&gt;https://zzsza.github.io/data/2018/08/30/google-colab/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Korakot. (2019, March 20). How do I install a library permanently in Colab? Retrieved May 23, 2020, from &lt;a href=&#34;https://stackoverflow.com/questions/55253498/how-do-i-install-a-library-permanently-in-colab&#34;&gt;https://stackoverflow.com/questions/55253498/how-do-i-install-a-library-permanently-in-colab&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Lee, T. (2020, March 20). Google Colab에서 python 패키지를 영구적(permanently)으로 설치하는 방법. Retrieved May 23, 2020, from &lt;a href=&#34;shorturl.at/ktANW&#34;&gt;shorturl.at/ktANW&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>competition - M5 EDA</title>
      <link>https://chloevan.github.io/kaggle/competition_m5_eda_1/</link>
      <pubDate>Thu, 21 May 2020 17:12:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/kaggle/competition_m5_eda_1/</guid>
      <description>&lt;h2 id=&#34;공지&#34;&gt;공지&lt;/h2&gt;
&lt;p&gt;제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.&lt;/p&gt;
&lt;h2 id=&#34;i-개요&#34;&gt;I. 개요&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Kaggle에서 데이터를 다운로드 하는 방법에 대해서는 생략한다.&lt;/li&gt;
&lt;li&gt;본 포스트는 &lt;code&gt;Google Colab&lt;/code&gt;을 기반으로 작성하였다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Kaggle + Google Colab&lt;/code&gt; 데이터 연동하는 방법은 이전 포스트를 참고한다.
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/settings/kaggle_with_colab/&#34;&gt;Kaggle with Google Colab&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/kaggle/kaggle_eda/01_competition.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;데이터는 크게 4가지로 구성되어 있다. (원문 인용)
&lt;ul&gt;
&lt;li&gt;calendar.csv - Contains information about the dates on which the products are sold.&lt;/li&gt;
&lt;li&gt;sales_train_validation.csv - Contains the historical daily unit sales data per product and store [d_1 - d_1913]&lt;/li&gt;
&lt;li&gt;sample_submission.csv - The correct format for submissions. Reference the Evaluation tab for more info.&lt;/li&gt;
&lt;li&gt;sell_prices.csv - Contains information about the price of the products sold per store and date.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ii-데이터-불러오기&#34;&gt;II. 데이터 불러오기&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;pip install kaggle
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; google.colab &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; files
files&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;upload()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Requirement already satisfied: kaggle in /usr/local/lib/python3.6/dist-packages (1.5.6)
Requirement already satisfied: tqdm in /usr/local/lib/python3.6/dist-packages (from kaggle) (4.41.1)
Requirement already satisfied: certifi in /usr/local/lib/python3.6/dist-packages (from kaggle) (2020.4.5.1)
Requirement already satisfied: requests in /usr/local/lib/python3.6/dist-packages (from kaggle) (2.23.0)
Requirement already satisfied: python-dateutil in /usr/local/lib/python3.6/dist-packages (from kaggle) (2.8.1)
Requirement already satisfied: python-slugify in /usr/local/lib/python3.6/dist-packages (from kaggle) (4.0.0)
Requirement already satisfied: six&amp;gt;=1.10 in /usr/local/lib/python3.6/dist-packages (from kaggle) (1.12.0)
Requirement already satisfied: urllib3&amp;lt;1.25,&amp;gt;=1.21.1 in /usr/local/lib/python3.6/dist-packages (from kaggle) (1.24.3)
Requirement already satisfied: chardet&amp;lt;4,&amp;gt;=3.0.2 in /usr/local/lib/python3.6/dist-packages (from requests-&amp;gt;kaggle) (3.0.4)
Requirement already satisfied: idna&amp;lt;3,&amp;gt;=2.5 in /usr/local/lib/python3.6/dist-packages (from requests-&amp;gt;kaggle) (2.9)
Requirement already satisfied: text-unidecode&amp;gt;=1.3 in /usr/local/lib/python3.6/dist-packages (from python-slugify-&amp;gt;kaggle) (1.3)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
Upload widget is only available when the cell has been executed in the
current browser session. Please rerun this cell to enable.
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;pre&gt;&lt;code&gt;Saving kaggle.json to kaggle.json





{&#39;kaggle.json&#39;: b&#39;{&amp;quot;username&amp;quot;:&amp;quot;your_name&amp;quot;,&amp;quot;key&amp;quot;:&amp;quot;your_key&amp;quot;}&#39;}
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;ls &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;ha kaggle&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;json
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;kaggle.json
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;mkdir &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;p &lt;span style=&#34;color:#f92672&#34;&gt;~/.&lt;/span&gt;kaggle &lt;span style=&#34;color:#75715e&#34;&gt;# 파일 생성&lt;/span&gt;
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;mv kaggle&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;json &lt;span style=&#34;color:#f92672&#34;&gt;~/.&lt;/span&gt;kaggle&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# kaggle.json 파일 이동&lt;/span&gt;
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;chmod &lt;span style=&#34;color:#ae81ff&#34;&gt;600&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;~/.&lt;/span&gt;kaggle&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;kaggle&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;json &lt;span style=&#34;color:#75715e&#34;&gt;# 권한 부여&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt; kaggle competitions download &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;c m5&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;forecasting&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;accuracy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Warning: Looks like you&#39;re using an outdated API Version, please consider updating (server 1.5.6 / client 1.5.4)
Downloading sales_train_validation.csv.zip to /content
100% 15.5M/15.5M [00:00&amp;lt;00:00, 56.9MB/s]

Downloading sample_submission.csv.zip to /content
  0% 0.00/163k [00:00&amp;lt;?, ?B/s]
100% 163k/163k [00:00&amp;lt;00:00, 146MB/s]
Downloading sell_prices.csv.zip to /content
 63% 9.00M/14.2M [00:00&amp;lt;00:00, 52.0MB/s]
100% 14.2M/14.2M [00:00&amp;lt;00:00, 69.6MB/s]
Downloading calendar.csv to /content
  0% 0.00/101k [00:00&amp;lt;?, ?B/s]
100% 101k/101k [00:00&amp;lt;00:00, 98.8MB/s]
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;unzip sales_train_validation&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;csv&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;zip
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;unzip sample_submission&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;csv&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;zip
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;unzip sell_prices&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;csv&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;zip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Archive:  sales_train_validation.csv.zip
  inflating: sales_train_validation.csv  
Archive:  sample_submission.csv.zip
  inflating: sample_submission.csv   
Archive:  sell_prices.csv.zip
  inflating: sell_prices.csv         
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;ls
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;calendar.csv			sample_data		   sell_prices.csv
sales_train_validation.csv	sample_submission.csv	   sell_prices.csv.zip
sales_train_validation.csv.zip	sample_submission.csv.zip
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pd
sales_train_val &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read_csv(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sales_train_validation.csv&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(sales_train_val&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head())
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;                              id        item_id  ... d_1912 d_1913
0  HOBBIES_1_001_CA_1_validation  HOBBIES_1_001  ...      1      1
1  HOBBIES_1_002_CA_1_validation  HOBBIES_1_002  ...      0      0
2  HOBBIES_1_003_CA_1_validation  HOBBIES_1_003  ...      1      1
3  HOBBIES_1_004_CA_1_validation  HOBBIES_1_004  ...      7      2
4  HOBBIES_1_005_CA_1_validation  HOBBIES_1_005  ...      2      4

[5 rows x 1919 columns]
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;calendar &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read_csv(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;calendar.csv&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(calendar&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head())
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;         date  wm_yr_wk    weekday  ...  snap_CA  snap_TX  snap_WI
0  2011-01-29     11101   Saturday  ...        0        0        0
1  2011-01-30     11101     Sunday  ...        0        0        0
2  2011-01-31     11101     Monday  ...        0        0        0
3  2011-02-01     11101    Tuesday  ...        1        1        0
4  2011-02-02     11101  Wednesday  ...        1        0        1

[5 rows x 14 columns]
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;sample_submission &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read_csv(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sample_submission.csv&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(sample_submission&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head())
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;                              id  F1  F2  F3  F4  ...  F24  F25  F26  F27  F28
0  HOBBIES_1_001_CA_1_validation   0   0   0   0  ...    0    0    0    0    0
1  HOBBIES_1_002_CA_1_validation   0   0   0   0  ...    0    0    0    0    0
2  HOBBIES_1_003_CA_1_validation   0   0   0   0  ...    0    0    0    0    0
3  HOBBIES_1_004_CA_1_validation   0   0   0   0  ...    0    0    0    0    0
4  HOBBIES_1_005_CA_1_validation   0   0   0   0  ...    0    0    0    0    0

[5 rows x 29 columns]
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;sell_prices &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read_csv(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sell_prices.csv&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(sell_prices&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head())
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;  store_id        item_id  wm_yr_wk  sell_price
0     CA_1  HOBBIES_1_001     11325        9.58
1     CA_1  HOBBIES_1_001     11326        9.58
2     CA_1  HOBBIES_1_001     11327        8.26
3     CA_1  HOBBIES_1_001     11328        8.26
4     CA_1  HOBBIES_1_001     11329        8.26
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;iii-data-exploration&#34;&gt;III. Data Exploration&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;데이터 탐색을 위해 사전준비를 진행해보자.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pd
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; numpy &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; np
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib.pylab &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; plt
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; seaborn &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; sns
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; itertools &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; cycle
pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_option(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;max_columns&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;style&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;use(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;bmh&amp;#39;&lt;/span&gt;)
color_pal &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;rcParams[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;axes.prop_cycle&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;by_key()[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;color&amp;#39;&lt;/span&gt;]
color_cycle &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cycle(plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;rcParams[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;axes.prop_cycle&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;by_key()[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;color&amp;#39;&lt;/span&gt;])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pd.set_optinos(&#39;max_columns&#39;, 50)&lt;/code&gt;, 컬럼 출력개수를 의미한다.&lt;/li&gt;
&lt;li&gt;그 외 나머지 코드는 그래프의 색상과 의미가 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1-각-id에-대한-시각화&#34;&gt;(1) 각 &lt;code&gt;id&lt;/code&gt;에 대한 시각화&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;다음과 같은 순서대로 시각화를 진행한다.
&lt;ul&gt;
&lt;li&gt;item을 선택한다.&lt;/li&gt;
&lt;li&gt;id를 index로 지정 후, &lt;code&gt;sales&lt;/code&gt; &lt;code&gt;sales&lt;/code&gt; 데이터의 &lt;code&gt;column&lt;/code&gt;만 지정한다.&lt;/li&gt;
&lt;li&gt;위 값을 &lt;code&gt;column&lt;/code&gt;으로 변환한다.&lt;/li&gt;
&lt;li&gt;데이터를 시각화 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# extract sales data columns&lt;/span&gt;
d_cols &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [c &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; c &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; sales_train_val&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;columns &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;d_&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; c] &lt;span style=&#34;color:#75715e&#34;&gt;# sales data columns&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# print(d_cols)&lt;/span&gt;

sales_train_val&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;loc[sales_train_val[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;FOODS_3_090_CA_3_validation&amp;#39;&lt;/span&gt;]\
  &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_index(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;)[d_cols]\
  &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;T\
  &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(figsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;), 
        title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;FOODS_3_090_CA_3 sales by &amp;#34;d&amp;#34; number&amp;#39;&lt;/span&gt;, color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; next(color_cycle))
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;legend(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/kaggle/competition_m5_eda_(1)/output_18_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;T&lt;/code&gt;는 &lt;code&gt;columns &amp;amp; index&lt;/code&gt; 위치를 바꿔주는 기능을 가지고 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-데이터-merge&#34;&gt;(2) 데이터 Merge&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2개의 데이터를 &lt;code&gt;Merge&lt;/code&gt; 하도록 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;temp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sales_train_val[sales_train_val[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;FOODS_3_090_CA_3_validation&amp;#39;&lt;/span&gt;][d_cols]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;T
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(temp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head())
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;     8412
d_1   108
d_2   132
d_3   102
d_4   120
d_5   106
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;8412&lt;/code&gt;의 column명을 &lt;code&gt;FOODS_3_090_CA_3_validation&lt;/code&gt;로 변경한다.&lt;/li&gt;
&lt;li&gt;그리고 &lt;code&gt;index&lt;/code&gt;에 &lt;code&gt;d&lt;/code&gt;로 &lt;code&gt;column&lt;/code&gt;명을 변경 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;temp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; temp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;rename(columns&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#ae81ff&#34;&gt;8412&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;FOODS_3_090_CA_3&amp;#39;&lt;/span&gt;})&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;reset_index()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;rename(columns&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;index&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;d&amp;#39;&lt;/span&gt;})
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(temp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head())
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;     d  FOODS_3_090_CA_3
0  d_1               108
1  d_2               132
2  d_3               102
3  d_4               120
4  d_5               106
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;calender&lt;/code&gt; 데이터셋과 &lt;code&gt;Merge&lt;/code&gt; 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;temp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; temp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;merge(calendar, how&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;left&amp;#39;&lt;/span&gt;, validate&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;1:1&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(temp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head())
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;     d  FOODS_3_090_CA_3        date  wm_yr_wk    weekday  wday  month  year  \
0  d_1               108  2011-01-29     11101   Saturday     1      1  2011   
1  d_2               132  2011-01-30     11101     Sunday     2      1  2011   
2  d_3               102  2011-01-31     11101     Monday     3      1  2011   
3  d_4               120  2011-02-01     11101    Tuesday     4      2  2011   
4  d_5               106  2011-02-02     11101  Wednesday     5      2  2011   

  event_name_1 event_type_1 event_name_2 event_type_2  snap_CA  snap_TX  \
0          NaN          NaN          NaN          NaN        0        0   
1          NaN          NaN          NaN          NaN        0        0   
2          NaN          NaN          NaN          NaN        0        0   
3          NaN          NaN          NaN          NaN        1        1   
4          NaN          NaN          NaN          NaN        1        0   

   snap_WI  
0        0  
1        0  
2        0  
3        0  
4        1  
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;날짜별 기준으로 &lt;code&gt;FOODS_3_090_CA_3&lt;/code&gt;에 관한 그래프를 작성한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;temp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_index(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;date&amp;#39;&lt;/span&gt;)[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;FOODS_3_090_CA_3&amp;#39;&lt;/span&gt;]\
  &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(figsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;), 
        color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;next(color_cycle), 
        title&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;FOODS_3_090_CA_3 sales by actual sale dates&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/kaggle/competition_m5_eda_(1)/output_27_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;이번에는 &lt;code&gt;HOBBIES_1_234_CA_3&lt;/code&gt;에 대한 데이터를 &lt;code&gt;Merge&lt;/code&gt;하여 시각화를 작성해보자.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;temp2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sales_train_val[sales_train_val[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;HOBBIES_1_234_CA_3_validation&amp;#39;&lt;/span&gt;][d_cols]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;T
temp2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; temp2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;rename(columns&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#ae81ff&#34;&gt;6324&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;HOBBIES_1_234_CA_3&amp;#39;&lt;/span&gt;}) &lt;span style=&#34;color:#75715e&#34;&gt;# name it correctly&lt;/span&gt;
temp2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; temp2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;reset_index()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;rename(columns&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;index&amp;#39;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;d&amp;#39;&lt;/span&gt;}) &lt;span style=&#34;color:#75715e&#34;&gt;# make the index &amp;#39;d&amp;#39;&lt;/span&gt;
temp2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; temp2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;merge(calendar, how&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;left&amp;#39;&lt;/span&gt;, validate&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;1:1&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(temp2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head())
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;     d  HOBBIES_1_234_CA_3        date  wm_yr_wk    weekday  wday  month  \
0  d_1                   0  2011-01-29     11101   Saturday     1      1   
1  d_2                   0  2011-01-30     11101     Sunday     2      1   
2  d_3                   0  2011-01-31     11101     Monday     3      1   
3  d_4                   0  2011-02-01     11101    Tuesday     4      2   
4  d_5                   0  2011-02-02     11101  Wednesday     5      2   

   year event_name_1 event_type_1 event_name_2 event_type_2  snap_CA  snap_TX  \
0  2011          NaN          NaN          NaN          NaN        0        0   
1  2011          NaN          NaN          NaN          NaN        0        0   
2  2011          NaN          NaN          NaN          NaN        0        0   
3  2011          NaN          NaN          NaN          NaN        1        1   
4  2011          NaN          NaN          NaN          NaN        1        0   

   snap_WI  
0        0  
1        0  
2        0  
3        0  
4        1  
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;temp2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_index(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;date&amp;#39;&lt;/span&gt;)[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;HOBBIES_1_234_CA_3&amp;#39;&lt;/span&gt;]\
  &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(figsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;), 
        color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;next(color_cycle), 
        title&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;HOBBIES_1_234_CA_3 sales by actual sale dates&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/kaggle/competition_m5_eda_(1)/output_30_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;이번에는 &lt;code&gt;HOUSEHOLD_1_118_CA_3_validation&lt;/code&gt;를 &lt;code&gt;Merge&lt;/code&gt; 하여 시각화를 진행해보자.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;temp3 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sales_train_val[sales_train_val[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;HOUSEHOLD_1_118_CA_3_validation&amp;#39;&lt;/span&gt;][d_cols]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;T
temp3 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; temp3&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;rename(columns&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#ae81ff&#34;&gt;6776&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;HOUSEHOLD_1_118_CA_3&amp;#39;&lt;/span&gt;}) &lt;span style=&#34;color:#75715e&#34;&gt;# name it correctly&lt;/span&gt;
temp3 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; temp3&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;reset_index()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;rename(columns&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;index&amp;#39;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;d&amp;#39;&lt;/span&gt;}) &lt;span style=&#34;color:#75715e&#34;&gt;# make the index &amp;#39;d&amp;#39;&lt;/span&gt;
temp3 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; temp3&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;merge(calendar, how&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;left&amp;#39;&lt;/span&gt;, validate&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;1:1&amp;#39;&lt;/span&gt;)
temp3&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_index(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;date&amp;#39;&lt;/span&gt;)[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;HOUSEHOLD_1_118_CA_3&amp;#39;&lt;/span&gt;]\
  &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(figsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;), 
        color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;next(color_cycle), 
        title&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;HOUSEHOLD_1_118_CA_3 sales by actual sale dates&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/kaggle/competition_m5_eda_(1)/output_32_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;3-연월-요일-기준으로-한-sales-시각화&#34;&gt;(3) 연월 요일 기준으로 한 Sales 시각화&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;연도, 월, 요일을 기준으로 위 3가지 데이터에 대한 값 시각화를 진행한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;temps &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;FOODS_3_090_CA_3&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;HOBBIES_1_234_CA_3&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;HOUSEHOLD_1_118_CA_3&amp;#39;&lt;/span&gt;]
temps_df &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [temp, temp2, temp3]

&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;]:
  fig, (ax1, ax2, ax3) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;subplots(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, figsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;))
  &lt;span style=&#34;color:#75715e&#34;&gt;# wday 시각화&lt;/span&gt;
  temps_df[i]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;groupby(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;wday&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mean()[temps[i]]\
    &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(kind&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;line&amp;#39;&lt;/span&gt;, 
          title&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;average sale: day of week&amp;#39;&lt;/span&gt;,
          lw &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, 
          color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;color_pal[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;], 
          ax&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ax1)
  
  &lt;span style=&#34;color:#75715e&#34;&gt;# month 시각화&lt;/span&gt;
  temps_df[i]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;groupby(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;month&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mean()[temps[i]]\
    &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(kind&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;line&amp;#39;&lt;/span&gt;, 
          title&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;average sale: day of month&amp;#39;&lt;/span&gt;,
          lw &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, 
          color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;color_pal[&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;], 
          ax&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ax2)
  
  &lt;span style=&#34;color:#75715e&#34;&gt;# year 시각화&lt;/span&gt;
  temps_df[i]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;groupby(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;year&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mean()[temps[i]]\
    &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(kind&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;line&amp;#39;&lt;/span&gt;, 
          title&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;average sale: day of year&amp;#39;&lt;/span&gt;,
          lw &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, 
          color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;color_pal[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;], 
          ax&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ax3)

  &lt;span style=&#34;color:#75715e&#34;&gt;# suptitle&lt;/span&gt;
  fig&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;suptitle(f&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Trens for item: {temps[i]}&amp;#39;&lt;/span&gt;, 
               size&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;, 
               y&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.1&lt;/span&gt;)
  plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;tight_layout()
  plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/kaggle/competition_m5_eda_(1)/output_34_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/kaggle/competition_m5_eda_(1)/output_34_1.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/kaggle/competition_m5_eda_(1)/output_34_2.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;tight_layout&lt;/code&gt; 함수는 각 데이터에 관한 여백(&lt;code&gt;padding&lt;/code&gt;)에 관련된 &lt;code&gt;subplot&lt;/code&gt; 파라미터를 조정한다.&lt;/li&gt;
&lt;li&gt;위 3개의 &lt;code&gt;item&lt;/code&gt;만 가지고 비교 했을 경우에는 &lt;code&gt;HOBBIES_1_234_CA_3&lt;/code&gt;이 다른 두 아이템에 비해 평균적인 &lt;code&gt;sales&lt;/code&gt;가 높은 것으로 확인되고 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;iv-결론&#34;&gt;IV. 결론&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Kaggle에서 데이터를 다운로드 받는 부분을 수행하였고, 이 부분을 통해서 이제 여러분들이 적극적으로 코드를 경험하기를 바란다.&lt;/li&gt;
&lt;li&gt;오늘 코드에서 중요한 부분은 서로 다른 데이터를 어떻게 &lt;code&gt;Merge&lt;/code&gt;할 것인가가 핵심이고, 이 때 &lt;code&gt;T&lt;/code&gt;라는 함수를 활용하여 행과 열을 &lt;code&gt;transpose&lt;/code&gt;하는 것이 주요 핵심 사항이다.&lt;/li&gt;
&lt;li&gt;다음에는 &lt;code&gt;sample item&lt;/code&gt; 30개를 조회해서 시각화를 구현하고, &lt;code&gt;sector&lt;/code&gt;별로 &lt;code&gt;판매개수&lt;/code&gt; 추이를 확인할 수 있는 시각화를 진행한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;v-reference&#34;&gt;V. Reference&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;M5 Forecasting Start Data Exploration. Retrieved from &lt;a href=&#34;https://www.kaggle.com/robikscube/m5-forecasting-starter-data-exploration&#34;&gt;https://www.kaggle.com/robikscube/m5-forecasting-starter-data-exploration&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Kaggle with Google Colab</title>
      <link>https://chloevan.github.io/settings/kaggle_with_colab/</link>
      <pubDate>Wed, 20 May 2020 08:12:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/settings/kaggle_with_colab/</guid>
      <description>&lt;h2 id=&#34;공지&#34;&gt;공지&lt;/h2&gt;
&lt;p&gt;제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.&lt;/p&gt;
&lt;h2 id=&#34;i-개요&#34;&gt;I. 개요&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Kaggle 대회에서 나오는 데이터의 용량은 작은 편은 아니다.&lt;/li&gt;
&lt;li&gt;성능이 적은 노트북을 사용해야 하는 경우라면 &lt;code&gt;Google Colab&lt;/code&gt;을 사용해야 한다.&lt;/li&gt;
&lt;li&gt;이 때, &lt;code&gt;Kaggle&lt;/code&gt; 데이터를 &lt;code&gt;Google Colab&lt;/code&gt;으로 다운로드 받는 과정에 대해 기술 하려고 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/kaggle/kaggle_with_colab/logo.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;ii-캐글-계정에서-해야-할-것&#34;&gt;II. 캐글 계정에서 해야 할 것&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;먼저 본인의 계정에서 &lt;code&gt;API Token&lt;/code&gt;을 다운로드 받는다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/kaggle/kaggle_with_colab/kaggle_01_api.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;iii-google-colab에서-해야-할-것&#34;&gt;III. Google Colab에서 해야 할 것&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Create New API Token&lt;/code&gt;을 누르면 &lt;code&gt;kaggle.json&lt;/code&gt; 파일이 다운로드 된다. 이 파일을 바탕화면에 옮긴 뒤, 아래 코드를 실행 시킨다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;pip install kaggle
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Requirement already satisfied: kaggle in /usr/local/lib/python3.6/dist-packages (1.5.6)
Requirement already satisfied: tqdm in /usr/local/lib/python3.6/dist-packages (from kaggle) (4.41.1)
Requirement already satisfied: urllib3&amp;lt;1.25,&amp;gt;=1.21.1 in /usr/local/lib/python3.6/dist-packages (from kaggle) (1.24.3)
Requirement already satisfied: python-slugify in /usr/local/lib/python3.6/dist-packages (from kaggle) (4.0.0)
Requirement already satisfied: six&amp;gt;=1.10 in /usr/local/lib/python3.6/dist-packages (from kaggle) (1.12.0)
Requirement already satisfied: certifi in /usr/local/lib/python3.6/dist-packages (from kaggle) (2020.4.5.1)
Requirement already satisfied: requests in /usr/local/lib/python3.6/dist-packages (from kaggle) (2.23.0)
Requirement already satisfied: python-dateutil in /usr/local/lib/python3.6/dist-packages (from kaggle) (2.8.1)
Requirement already satisfied: text-unidecode&amp;gt;=1.3 in /usr/local/lib/python3.6/dist-packages (from python-slugify-&amp;gt;kaggle) (1.3)
Requirement already satisfied: chardet&amp;lt;4,&amp;gt;=3.0.2 in /usr/local/lib/python3.6/dist-packages (from requests-&amp;gt;kaggle) (3.0.4)
Requirement already satisfied: idna&amp;lt;3,&amp;gt;=2.5 in /usr/local/lib/python3.6/dist-packages (from requests-&amp;gt;kaggle) (2.9)
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; google.colab &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; files
files&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;upload()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
Upload widget is only available when the cell has been executed in the
current browser session. Please rerun this cell to enable.
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;pre&gt;&lt;code&gt;Saving kaggle.json to kaggle.json





{&#39;kaggle.json&#39;: b&#39;{&amp;quot;username&amp;quot;:&amp;quot;your_id&amp;quot;,&amp;quot;key&amp;quot;:&amp;quot;your_key_value&amp;quot;}&#39;}
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;위 파일이 제대로 업로드 되었는지 확인하기 위해 아래 코드를 실행한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;ls &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;ha kaggle&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;json
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;kaggle.json
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;위 코드를 실행 시켰을 때, &lt;code&gt;kaggle.json&lt;/code&gt;이 나온다면 성공적이다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;json&lt;/code&gt; 파일을 &lt;code&gt;~/.kaggle&lt;/code&gt;로 이동 시켜야 하며, 아래 코드를 실행시키자.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;mkdir &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;p &lt;span style=&#34;color:#f92672&#34;&gt;~/.&lt;/span&gt;kaggle &lt;span style=&#34;color:#75715e&#34;&gt;# 파일 생성&lt;/span&gt;
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;mv kaggle&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;json &lt;span style=&#34;color:#f92672&#34;&gt;~/.&lt;/span&gt;kaggle&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# kaggle.json 파일 이동&lt;/span&gt;
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;chmod &lt;span style=&#34;color:#ae81ff&#34;&gt;600&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;~/.&lt;/span&gt;kaggle&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;kaggle&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;json &lt;span style=&#34;color:#75715e&#34;&gt;# 권한 부여&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;현재 진행중인 &lt;code&gt;Compeition&lt;/code&gt;을 확인한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;kaggle competitions list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Warning: Looks like you&#39;re using an outdated API Version, please consider updating (server 1.5.6 / client 1.5.4)
ref                                               deadline             category            reward  teamCount  userHasEntered  
------------------------------------------------  -------------------  ---------------  ---------  ---------  --------------  
digit-recognizer                                  2030-01-01 00:00:00  Getting Started  Knowledge       3000           False  
titanic                                           2030-01-01 00:00:00  Getting Started  Knowledge      22146            True  
house-prices-advanced-regression-techniques       2030-01-01 00:00:00  Getting Started  Knowledge       5138            True  
connectx                                          2030-01-01 00:00:00  Getting Started  Knowledge        399           False  
nlp-getting-started                               2030-01-01 00:00:00  Getting Started      Kudos       1965            True  
competitive-data-science-predict-future-sales     2020-12-31 23:59:00  Playground           Kudos       6867           False  
global-wheat-detection                            2020-08-04 23:59:00  Research           $15,000        386           False  
open-images-object-detection-rvc-2020             2020-07-31 16:00:00  Playground       Knowledge          1           False  
open-images-instance-segmentation-rvc-2020        2020-07-31 16:00:00  Playground       Knowledge          0           False  
hashcode-photo-slideshow                          2020-07-27 23:59:00  Playground       Knowledge         25           False  
prostate-cancer-grade-assessment                  2020-07-22 23:59:00  Featured           $25,000        395           False  
alaska2-image-steganalysis                        2020-07-20 23:59:00  Research           $25,000        328           False  
halite                                            2020-06-30 23:59:00  Featured             Kudos          0           False  
m5-forecasting-accuracy                           2020-06-30 23:59:00  Featured           $50,000       4008            True  
m5-forecasting-uncertainty                        2020-06-30 23:59:00  Featured           $50,000        439           False  
trends-assessment-prediction                      2020-06-29 23:59:00  Research           $25,000        363           False  
jigsaw-multilingual-toxic-comment-classification  2020-06-22 23:59:00  Featured           $50,000        998           False  
tweet-sentiment-extraction                        2020-06-16 23:59:00  Featured           $15,000       1278           False  
imet-2020-fgvc7                                   2020-05-28 23:59:00  Research         Knowledge         82           False  
abstraction-and-reasoning-challenge               2020-05-27 23:59:00  Research           $20,000        841           False  
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;이 때 참가하려는 현재 진행중인 대회 &lt;code&gt;M5 Forecasting - Accuracy&lt;/code&gt;에 참가한다고 가정해보자.&lt;/li&gt;
&lt;li&gt;아래 코드를 실행하면 데이터를 다운로드 받을 수 있다.&lt;/li&gt;
&lt;li&gt;구글 코랩 &lt;code&gt;content&lt;/code&gt; 폴더에 가면 &lt;code&gt;zip&lt;/code&gt; 파일을 확인할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt; kaggle competitions download &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;c m5&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;forecasting&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;accuracy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Warning: Looks like you&#39;re using an outdated API Version, please consider updating (server 1.5.6 / client 1.5.4)
sales_train_validation.csv.zip: Skipping, found more recently modified local copy (use --force to force download)
sample_submission.csv.zip: Skipping, found more recently modified local copy (use --force to force download)
calendar.csv: Skipping, found more recently modified local copy (use --force to force download)
sell_prices.csv.zip: Skipping, found more recently modified local copy (use --force to force download)
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;다운로드된 모든 파일을 아래와 같이 &lt;code&gt;unzip&lt;/code&gt;을 사용해서 확인한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;unzip sales_train_validation&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;csv&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;zip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Archive:  sales_train_validation.csv.zip
  inflating: sales_train_validation.csv  
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;ls
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;calendar.csv			sample_data
sales_train_validation.csv	sample_submission.csv.zip
sales_train_validation.csv.zip	sell_prices.csv.zip
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;iv-결론&#34;&gt;IV. 결론&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Kaggle에서 데이터를 다운로드 받는 부분을 수행하였고, 이 부분을 통해서 이제 여러분들이 적극적으로 코드를 경험하기를 바란다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;v-reference&#34;&gt;V. Reference&lt;/h2&gt;
&lt;p&gt;출처: Jay Speidell. Easy way to use Kaggle datasets in Google Colab. Retrieved from &lt;a href=&#34;https://www.kaggle.com/general/51898&#34;&gt;https://www.kaggle.com/general/51898&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>