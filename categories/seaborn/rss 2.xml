<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Seaborn on Data Science | DSChloe</title>
    <link>https://dschloe.github.io/categories/seaborn/</link>
    <description>Recent content in Seaborn on Data Science | DSChloe</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 06 Jan 2021 23:30:47 +0900</lastBuildDate><atom:link href="https://dschloe.github.io/categories/seaborn/rss.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Kaggle Countplot with Text using Seaborn</title>
      <link>https://dschloe.github.io/kaggle/kaggle_seabon_countplot/</link>
      <pubDate>Wed, 06 Jan 2021 23:30:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/kaggle/kaggle_seabon_countplot/</guid>
      <description>개요  수강생 중 1명이 캐글 경진대회에 참여하고 있는데, 시각화의 어려움을 같이 해결하면서 팁을 공유한다. 도구: Python + Seaborn + Matplotlib 캐글 데이터: https://www.kaggle.com/c/kaggle-survey-2020/notebooks?competitionId=23724&amp;amp;sortBy=voteCount  캐글 데이터 연동  캐글 데이터를 구글 드라이브에 업로드 한 뒤 구글 코랩과 연동한다. Kaggle API를 통해 데이터를 불러올 수도 있지만, 수동으로 다운로드 받은 뒤 드라이브에 업로드 하였다.  # Mount Google Drive from google.colab import drive # import drive from google colab ROOT = &amp;#34;/content/drive&amp;#34; # default location for the drive print(ROOT) # print content of ROOT (Optional) drive.</description>
    </item>
    
    <item>
      <title>Seaborn intro - Correlation Heatmap</title>
      <link>https://dschloe.github.io/python/python_edu/03_datavisualisation/ch_seaborn_heatmap/</link>
      <pubDate>Wed, 04 Nov 2020 20:30:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/python/python_edu/03_datavisualisation/ch_seaborn_heatmap/</guid>
      <description>Seaborn 개요 Matplotlib 라이브러리가 Python에서 제공하는 기본적인 시각화 도구이지만, 기본객체는 리스트 형태를 따르기 때문에, 엑셀 데이터, 즉 데이터 프레임에 익숙한 사용자들에게는 조금 불친절한 것은 아쉬움이 있습니다. 실제, 입문자를 대상으로 강의를 할 때에도 Seaborn부터 알려드리는데, 그 이유는 Pandas를 활용한 데이터 가공 직후에 보다 쉽게 연동할 수 있도록 Seaborn이 개발되었기 때문입니다. 또한, Matplotlib에서는 회귀선과 같은 통계적 내용의 그래프도 보다 쉽게 구현할 수 있도록 제작되었습니다. 보다 정교한 시각적인 디자인을 추가 및 수정하려면, Matplotlib를 보다 더 잘 활용해야 합니다.</description>
    </item>
    
    <item>
      <title>Seaborn Intro - Countplot</title>
      <link>https://dschloe.github.io/python/python_edu/03_datavisualisation/ch_seaborn_countplot/</link>
      <pubDate>Thu, 29 Oct 2020 20:30:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/python/python_edu/03_datavisualisation/ch_seaborn_countplot/</guid>
      <description>Seaborn 개요 Matplotlib 라이브러리가 Python에서 제공하는 기본적인 시각화 도구이지만, 기본객체는 리스트 형태를 따르기 때문에, 엑셀 데이터, 즉 데이터 프레임에 익숙한 사용자들에게는 조금 불친절한 것은 아쉬움이 있습니다. 실제, 입문자를 대상으로 강의를 할 때에도 Seaborn부터 알려드리는데, 그 이유는 Pandas를 활용한 데이터 가공 직후에 보다 쉽게 연동할 수 있도록 Seaborn이 개발되었기 때문입니다. 또한, Matplotlib에서는 회귀선과 같은 통계적 내용의 그래프도 보다 쉽게 구현할 수 있도록 제작되었습니다. 보다 정교한 시각적인 디자인을 추가 및 수정하려면, Matplotlib를 보다 더 잘 활용해야 합니다.</description>
    </item>
    
    <item>
      <title>Seaborn intro - boxplot</title>
      <link>https://dschloe.github.io/python/python_edu/03_datavisualisation/ch_seaborn_boxplot/</link>
      <pubDate>Wed, 28 Oct 2020 19:30:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/python/python_edu/03_datavisualisation/ch_seaborn_boxplot/</guid>
      <description>Seaborn 개요 Matplotlib 라이브러리가 Python에서 제공하는 기본적인 시각화 도구이지만, 기본객체는 리스트 형태를 따르기 때문에, 엑셀 데이터, 즉 데이터 프레임에 익숙한 사용자들에게는 조금 불친절한 것은 아쉬움이 있습니다. 실제, 입문자를 대상으로 강의를 할 때에도 Seaborn부터 알려드리는데, 그 이유는 Pandas를 활용한 데이터 가공 직후에 보다 쉽게 연동할 수 있도록 Seaborn이 개발되었기 때문입니다. 또한, Matplotlib에서는 회귀선과 같은 통계적 내용의 그래프도 보다 쉽게 구현할 수 있도록 제작되었습니다. 보다 정교한 시각적인 디자인을 추가 및 수정하려면, Matplotlib를 보다 더 잘 활용해야 합니다.</description>
    </item>
    
    <item>
      <title>Seaborn Intro - Scatterplot, Histogram</title>
      <link>https://dschloe.github.io/python/python_edu/03_datavisualisation/ch_seaborn_numeric/</link>
      <pubDate>Mon, 26 Oct 2020 23:30:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/python/python_edu/03_datavisualisation/ch_seaborn_numeric/</guid>
      <description>Seaborn 개요 Matplotlib 라이브러리가 Python에서 제공하는 기본적인 시각화 도구이지만, 기본객체는 리스트 형태를 따르기 때문에, 엑셀 데이터, 즉 데이터 프레임에 익숙한 사용자들에게는 조금 불친절한 것은 아쉬움이 있습니다. 실제, 입문자를 대상으로 강의를 할 때에도 Seaborn부터 알려드리는데, 그 이유는 Pandas를 활용한 데이터 가공 직후에 보다 쉽게 연동할 수 있도록 Seaborn이 개발되었기 때문입니다. 또한, Matplotlib에서는 회귀선과 같은 통계적 내용의 그래프도 보다 쉽게 구현할 수 있도록 제작되었습니다. 보다 정교한 시각적인 디자인을 추가 및 수정하려면, Matplotlib를 보다 더 잘 활용해야 합니다.</description>
    </item>
    
  </channel>
</rss>
