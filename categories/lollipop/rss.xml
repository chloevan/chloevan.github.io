<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>lollipop on Data Science | ChloEvan</title>
    <link>https://chloevan.github.io/categories/lollipop/</link>
    <description>Recent content in lollipop on Data Science | ChloEvan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 30 May 2020 11:15:47 +0900</lastBuildDate>
    
        <atom:link href="https://chloevan.github.io/categories/lollipop/rss.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>EDA with Personal Email - Overview</title>
      <link>https://chloevan.github.io/python/python_edu/04_miniproject/01_eda_with_personal_email_overview/</link>
      <pubDate>Sat, 30 May 2020 11:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/04_miniproject/01_eda_with_personal_email_overview/</guid>
      <description>&lt;h2 id=&#34;공지&#34;&gt;공지&lt;/h2&gt;
&lt;p&gt;제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.&lt;/p&gt;
&lt;h2 id=&#34;i-matplotlib--seaborn&#34;&gt;I. Matplotlib &amp;amp; Seaborn&lt;/h2&gt;
&lt;h3 id=&#34;1-기본-개요&#34;&gt;(1) 기본 개요&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Matplotlib&lt;/code&gt;는 파이썬 표준 시각화 도구라고 불리워지며 파이썬 그래프의 기본 토대가 된다고 해도 무방하다. 객체지향 프로그래밍을 지원하므로 세세하게 꾸밀 수 있다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Seaborn&lt;/code&gt; 그래는 파이썬 시각화 도구의 고급 버전이다. &lt;code&gt;Matplotlib&lt;/code&gt;에 비해 비교적 단순한 인터페이스를 제공하기 때문에 초보자도 어렵지 않게 배울 수 있다.&lt;/p&gt;
&lt;h3 id=&#34;2-matplotlib--seabon-설치&#34;&gt;(2) matplotlib &amp;amp; Seabon 설치&lt;/h3&gt;
&lt;p&gt;설치방법은 윈도우 명령 프롬프트, MacOS, Linux 터미널에서 &lt;code&gt;pip install matplotlib&lt;/code&gt;입력하면 되지만, 간혹 여러 환경에 따라 달라질 수 있으니 관련 싸이트에서 확인하기를 바란다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;matplotlib 설치 방법: &lt;a href=&#34;https://matplotlib.org/users/installing.html&#34;&gt;https://matplotlib.org/users/installing.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;seaborn 설치 방법: &lt;a href=&#34;https://seaborn.pydata.org/installing.html&#34;&gt;https://seaborn.pydata.org/installing.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ii-overview&#34;&gt;II. Overview&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;데이터 집합에서 유용한 통찰력을 탐구하려면 많은 생각과 높은 수준의 경험과 연습이 필요하다.&lt;/li&gt;
&lt;li&gt;여러 유형의 데이터셋을 처리할수록 채굴할 수 있는 통찰력의 유형을 이해하는 데 더 많은 경험을 얻을 수 있다.&lt;/li&gt;
&lt;li&gt;이 장에서는 자체 이메일 데이터셋 중 하나를 사용하여 탐색적 데이터 분석(EDA)을 수행하려고 한다.&lt;/li&gt;
&lt;li&gt;모든 이메일을 데이터 집합으로 내보내는 방법, 팬더 데이터 프레임 내에서 가져오는 방법, 시각화하는 방법, 얻을 수 있는 다양한 유형의 통찰력에 대해 배우게 된다.&lt;/li&gt;
&lt;li&gt;특히, 개인별 G-Mail 데이터를 수집하는 방법에 대해서 배워서 적용하는 것을 연습한다.
&lt;ul&gt;
&lt;li&gt;데이터 수집&lt;/li&gt;
&lt;li&gt;데이터 가공&lt;/li&gt;
&lt;li&gt;데이터 분석&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;iii-technical-requirements&#34;&gt;III. Technical Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;본 데이터셋은 개인 Gmail 계정에서 가져온 이메일 데이터를 활용한다.&lt;/li&gt;
&lt;li&gt;개인 정보 보호 문제로 인해 데이터셋은 공유가 되지 않기에 데이터를 다룰 때 조심하시기를 바라며, 또한 관련 데이터 중 민감한 데이터를 직접 처리하는 것을 추천한다.&lt;/li&gt;
&lt;li&gt;이 장에서는 &lt;code&gt;Gmail&lt;/code&gt;에서 직접 이메일을 다운로드하여 초기 데이터 분석을 수행하는 방법을 안내한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1-데이터-수집-절차&#34;&gt;(1) 데이터 수집 절차&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;먼저 개인의 &lt;code&gt;G-Mail&lt;/code&gt;계정에 접속한다.&lt;/li&gt;
&lt;li&gt;그리고, 다음 링크를 클릭한다. &lt;a href=&#34;https://takeout.google.com/settings/takeout&#34;&gt;https://takeout.google.com/settings/takeout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Deselect all&lt;/code&gt;을 우선 클릭하여 모든 체크박스를 해제한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/python/04_miniProject/01_overview/figure_01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;다만, 하단에서 &lt;code&gt;Mail&lt;/code&gt;만 클릭한다. 그리고 스크롤바를 더 내려서 &lt;code&gt;Next Step&lt;/code&gt;을 클릭한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/python/04_miniProject/01_overview/figure_02.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;전자 메일로 다운로드 보내기 링크, 일회성 아카이브, .zip 및 최대 허용 크기를 선택한다. 이 다음에 아카이브 생성을 누른다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/python/04_miniProject/01_overview/figure_03.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;(2020년 5월 기준) 이메일로 즉시, 아래와 같은 문구를 받게 될 것이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;You’re getting this email because there’s been a request to create an archive of your Google data.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;If you didn’t make this request, someone may be trying to access your Google account. Check recent activity in your account and take steps to secure it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Requests can be scheduled in advance.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;요청 사항에 따라서 시간이 걸린다고 아래와 같이 명시하고 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Google is creating a copy of files from Mail
This process can &lt;code&gt;take a long time (possibly hours or days)&lt;/code&gt; to complete. You&amp;rsquo;ll receive an email when your export is done.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;우선 여기에서 잠시 &lt;code&gt;Stop&lt;/code&gt;하고 다음날 메일을 확인해보자.&lt;/p&gt;
&lt;h2 id=&#34;iv-reference&#34;&gt;IV. Reference&lt;/h2&gt;
&lt;p&gt;Mukhiya, Uuresh Kumar. Ahmed Usman. Hands-on Exploratory Data Analysis With Python: Perform EDA Techniques to understand, Summarize, and Investigate Your Data. Packt publishing limited, 2020.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>matplotlib - 09 lollipop</title>
      <link>https://chloevan.github.io/python/matplotlib/matplotlib_09_lollipop_chart/</link>
      <pubDate>Tue, 26 May 2020 11:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/matplotlib/matplotlib_09_lollipop_chart/</guid>
      <description>&lt;h2 id=&#34;공지&#34;&gt;공지&lt;/h2&gt;
&lt;p&gt;제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.&lt;/p&gt;
&lt;h2 id=&#34;i-matplotlib--seaborn&#34;&gt;I. Matplotlib &amp;amp; Seaborn&lt;/h2&gt;
&lt;h3 id=&#34;1-기본-개요&#34;&gt;(1) 기본 개요&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Matplotlib&lt;/code&gt;는 파이썬 표준 시각화 도구라고 불리워지며 파이썬 그래프의 기본 토대가 된다고 해도 무방하다. 객체지향 프로그래밍을 지원하므로 세세하게 꾸밀 수 있다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Seaborn&lt;/code&gt; 그래는 파이썬 시각화 도구의 고급 버전이다. &lt;code&gt;Matplotlib&lt;/code&gt;에 비해 비교적 단순한 인터페이스를 제공하기 때문에 초보자도 어렵지 않게 배울 수 있다.&lt;/p&gt;
&lt;h3 id=&#34;2-matplotlib--seabon-설치&#34;&gt;(2) matplotlib &amp;amp; Seabon 설치&lt;/h3&gt;
&lt;p&gt;설치방법은 윈도우 명령 프롬프트, MacOS, Linux 터미널에서 &lt;code&gt;pip install matplotlib&lt;/code&gt;입력하면 되지만, 간혹 여러 환경에 따라 달라질 수 있으니 관련 싸이트에서 확인하기를 바란다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;matplotlib 설치 방법: &lt;a href=&#34;https://matplotlib.org/users/installing.html&#34;&gt;https://matplotlib.org/users/installing.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;seaborn 설치 방법: &lt;a href=&#34;https://seaborn.pydata.org/installing.html&#34;&gt;https://seaborn.pydata.org/installing.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ii-lollipop-chart&#34;&gt;II. Lollipop Chart&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Lollipop&lt;/code&gt; 차트는 데이터의 순위를 표시하는 데 사용될 수 있다. 이것은 보통 &lt;code&gt;정렬된 막대 그래프&lt;/code&gt;와 유사하다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pd
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; plt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;1-데이터-수집&#34;&gt;(1) 데이터 수집&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cardata.csv&lt;/code&gt; 파일을 가져온다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;url &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://raw.githubusercontent.com/chloevan/datasets/master/books/eda_with_python/cardata.csv&amp;#39;&lt;/span&gt;
carDF &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read_csv(url)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(carDF&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head())
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;  manufacturer model  displ  year  cyl       trans drv  cty  hwy fl    class
0         audi    a4    1.8  1999    4    auto(l5)   f   18   29  p  compact
1         audi    a4    1.8  1999    4  manual(m5)   f   21   29  p  compact
2         audi    a4    2.0  2008    4  manual(m6)   f   20   31  p  compact
3         audi    a4    2.0  2008    4    auto(av)   f   21   30  p  compact
4         audi    a4    2.8  1999    6    auto(l5)   f   16   26  p  compact
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;2-groupby&#34;&gt;(2) groupby&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;manufacturer&lt;/code&gt;를 가지고 &lt;code&gt;groupby&lt;/code&gt;를 진행한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;processedDF &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; carDF[[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;cty&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;manufacturer&amp;#39;&lt;/span&gt;]]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;groupby(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;manufacturer&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;apply(&lt;span style=&#34;color:#66d9ef&#34;&gt;lambda&lt;/span&gt; x: x&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mean())
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(processedDF&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head())
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;                    cty
manufacturer           
audi          17.611111
chevrolet     15.000000
dodge         13.135135
ford          14.000000
honda         24.444444
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;3-sorting-and-reset_index&#34;&gt;(3) sorting and reset_index&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;이제, &lt;code&gt;cty&lt;/code&gt;를 통해 정렬 후, &lt;code&gt;index&lt;/code&gt;를 재정렬하는 코드를 작성한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# sort the values by cty and reset index&lt;/span&gt;
processedDF&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sort_values(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;cty&amp;#39;&lt;/span&gt;, inplace&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True)
processedDF&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;reset_index(inplace&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(processedDF&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head())
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;  manufacturer        cty
0      lincoln  11.333333
1   land rover  11.500000
2        dodge  13.135135
3      mercury  13.250000
4         jeep  13.500000
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;4-그래프-작성&#34;&gt;(4) 그래프 작성&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;이제 그래프를 작성해보자.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;fig, ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;subplots(figsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;), dpi &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;)
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;vlines(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; processedDF&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index, 
          ymin &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, 
          ymax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; processedDF&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;cty, 
          color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;firebrick&amp;#39;&lt;/span&gt;, 
          alpha &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.7&lt;/span&gt;, 
          linewidth&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;scatter(x&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;processedDF&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index, 
           y&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;processedDF&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;cty, 
           s&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;75&lt;/span&gt;, 
           color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;firebrick&amp;#39;&lt;/span&gt;, 
           alpha&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.7&lt;/span&gt;)
&lt;span style=&#34;color:#75715e&#34;&gt;## Title 작성&lt;/span&gt;
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_title(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Lollipop chart for highway mileage using car dataset&amp;#39;&lt;/span&gt;, 
             fontdict&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;size&amp;#39;&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt;})
&lt;span style=&#34;color:#75715e&#34;&gt;## Labels, xticks, and ylims&lt;/span&gt;
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_ylabel(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Miles Per Gallon&amp;#39;&lt;/span&gt;)
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_xticks(processedDF&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index)
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_xticklabels(processedDF&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;manufacturer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;str&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;upper(), 
                   rotation&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;65&lt;/span&gt;, 
                   fontdict&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;horizontalalignment&amp;#39;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;right&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;size&amp;#39;&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;})
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_ylim(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;)
&lt;span style=&#34;color:#75715e&#34;&gt;# 그래프에 평균 값 표시하기&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; row &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; processedDF&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;itertuples():
    ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;text(row&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Index, 
            row&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;cty&lt;span style=&#34;color:#f92672&#34;&gt;+.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, 
            s&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;round(row&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;cty, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;), 
            horizontalalignment&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;center&amp;#39;&lt;/span&gt;, 
            verticalalignment&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;bottom&amp;#39;&lt;/span&gt;, 
            fontsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;)

&lt;span style=&#34;color:#75715e&#34;&gt;# 8. Display the plot on the screen&lt;/span&gt;
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/matplotlib/matplotlib_09_lollipop_chart/output_12_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;iii-실습파일&#34;&gt;III. 실습파일&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;구글코랩에서 빠르게 실습도 할 수 있습니다. &lt;a href=&#34;https://colab.research.google.com/github/chloevan/python_visualisation/blob/master/matplotlib/matplotlib_09_lollipop_chart.ipynb&#34;&gt;실습&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;iv-reference&#34;&gt;IV. Reference&lt;/h2&gt;
&lt;p&gt;Mukhiya, Uuresh Kumar. Ahmed Usman. Hands-on Exploratory Data Analysis With Python: Perform EDA Techniques to understand, Summarize, and Investigate Your Data. Packt publishing limited, 2020.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>