<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python Basic on Data Science | ChloEvan</title>
    <link>https://chloevan.github.io/categories/python-basic/</link>
    <description>Recent content in Python Basic on Data Science | ChloEvan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 16 May 2020 11:12:47 +0900</lastBuildDate>
    
        <atom:link href="https://chloevan.github.io/categories/python-basic/rss.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Python - NumPy의 응용</title>
      <link>https://chloevan.github.io/python/basic/numpy_array_application/</link>
      <pubDate>Sat, 16 May 2020 11:12:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/basic/numpy_array_application/</guid>
      <description>&lt;h2 id=&#34;공지&#34;&gt;공지&lt;/h2&gt;
&lt;p&gt;제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.&lt;/p&gt;
&lt;h2 id=&#34;i-개요&#34;&gt;I. 개요&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;NumPy&lt;/code&gt;는 C언어로 구성되었으며, 고성능의 수치계산을 위해 나온 패키지이며, &lt;code&gt;Numerical Python&lt;/code&gt;의 약자이다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Python&lt;/code&gt;을 활용한 데이터 분석을 수행할 때, 그리고 데이터 시각화나 전처리를 수행할 때, &lt;code&gt;NumPy&lt;/code&gt;는 매우 자주 사용되기 때문에 한번쯤은 꼭 다듬고 가는 것이 중요하다.&lt;/li&gt;
&lt;li&gt;독자의 가독성을 위해 두번에 걸쳐 나눠서 연재하려고 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/python/basic_syntax/numpy.png#center&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;이전 포스트에서는 &lt;a href=&#34;https://chloevan.github.io/python/basic/numpy_array_creation/&#34;&gt;Python - NumPy 소개 및 다양한 객체 생성&lt;/a&gt;에 대해 다루었으니, 본 포스트 읽기에 앞서서 기본적인 개념에 대해 확인하기를 바란다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ii-모듈-import&#34;&gt;II. 모듈 Import&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;패키지 설치방법은 &lt;a href=&#34;https://pypi.org/project/numpy/&#34;&gt;설치 문서&lt;/a&gt;를 확인한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; numpy &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; np
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;__version__)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;1.18.4
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;iii-numpy-기본-활용법&#34;&gt;III. NumPy 기본 활용법&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;NumPy 객체 생성을 한 뒤에, 파일 저장, 서로 다른 배열끼리의 사칙연산 등을 수행할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1-numpy-객체-파일-저장-및-불러오기&#34;&gt;(1) NumPy 객체 파일 저장 및 불러오기&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;savetxt&lt;/code&gt;, &lt;code&gt;loadtxt&lt;/code&gt;, 그리고 &lt;code&gt;genfromtxt&lt;/code&gt; 함수를 활용하여 객체를 불러오는 예제를 실습한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 객체 생성 후 저장하기&lt;/span&gt;
x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;50.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(x)
np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;savetxt(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;data.out&amp;#39;&lt;/span&gt;, x, delimiter&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;,&amp;#39;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[ 0.  1.  2.  3.  4.  5.  6.  7.  8.  9. 10. 11. 12. 13. 14. 15. 16. 17.
 18. 19. 20. 21. 22. 23. 24. 25. 26. 27. 28. 29. 30. 31. 32. 33. 34. 35.
 36. 37. 38. 39. 40. 41. 42. 43. 44. 45. 46. 47. 48. 49.]
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;ls
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;data.out  sample_data
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;현재 폴더에 &lt;code&gt;data.out&lt;/code&gt; 파일이 생성된 것을 확인할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# `data.out` 불러오기&lt;/span&gt;
z &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;loadtxt(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;data.out&amp;#39;&lt;/span&gt;, unpack&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(z)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[ 0.  1.  2.  3.  4.  5.  6.  7.  8.  9. 10. 11. 12. 13. 14. 15. 16. 17.
 18. 19. 20. 21. 22. 23. 24. 25. 26. 27. 28. 29. 30. 31. 32. 33. 34. 35.
 36. 37. 38. 39. 40. 41. 42. 43. 44. 45. 46. 47. 48. 49.]
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;정상적으로 &lt;code&gt;data.out&lt;/code&gt;을 불러와서 &lt;code&gt;z&lt;/code&gt;객체에 저장된 것을 확인할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# genfromtxt 활용&lt;/span&gt;
my_array2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;genfromtxt(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;data.out&amp;#39;&lt;/span&gt;, 
                          skip_header&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, 
                          filling_values&lt;span style=&#34;color:#f92672&#34;&gt;=-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;999&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(my_array2)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[ 1.  2.  3.  4.  5.  6.  7.  8.  9. 10. 11. 12. 13. 14. 15. 16. 17. 18.
 19. 20. 21. 22. 23. 24. 25. 26. 27. 28. 29. 30. 31. 32. 33. 34. 35. 36.
 37. 38. 39. 40. 41. 42. 43. 44. 45. 46. 47. 48. 49.]
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;z&lt;/code&gt;객체와 마찬가지로 &lt;code&gt;my_array2&lt;/code&gt;도 객체가 정상적으로 생성된 것을 확인할 수 있다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;loadtxt&lt;/code&gt;와 &lt;code&gt;genfromtxt&lt;/code&gt;의 차이점이 있기는 하다. 결론부터 말하면, &lt;code&gt;genfromtxt&lt;/code&gt;가 다양한 옵션을 제공한다. 간단한 예를 들면, &lt;code&gt;genfromtxt&lt;/code&gt;의 경우 열들의 자료형을 자동으로 결정해주어 사용자들이 좀 더 편안하게 사용할 수 있도록 도와준다 (Clinton, 2016, p. 281-2).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-2차원-배열-inspection&#34;&gt;(2) 2차원 배열 Inspection&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ndim&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt;, &lt;code&gt;flags&lt;/code&gt;, &lt;code&gt;itemsize&lt;/code&gt;, &lt;code&gt;nbytes&lt;/code&gt;를 활용하여 배열의 정보를 획득한다.&lt;/li&gt;
&lt;li&gt;특히, 딥러닝 모형 정의 및 학습할 때, NumPy 배열 에러 등이 종종 발생하기 때문에 기본 개념은 학습하는 것을 추천한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;my2D_Array &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;array([[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;], [&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;], [&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;]])
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(my2D_Array)

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[[ 1  2  3  4]
 [ 2  4  6  8]
 [ 3  6  9 12]]
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# ndim&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(my2D_Array&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ndim)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;2
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# size (각 item의 개수를 의미)&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(my2D_Array&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;size)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;12
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 2차원 배열의 memory layout 확인 &lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(my2D_Array&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;flags)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;  C_CONTIGUOUS : True
  F_CONTIGUOUS : False
  OWNDATA : True
  WRITEABLE : True
  ALIGNED : True
  WRITEBACKIFCOPY : False
  UPDATEIFCOPY : False
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 1차원의 길이 in bytes (예. 숫자는 2bytes)&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(my2D_Array&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;itemsize)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;8
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 전체 bytes&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(my2D_Array&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;nbytes)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;96
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;iv-broadcasting브로드-캐스팅&#34;&gt;IV. Broadcasting(=브로드 캐스팅)&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/python/basic_syntax/broadcast.png#center&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;개념 설명은 다음과 같다.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Broadcasting is a mechanism that permits NumPy to operate with arrays of different shapes when performing arithmetic operations:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;간단하게 해석하면 브로드캐스팅(Broadcasting)은 모양이 다른 배열들 간의 사칙연산도 가능하게끔 도와주는 일종의 &lt;code&gt;mechanism&lt;/code&gt;이다. 그런데, 여기에는 기본적인 &lt;code&gt;Rule&lt;/code&gt;이 있다.&lt;/p&gt;
&lt;h3 id=&#34;1-rule-1-eqaul-dimensions-between-a-and-b&#34;&gt;(1) Rule 1. Eqaul Dimensions between A and B&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;우선 모양이 같은 &lt;code&gt;A&lt;/code&gt;와 &lt;code&gt;B&lt;/code&gt; NumPy 객체를 생성한다.&lt;/li&gt;
&lt;li&gt;A + B를 연산하여 출력한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# A 객체&lt;/span&gt;
A &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ones((&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;))
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(A)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(A&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[[1. 1. 1.]
 [1. 1. 1.]
 [1. 1. 1.]
 [1. 1. 1.]
 [1. 1. 1.]]
(5, 3)
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# B 객체&lt;/span&gt;
B &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;random&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;random((&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;))
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(B)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(B&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[[0.13526155 0.07276429 0.25635867]
 [0.74909147 0.09515243 0.20379472]
 [0.33115034 0.13771662 0.61417221]
 [0.79164803 0.72754531 0.29071265]
 [0.36780642 0.50456743 0.19266307]]
(5, 3)
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(A&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;B)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[[1.13526155 1.07276429 1.25635867]
 [1.74909147 1.09515243 1.20379472]
 [1.33115034 1.13771662 1.61417221]
 [1.79164803 1.72754531 1.29071265]
 [1.36780642 1.50456743 1.19266307]]
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;정상적으로 덧셈이 연산된 것을 확인할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-rule-2-compatible-dimensions-when-one-of-them-is-1&#34;&gt;(2) Rule 2. Compatible Dimensions when one of them is 1&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;이번에는 X와 Y 객체를 생성하고 &lt;code&gt;shape&lt;/code&gt;를 통해 차원이 어떻게 다른지 확인한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ones((&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;))
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(x)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(x&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[[1. 1. 1. 1.]
 [1. 1. 1. 1.]
 [1. 1. 1. 1.]]
(3, 4)
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(y)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(y&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[0 1 2 3]
(4,)
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 뺄셈 연산 수행 (x-y)&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(x&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;y)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[[ 1.  0. -1. -2.]
 [ 1.  0. -1. -2.]
 [ 1.  0. -1. -2.]]
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;위 코드에서 중요한 것은 숫자 &lt;code&gt;4&lt;/code&gt;이다. 즉, 1차원 길이가 다르면 연산은 에러가 발생한다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;y&lt;/code&gt;의 숫자 &lt;code&gt;4&lt;/code&gt; 대신 &lt;code&gt;5&lt;/code&gt;를 대입해서 적용해보자.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ones((&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;))
y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(x&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;y)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;---------------------------------------------------------------------------

ValueError                                Traceback (most recent call last)

&amp;lt;ipython-input-33-d91ef8252b95&amp;gt; in &amp;lt;module&amp;gt;()
      1 x = np.ones((3,4))
      2 y = np.arange(5)
----&amp;gt; 3 print(x-y)


ValueError: operands could not be broadcast together with shapes (3,4) (5,) 
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;위 에러 문구(&lt;code&gt;operands could not be broadcast together with shapes (3,4) (5,)&lt;/code&gt;)에서 확인 할 수 있는 것처럼 1차원 길이가 다르면 에러가 발생한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-rule-3-compatitble-in-all-of-the-dimensions&#34;&gt;(3) Rule 3. Compatitble in all of the dimensions&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;이번에는 서로 다른 모양의 객체를 확인한다.&lt;/li&gt;
&lt;li&gt;그리고 덧셈을 수행해보자.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ones((&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;))
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(x)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(x&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[[1. 1. 1. 1. 1.]
 [1. 1. 1. 1. 1.]
 [1. 1. 1. 1. 1.]
 [1. 1. 1. 1. 1.]
 [1. 1. 1. 1. 1.]
 [1. 1. 1. 1. 1.]]
(6, 5)
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;random&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;random((&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;))
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(y)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(y&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[[[0.68586586 0.9179277  0.88033036 0.6306833  0.17327179]]

 [[0.21184583 0.28629664 0.00532677 0.49662726 0.73354008]]

 [[0.82677113 0.49873148 0.56901096 0.82320785 0.04587492]]]
(3, 1, 5)
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(x&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;y)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[[[1.68586586 1.9179277  1.88033036 1.6306833  1.17327179]
  [1.68586586 1.9179277  1.88033036 1.6306833  1.17327179]
  [1.68586586 1.9179277  1.88033036 1.6306833  1.17327179]
  [1.68586586 1.9179277  1.88033036 1.6306833  1.17327179]
  [1.68586586 1.9179277  1.88033036 1.6306833  1.17327179]
  [1.68586586 1.9179277  1.88033036 1.6306833  1.17327179]]

 [[1.21184583 1.28629664 1.00532677 1.49662726 1.73354008]
  [1.21184583 1.28629664 1.00532677 1.49662726 1.73354008]
  [1.21184583 1.28629664 1.00532677 1.49662726 1.73354008]
  [1.21184583 1.28629664 1.00532677 1.49662726 1.73354008]
  [1.21184583 1.28629664 1.00532677 1.49662726 1.73354008]
  [1.21184583 1.28629664 1.00532677 1.49662726 1.73354008]]

 [[1.82677113 1.49873148 1.56901096 1.82320785 1.04587492]
  [1.82677113 1.49873148 1.56901096 1.82320785 1.04587492]
  [1.82677113 1.49873148 1.56901096 1.82320785 1.04587492]
  [1.82677113 1.49873148 1.56901096 1.82320785 1.04587492]
  [1.82677113 1.49873148 1.56901096 1.82320785 1.04587492]
  [1.82677113 1.49873148 1.56901096 1.82320785 1.04587492]]]
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;만약에 여기에서 &lt;code&gt;y&lt;/code&gt; 값을 &lt;code&gt;(3,2,5)&lt;/code&gt; 또는 &lt;code&gt;(3,1,6)&lt;/code&gt;으로 바꾸면 어떻게 될까?&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;random&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;random((&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;))
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(y)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(y&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[[[0.95042186 0.52979398 0.30549682 0.93579665 0.03784094]
  [0.27023327 0.19952522 0.68376492 0.11982131 0.45394735]]

 [[0.69797278 0.85359121 0.01493669 0.06111047 0.25285451]
  [0.57293653 0.28453573 0.18296577 0.12696192 0.28530794]]

 [[0.75410798 0.88487199 0.78635143 0.05059668 0.48753369]
  [0.65395856 0.74907103 0.47013049 0.14938089 0.36961655]]]
(3, 2, 5)
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(x&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;y)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;---------------------------------------------------------------------------

ValueError                                Traceback (most recent call last)

&amp;lt;ipython-input-43-39cb3db33052&amp;gt; in &amp;lt;module&amp;gt;()
----&amp;gt; 1 print(x+y)


ValueError: operands could not be broadcast together with shapes (6,5) (3,2,5) 
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;에러가 나는 것을 확인할 수 있다.&lt;/li&gt;
&lt;li&gt;왜 에러가 날까? &lt;code&gt;x&lt;/code&gt;의 2차원 배열의 숫자가 앞에 6으로 되어 있기 때문이다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;y&lt;/code&gt;값은 그대로 놔둔채, x의 값 &lt;code&gt;6&lt;/code&gt; 대신 &lt;code&gt;2&lt;/code&gt;로 바꿔주고 덧셈을 하면 성공적으로 연산이 수행됨을 알 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ones((&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;))
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(x)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(x&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[[1. 1. 1. 1. 1.]
 [1. 1. 1. 1. 1.]]
(2, 5)
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(x&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;y)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[[[1.95042186 1.52979398 1.30549682 1.93579665 1.03784094]
  [1.27023327 1.19952522 1.68376492 1.11982131 1.45394735]]

 [[1.69797278 1.85359121 1.01493669 1.06111047 1.25285451]
  [1.57293653 1.28453573 1.18296577 1.12696192 1.28530794]]

 [[1.75410798 1.88487199 1.78635143 1.05059668 1.48753369]
  [1.65395856 1.74907103 1.47013049 1.14938089 1.36961655]]]
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;v-결론&#34;&gt;V. 결론&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;머신러닝 &amp;amp; 딥러닝을 수행할 때, &lt;code&gt;NumPy&lt;/code&gt;을 활용한 객체 생성은 매우 빈번하다.&lt;/li&gt;
&lt;li&gt;대부분은 서로 다른 차원으로 인해 연산 오류가 자주 발생하는데, 이 때 &lt;code&gt;Broadcasting&lt;/code&gt;의 개념을 알고 있으면 연산 오류를 줄일 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;
&lt;p&gt;Brownley, Clinton W. Foundations for Analytics with Python. O&amp;rsquo;Reilly Media, Inc., 2016.&lt;/p&gt;
&lt;p&gt;Mukhiya, Suresh Kumar, and Usman Ahmed. “Hands-On Exploratory Data Analysis with Python.” Packt Publishing, Mar. 2020, &lt;a href=&#34;http://www.packtpub.com/data/hands-on-exploratory-data-analysis-with-python&#34;&gt;www.packtpub.com/data/hands-on-exploratory-data-analysis-with-python&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Python - NumPy 소개 및 다양한 객체 생성</title>
      <link>https://chloevan.github.io/python/basic/numpy_array_creation/</link>
      <pubDate>Fri, 15 May 2020 16:12:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/basic/numpy_array_creation/</guid>
      <description>&lt;h2 id=&#34;공지&#34;&gt;공지&lt;/h2&gt;
&lt;p&gt;제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/python/basic_syntax/numpy.png#center&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;i-개요&#34;&gt;I. 개요&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;NumPy&lt;/code&gt;는 C언어로 구성되었으며, 고성능의 수치계산을 위해 나온 패키지이며, &lt;code&gt;Numerical Python&lt;/code&gt;의 약자이다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Python&lt;/code&gt;을 활용한 데이터 분석을 수행할 때, 그리고 데이터 시각화나 전처리를 수행할 때, &lt;code&gt;NumPy&lt;/code&gt;는 매우 자주 사용되기 때문에 한번쯤은 꼭 다듬고 가는 것이 중요하다.&lt;/li&gt;
&lt;li&gt;독자의 가독성을 위해 두번에 걸쳐 나눠서 연재하려고 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ii-모듈-import&#34;&gt;II. 모듈 Import&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;패키지 설치방법은 &lt;a href=&#34;https://pypi.org/project/numpy/&#34;&gt;설치 문서&lt;/a&gt;를 확인한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; numpy &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; np
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;__version__)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;1.18.4
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;iii-배열-생성&#34;&gt;III. 배열 생성&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;NumPy&lt;/code&gt;를 활용하여 &lt;code&gt;Array(배열)&lt;/code&gt;을 만들어 본다.&lt;/li&gt;
&lt;li&gt;먼저 1차원 배열을 생성한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Defining 1D array&lt;/span&gt;
array_1D &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;array([&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt;])
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(array_1D)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[ 1  8 27 64]
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;이번에는 2차원 배열을 생성한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;array_2D &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;array([[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;], [&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;], [&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;]])
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(array_2D)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[[ 1  2  3  4]
 [ 2  4  9 16]
 [ 4  8 18 32]]
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;이번에는 3차원 배열을 생성한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;array_3D &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;array([[[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;]],[[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;]]])
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(array_3D)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[[[ 1  2  3  4]
  [ 5  6  7  8]]

 [[ 1  2  3  4]
  [ 9 10 11 12]]]
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;iv-배열에-대한-정보-확인&#34;&gt;IV. 배열에 대한 정보 확인&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;배열의 정보를 확인하는 다양한 함수가 존재한다.&lt;/li&gt;
&lt;li&gt;현재 저장된 배열에 대해 &lt;code&gt;RAM&lt;/code&gt;의 주소를 확인할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(array_2D&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;data)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;memory at 0x7f1348684ea0&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;배열의 구조를 확인할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(array_2D&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;(3, 4)
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;배열의 데이터 타입을 확인할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(array_2D&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;dtype)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;int64
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;배열의 간격 및 각 요소간의 간격에 대해서도 확인이 가능하다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;v-numpy를-활용한-다양한-객체-생성&#34;&gt;V. NumPy를 활용한 다양한 객체 생성&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;NumPy 패키지내의 함수를 활용하여 다양한 방식으로 패키지를 작성해보자.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Array of 1&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; numpy &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; np
ones &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ones((&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;)) &lt;span style=&#34;color:#75715e&#34;&gt;# 행, 열&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(ones)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[[1. 1. 1. 1.]
 [1. 1. 1. 1.]
 [1. 1. 1. 1.]]
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Array of 0&lt;/span&gt;
zeros &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;zeros((&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;), dtype&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;int16) &lt;span style=&#34;color:#75715e&#34;&gt;# 3차원의 개수, 2차원의 개수, 1차원의 개수&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(zeros)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[[[0 0 0 0 0]
  [0 0 0 0 0]
  [0 0 0 0 0]]

 [[0 0 0 0 0]
  [0 0 0 0 0]
  [0 0 0 0 0]]]
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Array with 랜덤값&lt;/span&gt;
np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;random&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;random((&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)) &lt;span style=&#34;color:#75715e&#34;&gt;# 2차원의 개수, 1차원의 개수&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;array([[0.25327514, 0.82196535],
       [0.77309235, 0.84250901]])
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Empty 배열&lt;/span&gt;
emptyArray &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;empty((&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;))
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(emptyArray)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[[0. 0.]
 [0. 0.]
 [0. 0.]]
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Full Array&lt;/span&gt;
fullArray &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;full((&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;), &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(fullArray)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[[7 7]
 [7 7]]
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Array of Evenly-Spaced Values (1차원 배열)&lt;/span&gt;
evenSpacedArray &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(evenSpacedArray)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[10 15 20 25 30 35 40 45]
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;arange&lt;/code&gt; 특정한 규칙에 따라 증가하는 수열을 생성한다.&lt;/li&gt;
&lt;li&gt;위 예제에서는 5만큼 증가하는 수열을 만들었다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;evenSpacedArray2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;linspace(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(evenSpacedArray2)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[0.   0.25 0.5  0.75 1.   1.25 1.5  1.75 2.  ]
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;evenSpacedArray3 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;logspace(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(evenSpacedArray3)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[  1.           1.77827941   3.16227766   5.62341325  10.
  17.7827941   31.6227766   56.23413252 100.        ]
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;linspace &amp;amp; logspace 명령은 선형 구간 혹은 로그 구간을 &lt;code&gt;지정한 구간의 수&lt;/code&gt;만큼 &lt;code&gt;분할&lt;/code&gt;한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;vi-whats-next&#34;&gt;VI. What&amp;rsquo;s Next&lt;/h2&gt;
&lt;p&gt;지금까지는 &lt;code&gt;NumPy&lt;/code&gt;를 활용한 객체 생성에 대해 짧게 익혔다. 그러나, NumPy의 가장 중요한 것은 각각의 배열간의 연산이며, 이러한 연산기법에 대한 이해가 있어야 향후에 배우게 될 &lt;code&gt;머신러닝 &amp;amp; 딥러닝&lt;/code&gt;에 대한 이해를 하는데 도움이 될 수 있기 때문에, 꼭 다음 포스트를 읽어두는 것을 추천한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/python/basic/numpy_array_application/&#34;&gt;Python - NumPy의 응용&lt;/a&gt;에 대해 배우도록 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;
&lt;p&gt;Mukhiya, Suresh Kumar, and Usman Ahmed. “Hands-On Exploratory Data Analysis with Python.” Packt Publishing, Mar. 2020, &lt;a href=&#34;http://www.packtpub.com/data/hands-on-exploratory-data-analysis-with-python&#34;&gt;www.packtpub.com/data/hands-on-exploratory-data-analysis-with-python&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Python - Lambda and List Comprehension</title>
      <link>https://chloevan.github.io/python/basic/lambda_and_list_comprehension/</link>
      <pubDate>Tue, 12 May 2020 17:12:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/basic/lambda_and_list_comprehension/</guid>
      <description>&lt;h2 id=&#34;공지&#34;&gt;공지&lt;/h2&gt;
&lt;p&gt;제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.&lt;/p&gt;
&lt;h2 id=&#34;i-개요&#34;&gt;I. 개요&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Python&lt;/code&gt;을 활용한 데이터전처리를 수행할 때, &lt;code&gt;Lambda and List Comprehension&lt;/code&gt; 활용하면 매우 &lt;code&gt;handy&lt;/code&gt;한 경험을 할 수 있다. 특히, 코드 수행 시, &lt;code&gt;for-loop&lt;/code&gt;가 많을 때 유용하다.&lt;/p&gt;
&lt;h2 id=&#34;ii-lambda-expression&#34;&gt;II. Lambda Expression&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/python/lambda/lambda.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;우선 &lt;code&gt;Lambda&lt;/code&gt;의 표현 방법은 아래와 같다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;lambda&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;인자&lt;/span&gt; : &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;표현식&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;어떻게 사용할 수 있을까요? 우선, &lt;code&gt;temp_sum&lt;/code&gt;이라는 함수를 만들어 본다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;temp_sum&lt;/span&gt;(x, y):
  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; y

temp_sum(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;5
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;이번에는 &lt;code&gt;lambda&lt;/code&gt;를 활용해서 &lt;code&gt;sum&lt;/code&gt;을 적용해보자.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;temp_sum &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;lambda&lt;/span&gt; x,y:x&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;y)(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(temp_sum)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;5
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;하나는 함수를 만들어서 사용했고, &lt;code&gt;lambda&lt;/code&gt;를 활용할 때는 함수를 쓰지 않고 작성했다.&lt;/p&gt;
&lt;p&gt;한가지 특징이 있다면, 일반적으로 함수는 &lt;code&gt;return&lt;/code&gt; 문이 존재하지만, &lt;code&gt;lambda&lt;/code&gt;는 없다는 점이다.&lt;/p&gt;
&lt;h2 id=&#34;iii-with-functions&#34;&gt;III. With functions&lt;/h2&gt;
&lt;p&gt;그런데, &lt;code&gt;lambda&lt;/code&gt; 자체가 독립적으로 쓰일 때 보다는 &lt;code&gt;map()&lt;/code&gt;, &lt;code&gt;filter()&lt;/code&gt;, &lt;code&gt;list comprehesion&lt;/code&gt;과 같이 쓰일 때, 보다 효율적이다.&lt;/p&gt;
&lt;h3 id=&#34;1-map&#34;&gt;(1) map()&lt;/h3&gt;
&lt;p&gt;문법은 아래와 같다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;map(func, iterables)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;map()&lt;/code&gt; 함수는 함수와 인자를 받는데, 이때의 함수라 하면, &lt;code&gt;lambda&lt;/code&gt;도 포함한다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;iterables&lt;/code&gt; 나오는데, 이는 일반적인 &lt;code&gt;list&lt;/code&gt;와는 다르다.&lt;/li&gt;
&lt;li&gt;따라서, &lt;code&gt;map()&lt;/code&gt;의 결과값은 &lt;code&gt;iterables&lt;/code&gt;로 반환되며, &lt;code&gt;list&lt;/code&gt;로 변환해야 &lt;code&gt;list&lt;/code&gt; 형태로 결과를 볼 수 있다.&lt;/li&gt;
&lt;li&gt;조금 더 구체적으로 &lt;code&gt;map&lt;/code&gt;의 사용용법은 아래와 같다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;list(map(func, iterables))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;이제 &lt;code&gt;list&lt;/code&gt; 객체에 &lt;code&gt;map()&lt;/code&gt; + &lt;code&gt;lambda&lt;/code&gt;를 활용해서 각 &lt;code&gt;list&lt;/code&gt;에 3씩 구하도록 한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;num_list &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;]
increased &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; list(map(&lt;span style=&#34;color:#66d9ef&#34;&gt;lambda&lt;/span&gt; x: x &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, num_list))
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(increased)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[8, 9, 10]
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;2-filter&#34;&gt;(2) filter()&lt;/h3&gt;
&lt;p&gt;이번에는 &lt;code&gt;filter()&lt;/code&gt; 함수를 활용한다. &lt;code&gt;map()&lt;/code&gt;와 마찬가지로 문법은 동일하다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;filter(func, iterables)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;iterables&lt;/code&gt;에 대해서는 별도로 추가적인 설명하지 않는다. &lt;code&gt;list&lt;/code&gt;로 받았기 때문에, 이번에도 &lt;code&gt;list&lt;/code&gt;로 변환해서 출력을 한다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;list&lt;/code&gt;안에 있는 각각의 값에서, &lt;code&gt;2로 나눈 값이 0&lt;/code&gt;이 아닌 것만 출력하는 구문을 짜도록 한다. 기대하는 값은 &lt;code&gt;[5,7]&lt;/code&gt;이다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;num_list &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;]
odd_num &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; list(filter(&lt;span style=&#34;color:#66d9ef&#34;&gt;lambda&lt;/span&gt; x: x&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, num_list))
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(odd_num)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[5, 7]
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;3-list-comprehension&#34;&gt;(3) List Comprehension&lt;/h3&gt;
&lt;p&gt;우선 문법을 보자.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;[expression &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; item &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; list &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; condition]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;위 구문을 가지고 무엇을 하고 싶을 때 써야할까?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;expression&lt;/code&gt; 사용자가 하려는 문법 (이번에는 곱셈을 해본다)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;item&lt;/code&gt;은 &lt;code&gt;list&lt;/code&gt;가 올것이다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;if&lt;/code&gt;는 item의 각 아이템을 조건문으로 &lt;code&gt;filter&lt;/code&gt;하는 개념이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;우선 아래 코드를 보자.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;num_list &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;]
sqrt_list &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [x&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;x &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; num_list &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; x&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(sqrt_list)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[4, 16, 36, 64, 100]
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;1-10까지 숫자를 포함하는 리스트가 있다. 2로 나눈 값 중 나머지가 0이 되는 값을 뽑은 뒤 각 숫자의 제곱을 하도록 반환하는 값이다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;List Comprehension&lt;/code&gt;의 강력함은 이렇게 여러 문법이 한줄로 코딩하여 속도 뿐만 아니라 코드의 가독성도 부여하는데 의의가 있다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;이번에는 &lt;code&gt;lambda&lt;/code&gt;를 적용한다. 우선 &lt;code&gt;lambda&lt;/code&gt;는 어디에 들어가야 할까? 당연한 말이지만, &lt;code&gt;expression&lt;/code&gt; 영역에 들어가야 한다. 우선 아래 코드를 확인해보자.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;num_list &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;]
sqrt_list &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [(&lt;span style=&#34;color:#66d9ef&#34;&gt;lambda&lt;/span&gt; x: x&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;x)(x) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; num_list &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; x&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(sqrt_list)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[4, 16, 36, 64, 100]
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;lambda&lt;/code&gt;를 어떻게 썼는지 확인해보면 &lt;code&gt;(lambda x: x*x)(x)&lt;/code&gt;라고 표현되어 있는 것을 볼 수 있는데, 앞 부분에서 &lt;code&gt;lambda expression&lt;/code&gt;(Chapter 2)에 대해 설명했기 때문에 생략한다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;위 코드에서 보는 것처럼, &lt;code&gt;List Comprehension&lt;/code&gt;과 &lt;code&gt;Lambda Expression&lt;/code&gt;을 같이 쓰는 것은 조금 비효율적일 수 있다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;iv-more-study&#34;&gt;IV. More Study&lt;/h2&gt;
&lt;p&gt;기본문법이다. 그런데, 아직까지 확실히 &lt;code&gt;Lambda&lt;/code&gt;가 좋은지는 필자 역시 모르겠다. 그런데, &lt;code&gt;Lambda&lt;/code&gt;가 데이터 전처리 때, 사용하면 매우 강력한 무기가 될 수 있음을 다음 포스트에서 기술하려고 한다.&lt;/p&gt;
&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;
&lt;p&gt;Suvhotta. (2020, January 27). Python: Lambda and List Comprehension. Retrieved May 12, 2020, from &lt;a href=&#34;https://dev.to/suvhotta/python-lambda-and-list-comprehension-5128&#34;&gt;https://dev.to/suvhotta/python-lambda-and-list-comprehension-5128&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Python Basic Syntax - list(1)</title>
      <link>https://chloevan.github.io/python/basic/basic_syntax_list_1/</link>
      <pubDate>Tue, 12 May 2020 11:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/basic/basic_syntax_list_1/</guid>
      <description>&lt;h2 id=&#34;공지&#34;&gt;공지&lt;/h2&gt;
&lt;p&gt;제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.&lt;/p&gt;
&lt;p&gt;본 포스트에서는 짧게 list를 만드는 법과, 값을 추가하는 것에 대해 작성합니다.&lt;/p&gt;
&lt;h2 id=&#34;i-list-개요&#34;&gt;I. list 개요&lt;/h2&gt;
&lt;p&gt;list는 순서는 순서가 있는 집합이며, &lt;code&gt;[]&lt;/code&gt; 형태를 가집니다. list는 &lt;code&gt;(integer, float, string, etc)&lt;/code&gt; 등으로 구성되는데, 서로 다른 데이터 값이 들어올 수도 있다. 아래 코드를 보자.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# empty list&lt;/span&gt;
my_list &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []

&lt;span style=&#34;color:#75715e&#34;&gt;# 숫자형 list&lt;/span&gt;
num_list &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;]

&lt;span style=&#34;color:#75715e&#34;&gt;# 문자형 list&lt;/span&gt;
chr_list &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;B&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;C&amp;#39;&lt;/span&gt;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;리스트는 또다른 리스트를 포함할 수 도 있다. 이것을 &lt;code&gt;A nested list&lt;/code&gt;라고 부른다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;nested_list &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;mouse&amp;#39;&lt;/span&gt;, [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;], [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;가&amp;#39;&lt;/span&gt;]]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;ii-list-접근&#34;&gt;II. list 접근&lt;/h2&gt;
&lt;p&gt;우선 크게 2가지 방법이 있다.&lt;/p&gt;
&lt;h3 id=&#34;1-list-index&#34;&gt;(1) list index&lt;/h3&gt;
&lt;p&gt;리스트가 &lt;code&gt;[]&lt;/code&gt;으로 구성되어 있는 것은 배웠다. 리스트에 안에 있는 것은 &lt;code&gt;item&lt;/code&gt;이라고 부른다.&lt;/p&gt;
&lt;p&gt;우선 아래코드로 리스트 인덱싱을 확인해보자.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# list indexing&lt;/span&gt;
index_list &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;p&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;o&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;b&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;e&amp;#39;&lt;/span&gt;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# output: p&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(index_list[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;p
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# output: e&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(index_list[&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;e
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;이번에는 &lt;code&gt;nested list&lt;/code&gt; 인덱싱 하는 방법을 알아보자.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;n_list &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Good&amp;#39;&lt;/span&gt;, [&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;]]
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(n_list)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[&#39;Good&#39;, [2, 0, 1, 5]]
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 먼저 `Good`을 출력한다. &lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(n_list[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;])

&lt;span style=&#34;color:#75715e&#34;&gt;# 0을 출력한다. &lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(n_list[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;][&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Good
0
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;주의: &lt;code&gt;Indexing&lt;/code&gt;을 할 때에는 &lt;code&gt;integer&lt;/code&gt; 타입만 올 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(n_list[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;][&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;---------------------------------------------------------------------------

TypeError                                 Traceback (most recent call last)

&amp;lt;ipython-input-13-a1de7f8766bd&amp;gt; in &amp;lt;module&amp;gt;()
----&amp;gt; 1 print(n_list[1][1.0])


TypeError: list indices must be integers or slices, not float
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;2-negative-indexing&#34;&gt;(2) Negative Indexing&lt;/h3&gt;
&lt;p&gt;이번에는 음수를 통해서 인덱싱을 해본다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# list indexing&lt;/span&gt;
index_list &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;p&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;o&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;b&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;e&amp;#39;&lt;/span&gt;]

&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(index_list[&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]) &lt;span style=&#34;color:#75715e&#34;&gt;# output: e&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(index_list[&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;]) &lt;span style=&#34;color:#75715e&#34;&gt;# output: b&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;e
b





list
&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://chloevan.github.io/img/python/basic_syntax/python-list-index.png&#34;
         alt=&#34;List indexing in Python&#34;/&gt; &lt;figcaption&gt;
            &lt;p&gt;List indexing in Python&lt;/p&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;위 이미지대로 &lt;code&gt;index&lt;/code&gt;와 &lt;code&gt;negative index&lt;/code&gt;에 따라 접근 방법이 달라지니 참고하기를 바란다.&lt;/p&gt;
&lt;h2 id=&#34;iii-list에-값-추가하기&#34;&gt;III. list에 값 추가하기&lt;/h2&gt;
&lt;p&gt;이번에는 간단하게 값을 추가하는 것을 배우도록 합니다. 값을 추가하는 방법은 크게 2가지가 있습니다. (&lt;code&gt;append&lt;/code&gt; &amp;amp; &lt;code&gt;extend&lt;/code&gt;)&lt;/p&gt;
&lt;h3 id=&#34;1-append&#34;&gt;(1) append&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;item&lt;/code&gt;을 하나씩 추가할 때는 &lt;code&gt;append&lt;/code&gt;를 사용합니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;temp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;]

&lt;span style=&#34;color:#75715e&#34;&gt;# 8을 추가합니다. &lt;/span&gt;
temp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(temp)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[2, 4, 6, 8]
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;2-extend&#34;&gt;(2) extend&lt;/h3&gt;
&lt;p&gt;[2,4,6,8]을 담고 있는 &lt;code&gt;temp&lt;/code&gt;에 &lt;code&gt;10, 12, 14&lt;/code&gt;을 추가하도록 합니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;temp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;extend([&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;])
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(temp)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[2, 4, 6, 8, 10, 12, 14]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;특정 변수를 만들어서 대입하면 보다 프로그래밍한 코드를 짤 수 있고, 실무에서는 이렇게 변수를 대입하는 것이 일반적입니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;add_temp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt;]
temp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;extend(add_temp)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(temp)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;만약, &lt;code&gt;extend&lt;/code&gt; 대신에 &lt;code&gt;append&lt;/code&gt; 함수를 쓰면 어떻게 될까요?&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;temp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;]
add_temp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt;]
temp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(add_temp)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(temp)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[2, 4, 6, [16, 18, 20, 22]]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;nested list&lt;/code&gt; 형태로 반환되는 것을 볼 수 있습니다.&lt;/p&gt;
&lt;h3 id=&#34;3-연산자-활용한-값-추가하기&#34;&gt;(3) 연산자 활용한 값 추가하기&lt;/h3&gt;
&lt;p&gt;연산자를 활용하여 두개의 다른 리스트를 합칠 수가 있습니다. 이러한 것을 &lt;code&gt;concatenation&lt;/code&gt;(연결 연산자)이라고 부릅니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Concatenating and repeating lists&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# + 연산자&lt;/span&gt;
temp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;]
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(temp &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;])

&lt;span style=&#34;color:#75715e&#34;&gt;# * 연산자&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;repeat&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[1, 3, 5, 9, 7, 5]
[&#39;repeat&#39;, &#39;repeat&#39;, &#39;repeat&#39;, &#39;repeat&#39;, &#39;repeat&#39;]
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;4-insert을-활용한-값-추가&#34;&gt;(4) insert()을 활용한 값 추가&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;insert()&lt;/code&gt; 함수를 사용하면 &lt;code&gt;list[]&lt;/code&gt; 특정 위치에 값을 넣을 수 있다. &lt;code&gt;[1, 5]&lt;/code&gt; 사이에 &lt;code&gt;[3]&lt;/code&gt;을 추가해보자.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;insert(index, object)&lt;/code&gt; 순으로 작성하면 된다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;즉, &lt;code&gt;object&lt;/code&gt;에 해당하는 3이 들어가는 위치는 두번째이고, 파이썬 문법으로 &lt;code&gt;[1]&lt;/code&gt;이 되니, &lt;code&gt;insert(1, 3)&lt;/code&gt;을 입력한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;temp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;]
temp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;insert(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(temp)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[1, 3, 5]
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;iv-그-외-list와-관련된-함수&#34;&gt;IV. 그 외 &lt;code&gt;list&lt;/code&gt;와 관련된 함수&lt;/h2&gt;
&lt;p&gt;지금까지 배운 함수는 &lt;code&gt;append&lt;/code&gt;, &lt;code&gt;extend&lt;/code&gt;, &lt;code&gt;insert&lt;/code&gt; 정도가 되는 것 같습니다.&lt;/p&gt;
&lt;p&gt;그러나 이 외에도 &lt;code&gt;remove&lt;/code&gt;, &lt;code&gt;pop&lt;/code&gt;, &lt;code&gt;clear&lt;/code&gt;, &lt;code&gt;index&lt;/code&gt;, &lt;code&gt;count&lt;/code&gt;, &lt;code&gt;sort&lt;/code&gt;, &lt;code&gt;reverse&lt;/code&gt;, &lt;code&gt;copy&lt;/code&gt; 등의 함수가 있습니다.&lt;/p&gt;
&lt;p&gt;다음 시간에는 슬라이스와 삭제하는 방법에 대해 다루도록 한다.&lt;/p&gt;
&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;
&lt;p&gt;출처: &lt;a href=&#34;https://docs.python.org/3/tutorial/datastructures.html&#34;&gt;https://docs.python.org/3/tutorial/datastructures.html&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>basic_loop</title>
      <link>https://chloevan.github.io/python/basic/basic_loop/</link>
      <pubDate>Sat, 02 May 2020 01:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/basic/basic_loop/</guid>
      <description>&lt;h2 id=&#34;공지&#34;&gt;공지&lt;/h2&gt;
&lt;p&gt;제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.&lt;/p&gt;
&lt;h2 id=&#34;i-개요&#34;&gt;I. 개요&lt;/h2&gt;
&lt;p&gt;파이썬 처음 입문하는 사람들을 위해서 작성하였다. Python으로 코드를 작성하다보면, 매우 빈번히 For-loop 구문을 확인할 수 있다. 간단한 코드로 For-loop를 확인해보자.&lt;/p&gt;
&lt;h2 id=&#34;ii-loop-over-list&#34;&gt;II. Loop over list&lt;/h2&gt;
&lt;p&gt;간단하게 for-loop를 작성해보자.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# double list&lt;/span&gt;
num &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1.72&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.67&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.71&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.89&lt;/span&gt;]
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; height &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; num:
  &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(height)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;1.72
1.67
1.71
1.89
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;순서대로 출력됨을 볼 수 있다.&lt;/p&gt;
&lt;h3 id=&#34;1-indexes-and-values&#34;&gt;(1) Indexes and Values&lt;/h3&gt;
&lt;p&gt;그런데, 만약 번호를 확인하고 싶다고 하면 어떻게 해야할까? 이 때에는 &lt;code&gt;enumrate()&lt;/code&gt; 함수를 사용해보자.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# double list&lt;/span&gt;
num &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1.72&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.67&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.71&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.89&lt;/span&gt;]
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; index, height &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; enumerate(num):
  &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;person &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(index&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;: &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(height))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;person 1: 1.72
person 2: 1.67
person 3: 1.71
person 4: 1.89
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;+1&lt;/code&gt;을 해준 이유는 &lt;code&gt;for loop&lt;/code&gt;시 0부터 출력되기 때문에 임의의 상수 &lt;code&gt;1&lt;/code&gt;을 출력한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# double list&lt;/span&gt;
num &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1.72&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.67&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.71&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.89&lt;/span&gt;]
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; index, height &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; enumerate(num):
  index &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;person &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(index) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;: &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(height))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;person 1: 1.72
person 2: 1.67
person 3: 1.71
person 4: 1.89
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;index +=&lt;/code&gt;와 같은 방식으로 작성을 해도 된다.&lt;/p&gt;
&lt;h3 id=&#34;2-loop-with-list-of-lists&#34;&gt;(2) Loop with list of lists&lt;/h3&gt;
&lt;p&gt;지금까지는 하나의 리스트에 대해서 출력을 했는데, 하나의 리스트 안에 또 다른 리스트가 있다면 어떻게 해야 할까?&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt; class_1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Person A&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.72&lt;/span&gt;], 
         [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Person B&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.67&lt;/span&gt;], 
         [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Person C&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.55&lt;/span&gt;]]
        
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; person &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; class_1:
  &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;그 &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; person[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;의 키는 &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(person[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;이다.&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;그 Person A의 키는 1.72이다.
그 Person B의 키는 1.67이다.
그 Person C의 키는 1.55이다.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;이때 &lt;code&gt;person&lt;/code&gt;는 두개의 값을 가지고 있고, 마찬가지로 0부터 접근이 가능하기 때문에 &lt;code&gt;0&lt;/code&gt;과 &lt;code&gt;1&lt;/code&gt;을 통해 접근을 할 수 있다.&lt;/p&gt;
&lt;h2 id=&#34;iii-pythonic-way-to-write-a-loop&#34;&gt;III. Pythonic way to write a loop&lt;/h2&gt;
&lt;p&gt;Pythonic 코드는 무엇인가? 간단히 말하면, 파이썬스럽게 코드를 작성한다는 뜻이다. 초보자에게는 조금 귀찮을 수 있지만, 본디 IT업무가 혼자하기 보다는 다른 시니어 개발자분들과 같이 해야 하기 때문에, 가급적 파이썬스럽게 코드를 작성하는 것을 권한다.&lt;/p&gt;
&lt;p&gt;파이썬 사용자라면, 꼭 읽어야 할 책 중의 하나다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://index-of.es/Varios-2/The%20Hitchiker%27s%20Guide%20to%20Python.pdf&#34;&gt;The Hitchhiker&amp;rsquo;s Guide to Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;다시 돌아와서, 아래 코드를 보자.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; numpy &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; np
a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;]
b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;]
p &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;zeros(len(a)&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;len(a))
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,len(a)):
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; j &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,len(a)):
        p &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; p &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
        result[p] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; a[i] &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; b[j]
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(result)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[-3. -4. -5. -2. -3. -4. -1. -2. -3.]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;여기에서 사용자가 얻으려 하는 결과는 &lt;code&gt;[-3. -4. -5. -2. -3. -4. -1. -2. -3.]&lt;/code&gt;다. 물론, 위 코드에서 구할 수는 있지만, 무언가 불필요한 코드가 많아 보인다.&lt;/p&gt;
&lt;p&gt;코드의 가독성도 조금 떨어져 보임을 알 수 있다. 어떻게 수정할까?&lt;/p&gt;
&lt;h3 id=&#34;1-방법-1-for-loop를-살리기&#34;&gt;(1) 방법 1. for loop를 살리기&lt;/h3&gt;
&lt;p&gt;일단, for loop를 살린 상태로 수정하겠다. 이때에는 &lt;code&gt;append()&lt;/code&gt;함수를 사용할 것이다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;]
b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;]
result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; a:
  &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; y &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; b:
    result&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(x &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; y)

&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(result)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[-3, -4, -5, -2, -3, -4, -1, -2, -3]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;코드가 10줄에서 8줄로 조금 줄어들었지만, 결과는 똑같았다. 그러나 여전히 &lt;code&gt;for loop&lt;/code&gt;가 많아 보인다.&lt;/p&gt;
&lt;p&gt;어떻게 줄일까?&lt;/p&gt;
&lt;h3 id=&#34;2-방법-2-pythonic-way&#34;&gt;(2) 방법 2. Pythonic way&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;pythonic&lt;/code&gt; 방식으로 하면 8줄에서 4줄로 줄일수 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;]
b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;]
result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [x &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; y &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; a &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; y &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; b]
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(result)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[-3, -4, -5, -2, -3, -4, -1, -2, -3]
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;3-속도-비교&#34;&gt;(3) 속도 비교&lt;/h3&gt;
&lt;p&gt;위에서 보는 것처럼 코드가 대폭 줄어드는 것을 확인할 수 있다. 당연히 속도에서도 차이가 날 것이다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;첫번째 방법&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%%&lt;/span&gt;timeit
a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;]
b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;]
result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; a:
  &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; y &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; b:
    result&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(x &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; y)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;100 loops, best of 3: 6.58 ms per loop
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;두번째 방법&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%%&lt;/span&gt;timeit
a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;]
b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;]
result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [x &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; y &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; a &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; y &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; b]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;1000000 loops, best of 3: 774 ns per loop
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;iii-실습파일&#34;&gt;III. 실습파일&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;구글코랩에서 빠르게 실습도 할 수 있습니다. &lt;a href=&#34;https://colab.research.google.com/github/chloevan/python_visualisation/blob/master/python_basic/basic_loop.ipynb&#34;&gt;실습&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>