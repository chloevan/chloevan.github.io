<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>머신러닝 on Data Science | ChloEvan</title>
    <link>https://chloevan.github.io/categories/%EB%A8%B8%EC%8B%A0%EB%9F%AC%EB%8B%9D/</link>
    <description>Recent content in 머신러닝 on Data Science | ChloEvan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 04 Sep 2020 02:00:47 +0900</lastBuildDate>
    
	<atom:link href="https://chloevan.github.io/categories/%EB%A8%B8%EC%8B%A0%EB%9F%AC%EB%8B%9D/rss.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>삼성카드 대회 Track-2 - 포지셔닝 분석(1)</title>
      <link>https://chloevan.github.io/python/python_edu/competition/samsungcard20/samsung_card_track_2_3/</link>
      <pubDate>Fri, 04 Sep 2020 02:00:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/competition/samsungcard20/samsung_card_track_2_3/</guid>
      <description>대회 소개  삼성카드 데이터분석 공모전이 시행되고 있다.  대회에 처음 참여하는 아시아경제-수강생들을 위해 일종의 가이드라인으로 제안하고자 한다.   본 포스트에서는 기본적인 내용만 전달하고자 하며, 대회 참여는 하지 않음을 명확히 한다.  포지셔닝 분석 개요  마케팅에서 자주 보는 분석 방법중의 하나는 포지셔닝(Positioning) 기법이다. 포지셔닝 분석은 마케팅 통계분석 기법중의 하나로, 기업이나, 상품, 브랜드 같은 개체들의 포지셔닝을 수행하는 다차원 척도법(MDS: Multi-Dimensional Scaling)과 상응분석(Correspondence Analysis)이 있다. 위 두가지 분석 방법 중 무엇을 사용해야 할까?</description>
    </item>
    
    <item>
      <title>머신러닝 알고리즘 - 결정트리 회귀모형</title>
      <link>https://chloevan.github.io/python/python_edu/04_machinelearning/chapter_4_3_regression_tree/</link>
      <pubDate>Thu, 03 Sep 2020 18:18:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/04_machinelearning/chapter_4_3_regression_tree/</guid>
      <description>I. 개요  결정트리 회귀 모형에 대해 배우도록 한다. 트리모형의 일반적인 특징에 대해 익힌다.  II. 결정 트리 모형  결정 트리는 분류, 회귀, 다중출력 작업도 가능한 활용범위가 많은 머신러닝 알고리즘이다. 결정 트리는 최근에 사용하는 랜덤포레스트, XGboost, LightGBM과 같은 모형의 기본 구성 요소이다.  (1) 의사결정 나무 예제   의사 결정 나무에서 자주 사용되는 예제를 우선 확인해보자.
  먼저, 데이터셋을 기준으로 IRIS 붓꽃의 종류는 아래와 같이 3가지로 구성되어 있다.</description>
    </item>
    
    <item>
      <title>Python 통계 - 포지셔닝 분석(2)</title>
      <link>https://chloevan.github.io/python/python_edu/05_statistics/chapter_5_2_positioning_analysis_2/</link>
      <pubDate>Thu, 03 Sep 2020 10:00:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/05_statistics/chapter_5_2_positioning_analysis_2/</guid>
      <description>포지셔닝 분석 개요  마케팅에서 자주 보는 분석 방법중의 하나는 포지셔닝(Positioning) 기법이다. 포지셔닝 분석은 마케팅 통계분석 기법중의 하나로, 기업이나, 상품, 브랜드 같은 개체들의 포지셔닝을 수행하는 다차원 척도법(MDS: Multi-Dimensional Scaling)과 상응분석(Correspondence Analysis)이 있다. 위 두가지 분석 방법 중 무엇을 사용해야 할까?  만약 데이터셋이 주로 등간척도, 비율척도와 같이 구성되어 있다면 다차원 척도법 만약 데이터셋이 주로 명목척도, 서열척도와 같이 구성되어 있다면 상응분석   현재 삼성카드 대회의 주 데이터셋은 명목척도 및 서열척도로 구성되어 있기 때문에 상응분석으로 시작하면 된다.</description>
    </item>
    
    <item>
      <title>Python 통계 - 포지셔닝 분석(1)</title>
      <link>https://chloevan.github.io/python/python_edu/05_statistics/chapter_5_1_positioning_analysis_1/</link>
      <pubDate>Wed, 02 Sep 2020 20:00:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/05_statistics/chapter_5_1_positioning_analysis_1/</guid>
      <description>포지셔닝 분석 개요  마케팅에서 자주 보는 분석 방법중의 하나는 포지셔닝(Positioning) 기법이다. 포지셔닝 분석은 마케팅 통계분석 기법중의 하나로, 기업이나, 상품, 브랜드 같은 개체들의 포지셔닝을 수행하는 다차원 척도법(MDS: Multi-Dimensional Scaling)과 상응분석(Correspondence Analysis)이 있다. 위 두가지 분석 방법 중 무엇을 사용해야 할까?  만약 데이터셋이 주로 등간척도, 비율척도와 같이 구성되어 있다면 다차원 척도법 만약 데이터셋이 주로 명목척도, 서열척도와 같이 구성되어 있다면 상응분석   현재 삼성카드 대회의 주 데이터셋은 명목척도 및 서열척도로 구성되어 있기 때문에 상응분석으로 시작하면 된다.</description>
    </item>
    
    <item>
      <title>삼성카드 대회 Track-2 - matplotlib 막대 그래프</title>
      <link>https://chloevan.github.io/python/python_edu/competition/samsungcard20/samsung_card_track_2_2/</link>
      <pubDate>Wed, 02 Sep 2020 15:00:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/competition/samsungcard20/samsung_card_track_2_2/</guid>
      <description>대회 소개  삼성카드 데이터분석 공모전이 시행되고 있다.  대회에 처음 참여하는 아시아경제-수강생들을 위해 일종의 가이드라인으로 제안하고자 한다.   본 포스트에서는 기본적인 내용만 전달하고자 하며, 대회 참여는 하지 않음을 명확히 한다.  환경 세팅  먼저, 데이터가 모두 한글로 구성이 되어 있기 때문에 한글파일 설정부터 진행한다. 한글파일 설정이 완료되면 구글 드라이브와 연동한다. 데이터 시각화를 진행한다.  %config InlineBackend.figure_format = &amp;#39;retina&amp;#39; !apt -qq -y install fonts-nanum fonts-nanum is already the newest version (20170925-1).</description>
    </item>
    
    <item>
      <title>머신러닝 지도학습 - 선형회귀</title>
      <link>https://chloevan.github.io/python/python_edu/04_machinelearning/chapter_4_3_regression_basic/</link>
      <pubDate>Wed, 02 Sep 2020 00:00:05 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/04_machinelearning/chapter_4_3_regression_basic/</guid>
      <description>I. 개요  머신러닝으로서 회귀 모형에 대해 숙지한다. 회귀 모형의 기본적인 개념과 평가 지표에 대해 숙지한다.  II. 회귀 모형 개요  회귀(Regression)은 통계 이론 중 가장 기본이다. 회귀의 기원은 영국의 통계학자 갈톤(Galton)이 수행한 연구에서 유래한다.   부모와 자식 간의 키의 상관관계를 분석하였는데, 키가 작은 가정과 키가 큰 가정을 살펴본 결과, 무한정 작아지지도 않고, 무한정 커지지 않아 일정한 평균으로 회귀하려는 자연적 법칙을 발견했다는 것이 기원이다.  (1) 회귀식의 개요  회귀는 1차 방정식이다.</description>
    </item>
    
    <item>
      <title>입문자를 위한 머신러닝 개요</title>
      <link>https://chloevan.github.io/python/python_edu/04_machinelearning/chapter_4_2_ml_intro/</link>
      <pubDate>Tue, 01 Sep 2020 10:00:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/04_machinelearning/chapter_4_2_ml_intro/</guid>
      <description>개요  캐글 데이터를 불러오는 방법에 대해 숙지한다. 머신러닝의 일반적인 내용에 대해 숙지한다.  I. 사전 준비작업  Kaggle API 설치 및 연동해서 GCP에 데이터를 적재하는 것까지 진행한다.  (1) Kaggle API 설치  구글 코랩에서 API를 불러오려면 다음 소스코드를 실행한다.  !pip install kaggle Requirement already satisfied: kaggle in /usr/local/lib/python3.6/dist-packages (1.5.6) Requirement already satisfied: urllib3&amp;lt;1.25,&amp;gt;=1.21.1 in /usr/local/lib/python3.6/dist-packages (from kaggle) (1.24.3) Requirement already satisfied: certifi in /usr/local/lib/python3.6/dist-packages (from kaggle) (2020.6.20) Requirement already satisfied: tqdm in /usr/local/lib/python3.</description>
    </item>
    
    <item>
      <title>삼성카드 대회 Track-2 데이터 고려 사항 (1)</title>
      <link>https://chloevan.github.io/python/python_edu/competition/samsungcard20/samsung_card_track_2_1/</link>
      <pubDate>Mon, 31 Aug 2020 01:00:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/competition/samsungcard20/samsung_card_track_2_1/</guid>
      <description>대회 소개  삼성카드 데이터분석 공모전이 시행되고 있다.  대회에 처음 참여하는 아시아경제-수강생들을 위해 일종의 가이드라인으로 제안하고자 한다.   본 포스트에서는 기본적인 내용만 전달하고자 함을 밝힌다.  Track2 과정은 마케팅 전략 제안이 중요하다!    환경 세팅  먼저, 데이터가 모두 한글로 구성이 되어 있기 때문에 한글파일 설정부터 진행한다. 한글파일 설정이 완료되면 구글 드라이브와 연동한다. 데이터 시각화를 진행한다.  %config InlineBackend.figure_format = &amp;#39;retina&amp;#39; !apt -qq -y install fonts-nanum The following package was automatically installed and is no longer required: libnvidia-common-440 Use &#39;apt autoremove&#39; to remove it.</description>
    </item>
    
    <item>
      <title>DataFrame의 변수 추가 및 삭제</title>
      <link>https://chloevan.github.io/python/python_edu/02_datatransformation/chapter_4_6_datatransformation/</link>
      <pubDate>Sun, 30 Aug 2020 01:00:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/02_datatransformation/chapter_4_6_datatransformation/</guid>
      <description>데이터 개요  German Credit Card를 활용하여 데이터를 가공하도록 한다.  데이터셋에 대한 설명은 Kaggle에서 확인한다.    import pandas as pd print(pd.__version__) 1.0.5  url = &amp;#39;https://raw.githubusercontent.com/chloevan/kaggle2portpolio/master/datasets/german_credit_data.csv&amp;#39; german_credit = pd.read_csv(url) german_credit.head(3)  #customers { font-family: &#34;Trebuchet MS&#34;, Arial, Helvetica, sans-serif; border-collapse: collapse; } #customers td, #customers th { border: 1px solid #ddd; padding: 8px; } #customers tr:nth-child(even) { background-color: #f2f2f2; } #customers tr:hover { background-color: #ddd; } #customers th { padding-top: 12px; padding-bottom: 12px; text-align: left; background-color: rgb(175, 107, 76); color: white; }    Unnamed: 0 Age Sex Job Housing Saving accounts Checking account Credit amount Duration Purpose     0 0 67 male 2 own NaN little 1169 6 radio/TV   1 1 22 female 2 own little moderate 5951 48 radio/TV   2 2 49 male 1 own little NaN 2096 12 education      Pandas DataFrame은 Index와 나머지 열로 구성이 되어 있다.</description>
    </item>
    
    <item>
      <title>입문자를 위한 머신러닝 튜토리얼 - 교차검증</title>
      <link>https://chloevan.github.io/python/python_edu/04_machinelearning/chapter_4_2_cross_val/</link>
      <pubDate>Thu, 20 Aug 2020 00:10:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/04_machinelearning/chapter_4_2_cross_val/</guid>
      <description>개요  교차검증의 의미를 이해한다. 교차검증을 위한 간단한 실습을 진행한다.  교차검증이란  교차검증은 기본적으로 과적합을 예방하기 위한 방법론 중 하나이다. 교차검증을 쉽게 이해하는 방법은 수능시험을 보기 위해 수능과 비슷한 유형의 모의고사를 보는 것과 같다.  (1) K폴드 교차검증 개요  데이터의 수가 적을 때 사용한다.  검증 데이터의 수도 적기 때문에 검증 성능의 신뢰도가 떨어진다. 이 때, K-폴드 방법을 사용한다.   그림을 보며 이해하자.   데이터의 편향을 방지하기 위한 것  데이터를 K개로 나누어 K-1개를 분할하고 나머지는 평가에 사용 모델의 검증 점수는 K개의 검증 점수 평균이 된다.</description>
    </item>
    
    <item>
      <title>입문자를 위한 머신러닝 분류 튜토리얼 - Decision Tree</title>
      <link>https://chloevan.github.io/python/python_edu/04_machinelearning/chapter_4_5_understanding_tree/</link>
      <pubDate>Wed, 19 Aug 2020 01:00:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/04_machinelearning/chapter_4_5_understanding_tree/</guid>
      <description>개요  사이킷런(scikit-learn)은 파이썬 머신러닝 라이브러리이다. 파이썬에서 나오는 최신 알고리즘들도 이제는 사이킷런에 통합하는 형태로 취하고 있다. 구글 코랩은 기본적으로 사이킷런까지 설치가 완료되기에 별도의 설치가 필요없는 장점이 있다. Note: 본 포스트는 머신러닝 자체를 처음 접하는 분들을 위한 것이기 때문에, 어느정도 경험이 있으신 분들은 필자의 다른 포스트를 읽어주시기를 바랍니다.  패키지 불러오기  패키지는 시간에 지남에 따라 계속 업그레이드가 되기 때문에 꼭 버전 체크를 하는 것을 권장한다.  필자가 글을 남겼을 때는 2020년 8월 16일에 작성했음을 기억하자.</description>
    </item>
    
    <item>
      <title>입문자를 위한 머신러닝 분류 튜토리얼 - IRIS 분류</title>
      <link>https://chloevan.github.io/python/python_edu/04_machinelearning/chapter_4_4_classification_iris_example/</link>
      <pubDate>Mon, 17 Aug 2020 01:00:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/04_machinelearning/chapter_4_4_classification_iris_example/</guid>
      <description>개요  사이킷런(scikit-learn)은 파이썬 머신러닝 라이브러리이다. 파이썬에서 나오는 최신 알고리즘들도 이제는 사이킷런에 통합하는 형태로 취하고 있다. 구글 코랩은 기본적으로 사이킷런까지 설치가 완료되기에 별도의 설치가 필요없는 장점이 있다. Note: 본 포스트는 머신러닝 자체를 처음 접하는 분들을 위한 것이기 때문에, 어느정도 경험이 있으신 분들은 필자의 다른 포스트를 읽어주시기를 바랍니다.  패키지 불러오기  패키지는 시간에 지남에 따라 계속 업그레이드가 되기 때문에 꼭 버전 체크를 하는 것을 권장한다.  필자가 글을 남겼을 때는 2020년 8월 16일에 작성했음을 기억하자.</description>
    </item>
    
    <item>
      <title>머신러닝 알고리즘 - 분류 Tutorial</title>
      <link>https://chloevan.github.io/python/python_edu/04_machinelearning/chapter_4_4_classification/</link>
      <pubDate>Thu, 23 Jul 2020 10:00:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/04_machinelearning/chapter_4_4_classification/</guid>
      <description>개요  Kaggle 대회인 `Titanic&amp;rsquo;대회를 통해 분류 모형을 만들어본다. 본 강의는 수업 자료의 일부로 작성되었다.  I. 사전 준비작업  Kaggle API 설치 및 연동해서 GCP에 데이터를 적재하는 것까지 진행한다.  (1) Kaggle API 설치  구글 코랩에서 API를 불러오려면 다음 소스코드를 실행한다.  !pip install kaggle Requirement already satisfied: kaggle in /usr/local/lib/python3.6/dist-packages (1.5.6) Requirement already satisfied: requests in /usr/local/lib/python3.6/dist-packages (from kaggle) (2.23.0) Requirement already satisfied: urllib3&amp;lt;1.25,&amp;gt;=1.21.1 in /usr/local/lib/python3.6/dist-packages (from kaggle) (1.</description>
    </item>
    
    <item>
      <title>머신러닝 알고리즘 - LightGbm</title>
      <link>https://chloevan.github.io/python/python_edu/04_machinelearning/chapter_4_3_lightgbm/</link>
      <pubDate>Thu, 16 Jul 2020 23:00:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/04_machinelearning/chapter_4_3_lightgbm/</guid>
      <description>개요  주택가격을 예측하는 데 필요한 Kaggle 데이터를 불러와서 빅쿼리에 저장하는 실습 진행 데이터를 불러와서 LightGBM를 활용하여 머신러닝을 만든다.  I. 사전 준비작업  Kaggle API 설치 및 연동해서 GCP에 데이터를 적재하는 것까지 진행한다.  (1) Kaggle API 설치  구글 코랩에서 API를 불러오려면 다음 소스코드를 실행한다.  !pip install kaggle Requirement already satisfied: kaggle in /usr/local/lib/python3.6/dist-packages (1.5.6) Requirement already satisfied: six&amp;gt;=1.10 in /usr/local/lib/python3.6/dist-packages (from kaggle) (1.12.0) Requirement already satisfied: requests in /usr/local/lib/python3.</description>
    </item>
    
    <item>
      <title>구글 텐서플로우 공인 자격증 취득 방법</title>
      <link>https://chloevan.github.io/gcp/certification/tensorflow_certification/</link>
      <pubDate>Mon, 15 Jun 2020 17:10:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/gcp/certification/tensorflow_certification/</guid>
      <description>I. Python 개발환경 (2020.06.20) 기준  텐서플로 자격증 시험은 PyCharm에서 실행된다. 텐서플로 버전 2.x을 사용하고, (1.x) 사용하지 않는다. 파이썬 버전은 3.7을 사용한다. 만약 현재 다른 버전을 사용한다면, 별도로 선정해야 하는 번거로움이 있다. 추가 확인 사항  우선, 인터넷 환경이 안정적이어야 한다. PyCharm 기반 구성에 대해 익숙해져야 한다.    작성 중&amp;hellip;</description>
    </item>
    
    <item>
      <title>Machine Learning Tutorial 02 - Regression (2)</title>
      <link>https://chloevan.github.io/python/machin_learning/scikit_regression/ml01_regression2/</link>
      <pubDate>Fri, 20 Mar 2020 13:11:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/machin_learning/scikit_regression/ml01_regression2/</guid>
      <description>I. 지도 학습 VS 비지도 학습 머신러닝은 크게 두 가지 유형으로 분류한다. 우선 아래 표를 보자.
   구분 지도학습(Supervised Learning) 비지도 학습(Unsupervised Learning)     알고리즘(분석모형) 회귀분석분류모형 군집분석   특징 정답을 알고 있는 상태에서 학습모형 평가 방법이 다양한 편 정답이 없는 상태에서 서로 비슷한 데이터를 찾아서 그룹화모형 평가 방법이 제한적    지도학습(Supervised Learning)은 종속변수(Dependent Variable) 선정이 매우 중요하며. 종속변수 선정과 함께 데이터 분석도 같이 병행이 된다.</description>
    </item>
    
    <item>
      <title>Machine Learning Tutorial 01 - Regression (1)</title>
      <link>https://chloevan.github.io/python/machin_learning/scikit_regression/ml01_regression/</link>
      <pubDate>Thu, 19 Mar 2020 18:11:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/machin_learning/scikit_regression/ml01_regression/</guid>
      <description>I 지도 학습 VS 비지도 학습 머신러닝은 크게 두 가지 유형으로 분류한다. 우선 아래 표를 보자.
   구분 지도학습(Supervised Learning) 비지도 학습(Unsupervised Learning)     알고리즘(분석모형) 회귀분석분류모형 군집분석   특징 정답을 알고 있는 상태에서 학습모형 평가 방법이 다양한 편 정답이 없는 상태에서 서로 비슷한 데이터를 찾아서 그룹화모형 평가 방법이 제한적    지도학습(Supervised Learning)은 종속변수(Dependent Variable) 선정이 매우 중요하며. 종속변수 선정과 함께 데이터 분석도 같이 병행이 된다.</description>
    </item>
    
  </channel>
</rss>