<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>leaflet on Data Science | ChloEvan</title>
    <link>https://chloevan.github.io/tags/leaflet/</link>
    <description>Recent content in leaflet on Data Science | ChloEvan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 18 Apr 2020 17:15:39 +0900</lastBuildDate>
    
        <atom:link href="https://chloevan.github.io/tags/leaflet/rss.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Shiny 프로젝트 Review &amp; 더 알아볼 것</title>
      <link>https://chloevan.github.io/r/shiny/project_final/</link>
      <pubDate>Sat, 18 Apr 2020 17:15:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/shiny/project_final/</guid>
      <description>&lt;h2 id=&#34;공지&#34;&gt;공지&lt;/h2&gt;
&lt;p&gt;이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다&lt;/p&gt;
&lt;p&gt;이번에 준비한 Tutorial 코로나 세계현황을 &lt;code&gt;Shiny Dashboard&lt;/code&gt;로 만들어 가는 과정을 담았다.&lt;/p&gt;
&lt;h2 id=&#34;i-shiny-tutorial-소개&#34;&gt;I. Shiny Tutorial 소개&lt;/h2&gt;
&lt;p&gt;처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_01/&#34;&gt;shiny tutorial 01 - get started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_02/&#34;&gt;shiny tutorial 02 - Shiny Structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_03/&#34;&gt;shiny tutorial 03 - HTML content&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_04/&#34;&gt;shiny tutorial 04 - Shiny Layouts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_05/&#34;&gt;shiny tutorial 05 - Sharing Apps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_06/&#34;&gt;shiny tutorial 06 - shinydashboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_07/&#34;&gt;shiny tutorial 07 - flexdashboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_08/&#34;&gt;shiny tutorial 08 - HTML, CSS 적용&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ii-shiny-project&#34;&gt;II. Shiny Project&lt;/h2&gt;
&lt;p&gt;현재 진행중인 프로젝트가 궁금하다면 아래를 확인해보자.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_01/&#34;&gt;Corona Shiny Project 1 - Get Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_02/&#34;&gt;Corona Shiny Project 2 - Visusalization (Time Series)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_03/&#34;&gt;Corona Shiny Project 3 - Visusalization (Bubble Chart)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_04/&#34;&gt;Corona Shiny Project 4 - Visusalization (Map Chart)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_05/&#34;&gt;Corona Shiny Project 5 - Chart with DateInput&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_06_01/&#34;&gt;Corona Shiny Project 6_1 - 데이터 전처리&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_06_02/&#34;&gt;Corona Shiny Project 6_2 - Chart Automation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;iii-현재-게시중인-다양한-종류의-shiny-app&#34;&gt;III. 현재 게시중인 다양한 종류의 Shiny App&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;(참고) 가급적 PC에서 확인하시기를 바란다.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.shinyapps.io/source/&#34;&gt;영화관련 데이터&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.shinyapps.io/fashion/&#34;&gt;웹크롤링 데이터&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.shinyapps.io/shinyProject_Test/&#34;&gt;ShinyTest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.shinyapps.io/corona_19/&#34;&gt;Corona_Ref&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;강사에게 영감을 준 코로나 대시보드&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.shinyapps.io/COVID_19_Project/&#34;&gt;Corona_Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;iv-더-알아볼-것&#34;&gt;IV. 더 알아볼 것&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/datastorm-open/shinymanager&#34;&gt;로그인 기능&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://shiny.rstudio.com/articles/modules.html&#34;&gt;Shiny App 모듈화&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;v-결론&#34;&gt;V. 결론&lt;/h2&gt;
&lt;p&gt;약 2주동안 작성한 것 같다. 위 프로젝트는 R에 대해 처음 배우는 사람에게는 조금 난해할 수 있다. 데이터 가공 및 시각화에 대한 구체적인 설명을 하기에는 사실 공간도 부족하고 글의 본질에도 조금 벗어난다.&lt;/p&gt;
&lt;p&gt;대시보드의 본질은 매일매일 봐야하는 데이터를 자동화(&lt;code&gt;Automation&lt;/code&gt;)의 기능이 있다. 강사가 작업한 &lt;code&gt;Corona와 웹크롤링 대시보드&lt;/code&gt;는 외부 또는 수동으로 데이터를 계속 매일매일 업데이트 해주면서 쌓아가고 있는 대시보드이다. 한번 만든 이후에는 현재 별다른 코딩을 추가하지도 않고 있다. 이것외에 더 중요한 &lt;code&gt;Metric&lt;/code&gt;이 나온다면 그 때 다시 대시보드가 하나씩 추가가 될 것이다. 물론 이건 현업에서의 일이다.&lt;/p&gt;
&lt;p&gt;결국엔 이러한 과정도 매일매일 꾸준하게 하지 않으면 잊게 될 것이다. 강사가 이러한 글을 블로그에 담을 때는 결국 코드의 재사용성도 염두에 두었다. 지도 시각화 같은 경우에는 여간해서는 바뀌지 않을 것이고, 디자인만 조금 손 보면 대시보드는 늘 그럴싸하게 나오니까 말이다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Shiny&lt;/code&gt;의 대장정은 여기까지이다.&lt;/p&gt;
&lt;p&gt;아! 로그인 기능과 클라우드 서버를 통한 배포! 이 부분은 추후에 추가적으로 업데이트 한다. (언제가 될지는 모르겠지만&amp;hellip;) 내용적으로 어려운 건 아니다. 한번 해보면 된다. 내용적으로 어려운 건 언제나 분석(Analytics)이다.&lt;/p&gt;
&lt;h2 id=&#34;vi-reference&#34;&gt;VI. Reference&lt;/h2&gt;
&lt;p&gt;shinydashboard., (2020). shinydashboard. Retrieved April 1, 2020, from &lt;a href=&#34;https://rstudio.github.io/shinydashboard/index.html/&#34;&gt;https://rstudio.github.io/shinydashboard/index.html/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;flexdashboard, (2020). flexdashboard Retrieved April 2, 2020, from &lt;a href=&#34;https://rmarkdown.rstudio.com/flexdashboard/index.html&#34;&gt;https://rmarkdown.rstudio.com/flexdashboard/index.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;shinyapps.io team., (2020, March 5). shinyapps.io user guide. Retrieved March 31, 2020, from &lt;a href=&#34;https://docs.rstudio.com/shinyapps.io/&#34;&gt;https://docs.rstudio.com/shinyapps.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;김진성. (2018). 빅데이터 분석을 위한 R 프로그래밍. 서울: 가메출판사.&lt;/p&gt;
&lt;p&gt;Grolemund, G., Cheng, J., &amp;amp; Cetinkaya-Rundel, M. (2017, August 9). Customize your UI with HTML. Retrieved from &lt;a href=&#34;https://shiny.rstudio.com/articles/html-tags.html&#34;&gt;https://shiny.rstudio.com/articles/html-tags.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Allaire. (2014, January 24). Application layout guide. Retrieved March 30, 2020, from &lt;a href=&#34;https://shiny.rstudio.com/articles/layout-guide.html&#34;&gt;https://shiny.rstudio.com/articles/layout-guide.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Grolemund, Garrett. and Cheng, Joe., (2014). Style your apps with CSS Retrieved April 5, 2020, from &lt;a href=&#34;https://shiny.rstudio.com/articles/css.html&#34;&gt;https://shiny.rstudio.com/articles/css.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;FABACHER, Thibaut. “Covid-19 Interactive Map (Using R with Shiny, Leaflet and Dplyr).” R, R-Bloggers, 12 Mar. 2020, &lt;a href=&#34;http://www.r-bloggers.com/covid-19-interactive-map-using-r-with-shiny-leaflet-and-dplyr/&#34;&gt;www.r-bloggers.com/covid-19-interactive-map-using-r-with-shiny-leaflet-and-dplyr/&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Corona Shiny Project 6_2 - Chart Automation</title>
      <link>https://chloevan.github.io/r/shiny/project_06_02/</link>
      <pubDate>Sat, 18 Apr 2020 14:15:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/shiny/project_06_02/</guid>
      <description>&lt;h2 id=&#34;공지&#34;&gt;공지&lt;/h2&gt;
&lt;p&gt;이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다&lt;/p&gt;
&lt;p&gt;이번에 준비한 Tutorial 코로나 세계현황을 &lt;code&gt;Shiny Dashboard&lt;/code&gt;로 만들어 가는 과정을 담았다.&lt;/p&gt;
&lt;h2 id=&#34;i-shiny-tutorial-소개&#34;&gt;I. Shiny Tutorial 소개&lt;/h2&gt;
&lt;p&gt;처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_01/&#34;&gt;shiny tutorial 01 - get started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_02/&#34;&gt;shiny tutorial 02 - Shiny Structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_03/&#34;&gt;shiny tutorial 03 - HTML content&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_04/&#34;&gt;shiny tutorial 04 - Shiny Layouts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_05/&#34;&gt;shiny tutorial 05 - Sharing Apps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_06/&#34;&gt;shiny tutorial 06 - shinydashboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_07/&#34;&gt;shiny tutorial 07 - flexdashboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_08/&#34;&gt;shiny tutorial 08 - HTML, CSS 적용&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ii-shiny-project&#34;&gt;II. Shiny Project&lt;/h2&gt;
&lt;p&gt;현재 진행중인 프로젝트가 궁금하다면 아래를 확인해보자.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_01/&#34;&gt;Corona Shiny Project 1 - Get Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_02/&#34;&gt;Corona Shiny Project 2 - Visusalization (Time Series)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_03/&#34;&gt;Corona Shiny Project 3 - Visusalization (Bubble Chart)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_04/&#34;&gt;Corona Shiny Project 4 - Visusalization (Map Chart)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_05/&#34;&gt;Corona Shiny Project 5 - Chart with DateInput&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_06_01/&#34;&gt;Corona Shiny Project 6_1 - 데이터 전처리)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;iii-데이터-전처리-리뷰&#34;&gt;III. 데이터 전처리 리뷰&lt;/h2&gt;
&lt;p&gt;처음 이글을 접하는 사람들을 위해 전체적인 코드를 다시 정리하였다. 처음부터 &lt;code&gt;shiny tutorial&lt;/code&gt;을 진행하는 것도 도움이 되지만, 우선 이번 강의의 목적은 &lt;code&gt;Chart Automation&lt;/code&gt;을 어떻게 활용하는지가 우선이기 때문에 데이터셋은 전처리된 데이터셋을 다시 정리한다.&lt;/p&gt;
&lt;p&gt;아래 코드대로 실행하면 되니, 큰 문제없이 따라와주기를 바란다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(rgdal)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## Loading required package: sp
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;## rgdal: version: 1.4-8, (SVN revision 845)
##  Geospatial Data Abstraction Library extensions to R successfully loaded
##  Loaded GDAL runtime: GDAL 2.4.2, released 2019/06/28
##  Path to GDAL shared files: /Library/Frameworks/R.framework/Versions/3.6/Resources/library/rgdal/gdal
##  GDAL binary built with GEOS: FALSE 
##  Loaded PROJ.4 runtime: Rel. 5.2.0, September 15th, 2018, [PJ_VERSION: 520]
##  Path to PROJ.4 shared files: /Library/Frameworks/R.framework/Versions/3.6/Resources/library/rgdal/proj
##  Linking to sp version: 1.3-2
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(readxl)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(httr)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(dplyr)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &#39;dplyr&#39;
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;## The following objects are masked from &#39;package:stats&#39;:
## 
##     filter, lag
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;## The following objects are masked from &#39;package:base&#39;:
## 
##     intersect, setdiff, setequal, union
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(stringr)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(tidyr)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(shiny)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(leaflet)

&lt;span style=&#34;color:#75715e&#34;&gt;# Excel URL Copy&lt;/span&gt;
url &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://www.ecdc.europa.eu/sites/default/files/documents/COVID-19-geographic-disbtribution-worldwide.xlsx&amp;#39;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# 파일 이름만 가져오기&lt;/span&gt;
getFileName &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;basename&lt;/span&gt;(url)

&lt;span style=&#34;color:#75715e&#34;&gt;# 지정된 디렉토리에 파일 다운로드 받기&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;download.file&lt;/span&gt;(url &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; url, destfile &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; getFileName)

&lt;span style=&#34;color:#75715e&#34;&gt;# 지정된 디렉토리에서 파일 업로드 하기&lt;/span&gt;
corona &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;read_excel&lt;/span&gt;(getFileName)

corona_date &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.Date&lt;/span&gt;(corona&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;dateRep)

countries &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;readOGR&lt;/span&gt;(dsn &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;~/Desktop/ne_50m_admin_0_countries&amp;#34;&lt;/span&gt;,
                     layer &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ne_50m_admin_0_countries&amp;#34;&lt;/span&gt;,
                     encoding &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;utf-8&amp;#34;&lt;/span&gt;,use_iconv &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; T,
                     verbose &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;)

countries&lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;data&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;POP_EST[ &lt;span style=&#34;color:#a6e22e&#34;&gt;which&lt;/span&gt;(countries&lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;data&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;POP_EST &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NA&lt;/span&gt;
countries&lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;data&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;POP_EST &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.numeric&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(countries&lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;data&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;POP_EST)) &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1000000&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;round&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)

corona &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;select&lt;/span&gt;(dateRep, countriesAndTerritories, cases) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 필요한 열만 추출한다. &lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;group_by_at&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;vars&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;cases)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# cases를 제외하고 모두 그룹을 한다는 뜻이다. &lt;/span&gt;
  dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(row_id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;n&lt;/span&gt;()) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ungroup&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# 그룹 인덱스를 만든다.&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;spread&lt;/span&gt;(key&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;dateRep, value&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;cases) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# &lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;select&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;row_id) &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; dataCases &lt;span style=&#34;color:#75715e&#34;&gt;# 인덱스 제거 후 corona2로 저장한다. &lt;/span&gt;

coronaConfirmed &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;left_join&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;data.frame&lt;/span&gt;(countries &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; countries&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;NAME &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(), 
                                              Pop &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; countries&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;POP_EST &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.numeric&lt;/span&gt;()), 
                             dataCases &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
                               &lt;span style=&#34;color:#a6e22e&#34;&gt;rename&lt;/span&gt;(countries &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; countriesAndTerritories)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
                               &lt;span style=&#34;color:#a6e22e&#34;&gt;filter&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;is.na&lt;/span&gt;(countries))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## Joining, by = &amp;quot;countries&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;## Warning: Column `countries` joining factor and character vector, coercing into
## character vector
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;coronaConfirmed&lt;span style=&#34;color:#a6e22e&#34;&gt;[is.na&lt;/span&gt;(coronaConfirmed)] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;

countries2 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;merge&lt;/span&gt;(countries,
                    coronaConfirmed,
                    by.x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;NAME&amp;#34;&lt;/span&gt;,
                    by.y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;countries&amp;#34;&lt;/span&gt;,
                    sort &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;처음 이글을 접한 사람들에게 여기에서 문제가 될만한 소스코드는 &lt;code&gt;readOGR&lt;/code&gt;에 해당하는 지도객체를 가져오는 문제인데, 이 부분은 강사가 작업한 &lt;a href=&#34;https://chloevan.github.io/r/shiny/project_04/&#34;&gt;Corona Shiny Project 4 - Visusalization (Map Chart)&lt;/a&gt;에서 추가학습 할 것을 권한다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;countries2&lt;/code&gt; 객체로 데이터를 &lt;code&gt;Merge&lt;/code&gt; 하였다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;이렇게 합쳐진 데이터의 데이터를 다시 보면 아래와 같다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;head&lt;/span&gt;(countries2&lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;data) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;select&lt;/span&gt;(NAME, Pop, &lt;span style=&#34;color:#a6e22e&#34;&gt;contains&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-&amp;#34;&lt;/span&gt;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;##          NAME      Pop 2019-12-31 2020-01-01 2020-01-02 2020-01-03 2020-01-04
## 241  Zimbabwe 13.80508          0          0          0          0          0
## 240    Zambia 15.97200          0          0          0          0          0
## 239     Yemen 28.03683          0          0          0          0          0
## 236   Vietnam 96.16016          0          0          0          0          0
## 235 Venezuela 31.30402          0          0          0          0          0
## 234   Vatican  0.00100          0          0          0          0          0
##     2020-01-05 2020-01-06 2020-01-07 2020-01-08 2020-01-09 2020-01-10
## 241          0          0          0          0          0          0
## 240          0          0          0          0          0          0
## 239          0          0          0          0          0          0
## 236          0          0          0          0          0          0
## 235          0          0          0          0          0          0
## 234          0          0          0          0          0          0
##     2020-01-11 2020-01-12 2020-01-13 2020-01-14 2020-01-15 2020-01-16
## 241          0          0          0          0          0          0
## 240          0          0          0          0          0          0
## 239          0          0          0          0          0          0
## 236          0          0          0          0          0          0
## 235          0          0          0          0          0          0
## 234          0          0          0          0          0          0
##     2020-01-17 2020-01-18 2020-01-19 2020-01-20 2020-01-21 2020-01-22
## 241          0          0          0          0          0          0
## 240          0          0          0          0          0          0
## 239          0          0          0          0          0          0
## 236          0          0          0          0          0          0
## 235          0          0          0          0          0          0
## 234          0          0          0          0          0          0
##     2020-01-23 2020-01-24 2020-01-25 2020-01-26 2020-01-27 2020-01-28
## 241          0          0          0          0          0          0
## 240          0          0          0          0          0          0
## 239          0          0          0          0          0          0
## 236          0          2          0          0          0          0
## 235          0          0          0          0          0          0
## 234          0          0          0          0          0          0
##     2020-01-29 2020-01-30 2020-01-31 2020-02-01 2020-02-02 2020-02-03
## 241          0          0          0          0          0          0
## 240          0          0          0          0          0          0
## 239          0          0          0          0          0          0
## 236          0          0          3          0          2          1
## 235          0          0          0          0          0          0
## 234          0          0          0          0          0          0
##     2020-02-04 2020-02-05 2020-02-06 2020-02-07 2020-02-08 2020-02-09
## 241          0          0          0          0          0          0
## 240          0          0          0          0          0          0
## 239          0          0          0          0          0          0
## 236          1          1          0          2          1          1
## 235          0          0          0          0          0          0
## 234          0          0          0          0          0          0
##     2020-02-10 2020-02-11 2020-02-12 2020-02-13 2020-02-14 2020-02-15
## 241          0          0          0          0          0          0
## 240          0          0          0          0          0          0
## 239          0          0          0          0          0          0
## 236          0          1          0          1          0          0
## 235          0          0          0          0          0          0
## 234          0          0          0          0          0          0
##     2020-02-16 2020-02-17 2020-02-18 2020-02-19 2020-02-20 2020-02-21
## 241          0          0          0          0          0          0
## 240          0          0          0          0          0          0
## 239          0          0          0          0          0          0
## 236          0          0          0          0          0          0
## 235          0          0          0          0          0          0
## 234          0          0          0          0          0          0
##     2020-02-22 2020-02-23 2020-02-24 2020-02-25 2020-02-26 2020-02-27
## 241          0          0          0          0          0          0
## 240          0          0          0          0          0          0
## 239          0          0          0          0          0          0
## 236          0          0          0          0          0          0
## 235          0          0          0          0          0          0
## 234          0          0          0          0          0          0
##     2020-02-28 2020-02-29 2020-03-01 2020-03-02 2020-03-03 2020-03-04
## 241          0          0          0          0          0          0
## 240          0          0          0          0          0          0
## 239          0          0          0          0          0          0
## 236          0          0          0          0          0          0
## 235          0          0          0          0          0          0
## 234          0          0          0          0          0          0
##     2020-03-05 2020-03-06 2020-03-07 2020-03-08 2020-03-09 2020-03-10
## 241          0          0          0          0          0          0
## 240          0          0          0          0          0          0
## 239          0          0          0          0          0          0
## 236          0          0          1          4          9          1
## 235          0          0          0          0          0          0
## 234          0          0          0          0          0          0
##     2020-03-11 2020-03-12 2020-03-13 2020-03-14 2020-03-15 2020-03-16
## 241          0          0          0          0          0          0
## 240          0          0          0          0          0          0
## 239          0          0          0          0          0          0
## 236          4          4          5          5          4          4
## 235          0          0          0          0         10          5
## 234          0          0          0          0          0          0
##     2020-03-17 2020-03-18 2020-03-19 2020-03-20 2020-03-21 2020-03-22
## 241          0          0          0          0          1          1
## 240          0          0          2          0          0          0
## 239          0          0          0          0          0          0
## 236          4          0         15          9          2          7
## 235         18          0          0          0          3          0
## 234          0          0          0          0          0          0
##     2020-03-23 2020-03-24 2020-03-25 2020-03-26 2020-03-27 2020-03-28
## 241          0          0          0          1          0          2
## 240          1          0          0          9          2          2
## 239          0          0          0          0          0          0
## 236         24          5         11         14          5         16
## 235          0         48          7         15          1         12
## 234          0          0          0          0          0          0
##     2020-03-29 2020-03-30 2020-03-31 2020-04-01 2020-04-02 2020-04-03
## 241          2          0          0          1          0          0
## 240         12          1          6          0          1          3
## 239          0          0          0          0          0          0
## 236         54          5          1          0          6          4
## 235          0          0         16          0          8          1
## 234          0          0          0          0          0          0
##     2020-04-04 2020-04-05 2020-04-06 2020-04-07 2020-04-08 2020-04-09
## 241          1          0          0          0          1          1
## 240          0          0          0          0          0          0
## 239          0          0          0          0          0          0
## 236          0          1          1          4          6          0
## 235          0          0          4         11          7          1
## 234          0          0          0          0          0          0
##     2020-04-10 2020-04-11 2020-04-12 2020-04-13 2020-04-14 2020-04-15
## 241          0          0          3          0          3          0
## 240          0          1          0          3          2          0
## 239          1          0          0          0          0          0
## 236          4          2          1          4          3          9
## 235          4          4          0          6          8          4
## 234          0          0          0          0          0          0
##     2020-04-16 2020-04-17
## 241          6          1
## 240          3          0
## 239          0          0
## 236          1          0
## 235          4          7
## 234          0          0
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;변환하고 합친 데이터가 이렇게 정렬된 것을 볼 수 있다. 참고로 위 데이터는 각 나라별 확진자 수 데이터를 보여주는 것이다.&lt;/p&gt;
&lt;p&gt;이제 &lt;code&gt;flexdashboard&lt;/code&gt;를 활용해서 지도 시각화를 진행해보자. 코드가 어려운 것은 아니다. 다만, &lt;code&gt;reactive&lt;/code&gt;에 대한 개념이 없으면 문법이 달라서 조금 고생할 수 있다.&lt;/p&gt;
&lt;h2 id=&#34;iv-시각화-코드&#34;&gt;IV. 시각화 코드&lt;/h2&gt;
&lt;h3 id=&#34;1-sliderinput&#34;&gt;(1) sliderInput&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Inputs&lt;/code&gt; 탭에 아래와 같이 코드를 입력한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# to control speed, plus looping&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;sliderInput&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dayRange&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Looping Animation:&amp;#34;&lt;/span&gt;,
             min &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;min&lt;/span&gt;(corona_date), max &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;max&lt;/span&gt;(corona_date),
             value &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;median&lt;/span&gt;(corona_date)), step &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;, 
             animate &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;animationOptions&lt;/span&gt;(interval &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2000&lt;/span&gt;, loop &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;소스코드에 대한 설명은 다음과 같다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;dateRange&lt;/code&gt; : &lt;code&gt;inputID&lt;/code&gt;이며, 날짜 데이터를 받는다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Looping Animation:&lt;/code&gt; &lt;code&gt;sliderInput&lt;/code&gt; 표시글이다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;min&lt;/code&gt;, &lt;code&gt;max&lt;/code&gt;: 날짜의 범위를 최소값과 최대값을 나타낸다. &lt;code&gt;corona_date&lt;/code&gt;는 데이터의 수집 날짜로 &lt;code&gt;vector&lt;/code&gt;로 구성되어 있다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;value:&lt;/code&gt; 처음 &lt;code&gt;ShinyApp&lt;/code&gt;이 실행되었을 때 나타내는 초기값이다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;step:&lt;/code&gt; 1~100까지 vector가 존재할 때, 건너뛰는 단위를 나타낸다. 무언가 극적인 변화를 보여줄 때, 쓰면 좋다. 강사는 25로 지정했다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;animate:&lt;/code&gt; 차트 애니메이션 작동 방식을 의미하며, &lt;code&gt;step&lt;/code&gt;에 따라 데이터가 바뀐다. &lt;code&gt;intervals&lt;/code&gt; 시간, &lt;code&gt;loop&lt;/code&gt;는 자동으로 계속 &lt;code&gt;step&lt;/code&gt;을 돌릴 것인지 &lt;code&gt;TRUE&lt;/code&gt; 또는 &lt;code&gt;FALSE&lt;/code&gt;에 따라 달라진다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-날짜-데이터-다루기&#34;&gt;(2) 날짜 데이터 다루기&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_04/&#34;&gt;세계 인구 지도 차트&lt;/a&gt; 작성했을 때의 코드를 기억하였으면 좋겠다. 왜냐하면 많이 바뀌지 않기 때문이다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 색상, 범례에 사용할 것&lt;/span&gt;
mybins &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;500&lt;/span&gt;,&lt;span style=&#34;color:#66d9ef&#34;&gt;Inf&lt;/span&gt;)
mypalette &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;colorBin&lt;/span&gt;(palette&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;YlOrBr&amp;#34;&lt;/span&gt;, domain&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;countries&lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;data&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;POP_EST, na.color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;transparent&amp;#34;&lt;/span&gt;, bins&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mybins)

&lt;span style=&#34;color:#75715e&#34;&gt;# 국가 클릭 시, 아래 내용으로 출력&lt;/span&gt;
mytext &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;paste&lt;/span&gt;(
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Country: &amp;#34;&lt;/span&gt;, countries&lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;data&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;NAME_EN,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;br/&amp;gt;&amp;#34;&lt;/span&gt;, 
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Area:  &amp;#34;&lt;/span&gt;, countries&lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;data&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;CONTINENT, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;br/&amp;gt;&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Population: &amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;round&lt;/span&gt;(countries&lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;data&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;POP_EST, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;),
  sep&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;lapply&lt;/span&gt;(htmltools&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;HTML)

&lt;span style=&#34;color:#75715e&#34;&gt;# 마지막으로 Mapping&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;leaflet&lt;/span&gt;(countries) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;addTiles&lt;/span&gt;()  &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;setView&lt;/span&gt;( lat&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;, lng&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; , zoom&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;addPolygons&lt;/span&gt;( 
    fillColor &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mypalette&lt;/span&gt;(POP_EST), 
    weight &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,
    opacity &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,
    color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;white&amp;#34;&lt;/span&gt;,
    dashArray &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;3&amp;#34;&lt;/span&gt;,
    fillOpacity &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.7&lt;/span&gt;,
    highlight &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;highlightOptions&lt;/span&gt;(
      weight &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,
      color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#666&amp;#34;&lt;/span&gt;,
      dashArray &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;,
      fillOpacity &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.7&lt;/span&gt;,
      bringToFront &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;),
    label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mytext,
    labelOptions &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;labelOptions&lt;/span&gt;(
      style &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;font-weight&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;normal&amp;#34;&lt;/span&gt;, padding &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2px 7px&amp;#34;&lt;/span&gt;),
      textsize &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;13px&amp;#34;&lt;/span&gt;,
      direction &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;auto&amp;#34;&lt;/span&gt;
    )
  ) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;addLegend&lt;/span&gt;(pal&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;mypalette, values&lt;span style=&#34;color:#f92672&#34;&gt;=~&lt;/span&gt;POP_EST, opacity&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.9&lt;/span&gt;, title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Population (M)&amp;#34;&lt;/span&gt;, position &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bottomleft&amp;#34;&lt;/span&gt; )
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;여기서 바꿔야 하는 코드는 무엇일까? 인구 대신 확진자 수 데이터만 대입하면 된다. 그런데 문제가 있다. 날짜가 바뀔때마다 확진수도 바뀌어야 한다. 그렇지 않은가? 그래야 의미가 있기 때문이다. 즉, 여기서 고민해야 하는 것은 프로세스이다.&lt;/p&gt;
&lt;p&gt;순서대로 고민해보자.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;첫번째, 날짜가 바뀐다.&lt;/li&gt;
&lt;li&gt;두번째, 바뀐 날짜를 문자열 변수로 저장한다.&lt;/li&gt;
&lt;li&gt;세번째, 저장된 변수를 활용하여 데이터의 &lt;code&gt;Column&lt;/code&gt;를 선택한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;위와 같은 Workflow대로 작업하면 된다.&lt;/p&gt;
&lt;p&gt;세번째의 개념을 좀더 돕고자 아래 소스코드를 예제로 들어본다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;indicator &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2020-03-10&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;data.frame&lt;/span&gt;(date &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; indicator,
           country &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; countries2&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;NAME, 
           Confirmed &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; countries2[[indicator]],
           Pop &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; countries2&lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;data&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;Pop) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;arrange&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;desc&lt;/span&gt;(Confirmed)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;head&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;##          date     country Confirmed       Pop
## 1  2020-03-10       Italy      1797 62.137802
## 2  2020-03-10       Spain       615 48.958159
## 3  2020-03-10        Iran       595 82.021564
## 4  2020-03-10      France       286 67.106161
## 5  2020-03-10     Germany       237 80.594017
## 6  2020-03-10     Denmark        75  5.605948
## 7  2020-03-10 Netherlands        56 17.084719
## 8  2020-03-10      Sweden        45  9.960487
## 9  2020-03-10 Switzerland        42  8.236303
## 10 2020-03-10     Belgium        39 11.491346
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;여기에서 주목해야 하는 코드는 &lt;code&gt;countries2[[indicator]]&lt;/code&gt; 이 코드이다. 이번에는 corona_date의 값을 바꿔서 실제로 값이 들어오는 것처럼 적용한다. 이 때에는 &lt;code&gt;max(corona_date)&lt;/code&gt;값을 가져온다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;indicator &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;max&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(corona_date))
&lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;paste0&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;현재 날짜: &amp;#34;&lt;/span&gt;, indicator))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;현재 날짜: 2020-04-17&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;data.frame&lt;/span&gt;(date &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; indicator,
           country &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; countries2&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;NAME, 
           Confirmed &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; countries2[[indicator]],
           Pop &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; countries2&lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;data&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;Pop) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;arrange&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;desc&lt;/span&gt;(Confirmed)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;head&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;##          date country Confirmed       Pop
## 1  2020-04-17   Spain      5183  48.95816
## 2  2020-04-17  Turkey      4801  80.84521
## 3  2020-04-17   Italy      3786  62.13780
## 4  2020-04-17  Russia      3448 142.25752
## 5  2020-04-17 Germany      3380  80.59402
## 6  2020-04-17  France      2641  67.10616
## 7  2020-04-17  Brazil      2105 207.35339
## 8  2020-04-17  Canada      1717  35.62368
## 9  2020-04-17    Iran      1606  82.02156
## 10 2020-04-17 Belgium      1236  11.49135
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;데이터가 수집된 4월 17일 기준으로 값이 바뀌는 것을 알 수 있다. 위와 같은 방법으로 모두 수정해주면 끝이다.&lt;/p&gt;
&lt;h3 id=&#34;3-지도-차트-완성하기&#34;&gt;(3) 지도 차트 완성하기&lt;/h3&gt;
&lt;p&gt;이제 지도차트를 작성하는데, 이 때에는 &lt;code&gt;renderLeaflet({})&lt;/code&gt; 함수를 사용하는데, 그 이유는 &lt;code&gt;reactive()&lt;/code&gt; 객체를 다루기 때문이다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sliderInput()&lt;/code&gt; 에 입력되는 데이터를 받아서 사용하려면 &lt;code&gt;reactive()&lt;/code&gt; 객체로 변환해야 해서 적용해야 하기 때문에 이 부분만 주의하면 된다. (일종의 &lt;code&gt;shiny&lt;/code&gt; 문법이라 이해하였으면 좋겠다.)&lt;/p&gt;
&lt;p&gt;날짜 데이터 다루는 방법을 &lt;code&gt;shiny에 적용하면&lt;/code&gt; 아래 코드와 같다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;dayRange &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;renderText&lt;/span&gt;({ &lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(input&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;dayRange) })
  indicator &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dayRange&lt;/span&gt;()
  &lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt;(indicator)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;print(indicator)&lt;/code&gt;이 값은 &lt;code&gt;step&lt;/code&gt;이 바뀔 때마다 다른 날짜가 주기적으로 입력될 것이다.&lt;/p&gt;
&lt;p&gt;기존에 진행했던 소스코드 &lt;code&gt;POP_EST&lt;/code&gt;를 찾아서, &lt;code&gt;countries2[[indicator]]&lt;/code&gt;로 모두 수정한다. 그리고, &lt;code&gt;mytext&lt;/code&gt;에서도 &amp;ldquo;NewCases: &amp;ldquo;, round(countries2[[indicator]], 0),
sep=&amp;rdquo;&amp;quot;) 코드를 추가하여 보완하도록 한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;renderLeaflet&lt;/span&gt;({
  dayRange &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;renderText&lt;/span&gt;({ &lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(input&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;dayRange) })
  indicator &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dayRange&lt;/span&gt;()
  &lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt;(indicator)

&lt;span style=&#34;color:#75715e&#34;&gt;# 색상, 범례에 사용할 것&lt;/span&gt;
mybins &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;500&lt;/span&gt;,&lt;span style=&#34;color:#66d9ef&#34;&gt;Inf&lt;/span&gt;)
mypalette &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;colorBin&lt;/span&gt;(palette&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;YlOrBr&amp;#34;&lt;/span&gt;, domain&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;countries2[[indicator]], na.color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;transparent&amp;#34;&lt;/span&gt;, bins&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mybins)

&lt;span style=&#34;color:#75715e&#34;&gt;# Prepare the text for tooltips:&lt;/span&gt;
mytext &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;paste&lt;/span&gt;(
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Country: &amp;#34;&lt;/span&gt;, countries2&lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;data&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;NAME_EN,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;br/&amp;gt;&amp;#34;&lt;/span&gt;, 
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Area:  &amp;#34;&lt;/span&gt;, countries2&lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;data&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;CONTINENT, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;br/&amp;gt;&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Population: &amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;round&lt;/span&gt;(countries2&lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;data&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;POP_EST, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;), &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;br/&amp;gt;&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;NewCases: &amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;round&lt;/span&gt;(countries2[[indicator]], &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;),
  sep&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;lapply&lt;/span&gt;(htmltools&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;HTML)
  
  &lt;span style=&#34;color:#a6e22e&#34;&gt;leaflet&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;map&amp;#34;&lt;/span&gt;, data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; countries2) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;addTiles&lt;/span&gt;()  &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;setView&lt;/span&gt;(lat&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;, lng&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; , zoom&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;addPolygons&lt;/span&gt;( 
    fillColor &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mypalette&lt;/span&gt;(countries2[[indicator]]), 
    weight &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,
    opacity &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,
    color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;white&amp;#34;&lt;/span&gt;,
    dashArray &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;3&amp;#34;&lt;/span&gt;,
    fillOpacity &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.7&lt;/span&gt;,
    highlight &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;highlightOptions&lt;/span&gt;(
      weight &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,
      color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#666&amp;#34;&lt;/span&gt;,
      dashArray &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;,
      fillOpacity &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.7&lt;/span&gt;,
      bringToFront &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;),
    label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mytext,
    labelOptions &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;labelOptions&lt;/span&gt;(
      style &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;font-weight&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;normal&amp;#34;&lt;/span&gt;, padding &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2px 7px&amp;#34;&lt;/span&gt;),
      textsize &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;13px&amp;#34;&lt;/span&gt;,
      direction &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;auto&amp;#34;&lt;/span&gt;
    )
  ) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  leaflet&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;addLegend&lt;/span&gt;(pal &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mypalette, values&lt;span style=&#34;color:#f92672&#34;&gt;=~&lt;/span&gt;countries2[[indicator]], opacity&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.9&lt;/span&gt;, title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Population (M)&amp;#34;&lt;/span&gt;, position &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bottomleft&amp;#34;&lt;/span&gt; )
  
})
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Output은 유투브 영상을 통해 확인한다.&lt;/p&gt;
&lt;h3 id=&#34;4-유투브-sample&#34;&gt;(4) 유투브 Sample&lt;/h3&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/BB9osH5Cdwg?autoplay=1&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id=&#34;v-결론&#34;&gt;V. 결론&lt;/h2&gt;
&lt;p&gt;이제 최종버전만 남았다. 3개의 동적 대시보드를 하나로 합치는 작업만 남았는데, 이 부분은 수강생의 과제로 남겨둔다. 전체코드는 강사가 게시한 &lt;a href=&#34;https://chloevan.shinyapps.io/COVID_19_Project/&#34;&gt;ShinyApp&lt;/a&gt;에서 확인하기를 바란다 (참고: 가급적 PC에서 보기를 바란다.)&lt;/p&gt;
&lt;p&gt;이글을 읽는 사람들에게 작게나마 도움이 되기를 바란다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Pray for Victims of Covid_19. Contribution to them with this tutorial.&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Corona Shiny Project 6_1 - 데이터 전처리</title>
      <link>https://chloevan.github.io/r/shiny/project_06_01/</link>
      <pubDate>Tue, 14 Apr 2020 10:15:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/shiny/project_06_01/</guid>
      <description>&lt;h2 id=&#34;공지&#34;&gt;공지&lt;/h2&gt;
&lt;p&gt;이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다&lt;/p&gt;
&lt;p&gt;이번에 준비한 Tutorial 코로나 세계현황을 &lt;code&gt;Shiny Dashboard&lt;/code&gt;로 만들어 가는 과정을 담았다.&lt;/p&gt;
&lt;h2 id=&#34;i-shiny-tutorial-소개&#34;&gt;I. Shiny Tutorial 소개&lt;/h2&gt;
&lt;p&gt;처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_01/&#34;&gt;shiny tutorial 01 - get started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_02/&#34;&gt;shiny tutorial 02 - Shiny Structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_03/&#34;&gt;shiny tutorial 03 - HTML content&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_04/&#34;&gt;shiny tutorial 04 - Shiny Layouts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_05/&#34;&gt;shiny tutorial 05 - Sharing Apps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_06/&#34;&gt;shiny tutorial 06 - shinydashboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_07/&#34;&gt;shiny tutorial 07 - flexdashboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_08/&#34;&gt;shiny tutorial 08 - HTML, CSS 적용&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ii-shiny-project&#34;&gt;II. Shiny Project&lt;/h2&gt;
&lt;p&gt;현재 진행중인 프로젝트가 궁금하다면 아래를 확인해보자.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_01/&#34;&gt;Corona Shiny Project 1 - Get Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_02/&#34;&gt;Corona Shiny Project 2 - Visusalization (Time Series)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_03/&#34;&gt;Corona Shiny Project 3 - Visusalization (Bubble Chart)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_04/&#34;&gt;Corona Shiny Project 4 - Visusalization (Map Chart)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_05/&#34;&gt;Corona Shiny Project 5 - Chart with DateInput&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;iii-생각해볼-문제&#34;&gt;III. 생각해볼 문제&lt;/h2&gt;
&lt;p&gt;생각해볼 문제, &lt;code&gt;sliderInput&lt;/code&gt;의 기능을 활용한다는 것의 의미는 매일매일 데이터가 변화하는 것을 확인하는 것에 의미가 있다. 누적데이터가 중요한지, 아니면 매일매일 업데이트된 데이터가 중요한지에 따라 대시보드의 성격이 달라진다.&lt;/p&gt;
&lt;p&gt;우선, 누적데이터는 &lt;code&gt;line Graph&lt;/code&gt;를 통해서 한번 보여줬기 때문에, 여기에서는 생략하겠다.&lt;/p&gt;
&lt;p&gt;날짜가 변화할 때마다 국가별 &lt;code&gt;Case&lt;/code&gt;가 달라지는 과정을 보여주고자 한다. 그런데, 문제가 있다.&lt;/p&gt;
&lt;h2 id=&#34;iv-데이터-처리의-문제점&#34;&gt;IV. 데이터 처리의 문제점&lt;/h2&gt;
&lt;p&gt;이 튜토리얼을 계속 따라왔다면, 다양한 데이터셋이 사용되고 있음을 알 수 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;corona 데이터셋&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;지도 데이터셋&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;지도 데이터셋은 &lt;code&gt;sp&lt;/code&gt;라는 특별한 객체로 이루어져 있고, 이미 깔끔하게 국가별 지도 &lt;code&gt;mapping&lt;/code&gt;까지 완료된 데이터셋이다.&lt;/p&gt;
&lt;p&gt;그럼 여기에서 기준이 데이터셋이 무엇일까? 당연히 &lt;code&gt;지도 데이터셋&lt;/code&gt;이다. 강사가 시간을 가장 많이 허비한 포인트가 이 지점이다. 이 글을 읽는 사람은 그러려니 하겠지만, 사실 매우 중요하다. 왜냐하면, 지도가 &lt;code&gt;Plotting&lt;/code&gt; 되지 않는다!&lt;/p&gt;
&lt;h2 id=&#34;1-지도-데이터셋에-포함된-국가의-숫자&#34;&gt;(1) 지도 데이터셋에 포함된 국가의 숫자&lt;/h2&gt;
&lt;p&gt;우선 지도 데이터셋을 좀 더 면밀히 확인해보자.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(rgdal)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## Loading required package: sp
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;## rgdal: version: 1.4-8, (SVN revision 845)
##  Geospatial Data Abstraction Library extensions to R successfully loaded
##  Loaded GDAL runtime: GDAL 2.4.2, released 2019/06/28
##  Path to GDAL shared files: /Library/Frameworks/R.framework/Versions/3.6/Resources/library/rgdal/gdal
##  GDAL binary built with GEOS: FALSE 
##  Loaded PROJ.4 runtime: Rel. 5.2.0, September 15th, 2018, [PJ_VERSION: 520]
##  Path to PROJ.4 shared files: /Library/Frameworks/R.framework/Versions/3.6/Resources/library/rgdal/proj
##  Linking to sp version: 1.3-2
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;countries &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;readOGR&lt;/span&gt;(dsn &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;~/Desktop/ne_50m_admin_0_countries&amp;#34;&lt;/span&gt;,
                     layer &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ne_50m_admin_0_countries&amp;#34;&lt;/span&gt;,
                     encoding &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;utf-8&amp;#34;&lt;/span&gt;,use_iconv &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; T,
                     verbose &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;)

&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;unique&lt;/span&gt;(countries&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;NAME))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## [1] 241
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;우선 241개로 확인이 된다.&lt;/p&gt;
&lt;h2 id=&#34;2-corona-데이터셋-국가의-숫자&#34;&gt;(2) corona 데이터셋 국가의 숫자&lt;/h2&gt;
&lt;p&gt;이번에는 다운로드 엑셀 파일을 Import 하여 실제 국가의 숫자가 몇개인지 확인해본다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(readxl)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(httr)

&lt;span style=&#34;color:#75715e&#34;&gt;# URL Copy&lt;/span&gt;
url &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://www.ecdc.europa.eu/sites/default/files/documents/COVID-19-geographic-disbtribution-worldwide.xlsx&amp;#39;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# 파일 이름만 가져오기&lt;/span&gt;
getFileName &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;basename&lt;/span&gt;(url)

&lt;span style=&#34;color:#75715e&#34;&gt;# 지정된 디렉토리에 파일 다운로드 받기&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;download.file&lt;/span&gt;(url &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; url, destfile &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; getFileName)

&lt;span style=&#34;color:#75715e&#34;&gt;# 지정된 디렉토리에서 파일 업로드 하기&lt;/span&gt;
corona &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;read_excel&lt;/span&gt;(getFileName)
&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;unique&lt;/span&gt;(corona&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;countriesAndTerritories))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## [1] 206
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;일단 &lt;code&gt;countries&lt;/code&gt; 데이터셋의 국가의 숫자와 &lt;code&gt;corona&lt;/code&gt; 데이터셋의 국가의 숫자가 다른 것이 눈에 띈다.&lt;/p&gt;
&lt;p&gt;어떻게 해결 할 것인가? 하는 문제점이 발생한다.&lt;/p&gt;
&lt;h2 id=&#34;3-동일-국가이나-기재된-값이-상호-다른-경우&#34;&gt;(3) 동일 국가이나 기재된 값이 상호 다른 경우&lt;/h2&gt;
&lt;p&gt;우선 &lt;code&gt;U&lt;/code&gt;로 시작하는 국가를 양쪽에서 추출한 후 비교해보자.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(dplyr)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &#39;dplyr&#39;
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;## The following objects are masked from &#39;package:stats&#39;:
## 
##     filter, lag
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;## The following objects are masked from &#39;package:base&#39;:
## 
##     intersect, setdiff, setequal, union
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(stringr)
country_names &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(countries&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;NAME)
corona_names &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;unique&lt;/span&gt;(corona&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;countriesAndTerritories))

&lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;data.frame&lt;/span&gt;(
  from_countries &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(country_names&lt;span style=&#34;color:#a6e22e&#34;&gt;[str_detect&lt;/span&gt;(country_names, pattern &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^U&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;], &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;empty&amp;#34;&lt;/span&gt;), 
  from_corona &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; corona_names&lt;span style=&#34;color:#a6e22e&#34;&gt;[str_detect&lt;/span&gt;(corona_names, pattern &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^U&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;]
))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;##             from_countries                  from_corona
## 1               Uzbekistan                       Uganda
## 2                  Uruguay                      Ukraine
## 3          U.S. Virgin Is.         United_Arab_Emirates
## 4 United States of America               United_Kingdom
## 5           United Kingdom  United_Republic_of_Tanzania
## 6     United Arab Emirates     United_States_of_America
## 7                  Ukraine United_States_Virgin_Islands
## 8                   Uganda                      Uruguay
## 9                    empty                   Uzbekistan
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;위 데이터에서 볼 수 있는 것처럼, 똑같은 미국이지만, 표기법이 다르다. (강사의 혼잣말, 고치는 방법이 있기는 하다. 그런데, 쉽지가 않다! 강의의 본질은 고생은 수강생이 하는게 아니라 원래 강의 준비하는 사람이 하는거다!)&lt;/p&gt;
&lt;p&gt;우선 진행방법은 아래와 같다. 여기에서 국가명을 고쳐야 하는 건, &lt;code&gt;corona&lt;/code&gt; 데이터셋이다.&lt;/p&gt;
&lt;p&gt;수정하는 방법은 아래와 같다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(dplyr)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(stringr)

corona&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;countriesAndTerritories[corona&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;countriesAndTerritories &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;United_Arab_Emirates&amp;#34;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;United Arab Emirates&amp;#34;&lt;/span&gt;
corona&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;countriesAndTerritories[corona&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;countriesAndTerritories &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;United_States_Virgin_Islands&amp;#34;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;U.S. Virgin Is.&amp;#34;&lt;/span&gt;
corona&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;countriesAndTerritories[corona&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;countriesAndTerritories &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;United_States_of_America&amp;#34;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;United States of America&amp;#34;&lt;/span&gt;
corona&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;countriesAndTerritories[corona&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;countriesAndTerritories &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;United_Republic_of_Tanzania&amp;#34;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;empty&amp;#34;&lt;/span&gt;

country_names &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sort&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(countries&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;NAME), decreasing &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;)
corona_names &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sort&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;unique&lt;/span&gt;(corona&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;countriesAndTerritories)), decreasing &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;)

&lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;data.frame&lt;/span&gt;(
  from_countries &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(country_names&lt;span style=&#34;color:#a6e22e&#34;&gt;[str_detect&lt;/span&gt;(country_names, pattern &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^U&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;]), 
  from_corona &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; corona_names&lt;span style=&#34;color:#a6e22e&#34;&gt;[str_detect&lt;/span&gt;(corona_names, pattern &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^U&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;]
))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;##             from_countries              from_corona
## 1               Uzbekistan               Uzbekistan
## 2                  Uruguay                  Uruguay
## 3 United States of America           United_Kingdom
## 4           United Kingdom United States of America
## 5     United Arab Emirates     United Arab Emirates
## 6                  Ukraine                  Ukraine
## 7                   Uganda                   Uganda
## 8          U.S. Virgin Is.          U.S. Virgin Is.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;위와 같은 방식으로 일일이 수정해야 한다! 갑자기 머리가 아파온다. 원래 데이터싸이언티스트는 &lt;code&gt;80%의 잡무&lt;/code&gt;와 &lt;code&gt;20%의 우아함&lt;/code&gt;으로 이루어진다고 한다. 이런일을 즐거워 해야 한다. 걱정마시라, 이미 데이터 전처리 된 데이터는 별도로 &lt;code&gt;URL&lt;/code&gt;을 알려줄 것이다.&lt;/p&gt;
&lt;h2 id=&#34;4-corona-데이터-가공하기&#34;&gt;(4) corona 데이터 가공하기&lt;/h2&gt;
&lt;p&gt;여전히 한가지 더 큰 어려움이 있다. &lt;code&gt;241&lt;/code&gt;개의 데이터셋을 맞춰야 한다. 그런데, &lt;code&gt;countries@data&lt;/code&gt;의 행은 &lt;code&gt;241&lt;/code&gt;개이지만, &lt;code&gt;corona&lt;/code&gt;의 행은 &lt;code&gt;206&lt;/code&gt;개이다. 어떻게 맞춰야 할까?&lt;/p&gt;
&lt;p&gt;우선, corona데이터를 넓게 할 필요가 있다. 이유는 국가가 기준이기 때문이다. 즉, 국가가 첫번째 열에 오면 더 좋다.&lt;/p&gt;
&lt;p&gt;이 때, 우리에게 필요한 지식은 &lt;code&gt;tidyr 패키지의 gather &amp;amp; spread&lt;/code&gt; 함수의 사용법이다. 자세한 설명이 필요하면 &lt;a href=&#34;https://tidyr.tidyverse.org/&#34;&gt;tidyr&lt;/a&gt;에서 확인해보자.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(dplyr)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(tidyr)

corona &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;select&lt;/span&gt;(dateRep, countriesAndTerritories, cases) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 필요한 열만 추출한다. &lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;group_by_at&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;vars&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;cases)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# cases를 제외하고 모두 그룹을 한다는 뜻이다. &lt;/span&gt;
  dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(row_id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;n&lt;/span&gt;()) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ungroup&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# 그룹 인덱스를 만든다.&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;spread&lt;/span&gt;(key&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;dateRep, value&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;cases) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# &lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;select&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;row_id) &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; dataCases &lt;span style=&#34;color:#75715e&#34;&gt;# 인덱스 제거 후 corona2로 저장한다. &lt;/span&gt;

&lt;span style=&#34;color:#a6e22e&#34;&gt;glimpse&lt;/span&gt;(dataCases)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## Rows: 206
## Columns: 107
## $ countriesAndTerritories &amp;lt;chr&amp;gt; &amp;quot;Afghanistan&amp;quot;, &amp;quot;Albania&amp;quot;, &amp;quot;Algeria&amp;quot;, &amp;quot;Andorra…
## $ `2019-12-31`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-01-01`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-01-02`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-01-03`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-01-04`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-01-05`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-01-06`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-01-07`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-01-08`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-01-09`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-01-10`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-01-11`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-01-12`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-01-13`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-01-14`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-01-15`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-01-16`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-01-17`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-01-18`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-01-19`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-01-20`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-01-21`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-01-22`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-01-23`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-01-24`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-01-25`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 1, 0, 0,…
## $ `2020-01-26`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 3, 0, 0,…
## $ `2020-01-27`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-01-28`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-01-29`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-01-30`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 2, 0, 0,…
## $ `2020-01-31`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 1, 0, 0,…
## $ `2020-02-01`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 2, 0, 0,…
## $ `2020-02-02`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 2, 0, 0,…
## $ `2020-02-03`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-02-04`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-02-05`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 1, 0, 0,…
## $ `2020-02-06`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 1, 0, 0,…
## $ `2020-02-07`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 1, 0, 0,…
## $ `2020-02-08`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-02-09`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-02-10`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-02-11`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-02-12`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-02-13`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-02-14`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 1, 0, 0,…
## $ `2020-02-15`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-02-16`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-02-17`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-02-18`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-02-19`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-02-20`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-02-21`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 2, 0, 0,…
## $ `2020-02-22`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 4, 0, 0,…
## $ `2020-02-23`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 1, 0, 0,…
## $ `2020-02-24`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-02-25`            &amp;lt;dbl&amp;gt; 1, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-02-26`            &amp;lt;dbl&amp;gt; 0, NA, 1, NA, NA, NA, NA, NA, 0, NA, 0, 2, 0,…
## $ `2020-02-27`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 1, 0, 0,…
## $ `2020-02-28`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 3, 0,…
## $ `2020-02-29`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 2, 2, 1,…
## $ `2020-03-01`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 1, NA, 1, 3, 0,…
## $ `2020-03-02`            &amp;lt;dbl&amp;gt; 0, NA, 2, NA, NA, NA, NA, NA, 0, NA, 3, 4, 2,…
## $ `2020-03-03`            &amp;lt;dbl&amp;gt; NA, NA, NA, 1, NA, NA, NA, NA, NA, NA, 4, 4, …
## $ `2020-03-04`            &amp;lt;dbl&amp;gt; NA, NA, 2, NA, NA, NA, NA, 1, NA, NA, 8, 6, N…
## $ `2020-03-05`            &amp;lt;dbl&amp;gt; NA, NA, 7, NA, NA, NA, NA, NA, NA, NA, 11, 5,…
## $ `2020-03-06`            &amp;lt;dbl&amp;gt; NA, NA, 5, NA, NA, NA, NA, 1, NA, NA, 7, 12, …
## $ `2020-03-07`            &amp;lt;dbl&amp;gt; NA, NA, NA, NA, NA, NA, NA, 6, NA, NA, 4, 33,…
## $ `2020-03-08`            &amp;lt;dbl&amp;gt; 3, NA, NA, NA, NA, NA, NA, 1, NA, NA, 11, 25,…
## $ `2020-03-09`            &amp;lt;dbl&amp;gt; NA, 2, 3, NA, NA, NA, NA, 3, NA, NA, 6, 3, NA…
## $ `2020-03-10`            &amp;lt;dbl&amp;gt; NA, 4, NA, NA, NA, NA, NA, NA, NA, NA, 20, 29…
## $ `2020-03-11`            &amp;lt;dbl&amp;gt; 3, 4, NA, NA, NA, NA, NA, 7, NA, NA, 12, 51, …
## $ `2020-03-12`            &amp;lt;dbl&amp;gt; NA, 1, 0, NA, NA, NA, NA, NA, 3, NA, 14, 64, …
## $ `2020-03-13`            &amp;lt;dbl&amp;gt; NA, 12, 4, NA, NA, NA, NA, 12, 2, 2, 30, 115,…
## $ `2020-03-14`            &amp;lt;dbl&amp;gt; NA, 10, 2, 1, NA, NA, NA, 3, 7, NA, 41, 143, …
## $ `2020-03-15`            &amp;lt;dbl&amp;gt; 3, 5, 11, NA, NA, NA, 1, 11, 7, NA, 52, 151, …
## $ `2020-03-16`            &amp;lt;dbl&amp;gt; 6, 4, 11, 3, NA, NA, NA, 11, 10, NA, 49, 205,…
## $ `2020-03-17`            &amp;lt;dbl&amp;gt; 5, 9, 12, 9, NA, NA, NA, 9, 22, NA, 77, 156, …
## $ `2020-03-18`            &amp;lt;dbl&amp;gt; 1, 4, 0, 0, NA, NA, NA, 14, 26, NA, 79, 316, …
## $ `2020-03-19`            &amp;lt;dbl&amp;gt; 0, 4, 13, 39, NA, NA, NA, 18, 37, NA, 111, 31…
## $ `2020-03-20`            &amp;lt;dbl&amp;gt; 0, 11, 9, 22, NA, NA, NA, 31, 7, 2, 144, 550,…
## $ `2020-03-21`            &amp;lt;dbl&amp;gt; 2, 0, 12, 0, NA, NA, 0, 30, 14, NA, 165, 453,…
## $ `2020-03-22`            &amp;lt;dbl&amp;gt; 0, 6, 0, 13, 2, NA, 0, 67, 24, NA, 224, 375, …
## $ `2020-03-23`            &amp;lt;dbl&amp;gt; 10, 13, 8, 25, 0, NA, 0, 41, 30, NA, 611, 607…
## $ `2020-03-24`            &amp;lt;dbl&amp;gt; 6, 11, 87, 20, 0, NA, 0, 35, 4, 8, 114, 855, …
## $ `2020-03-25`            &amp;lt;dbl&amp;gt; 2, 23, 42, 31, 0, NA, 2, 86, 71, 5, 600, 796,…
## $ `2020-03-26`            &amp;lt;dbl&amp;gt; 33, 23, 33, 24, 0, NA, 0, 115, 25, 2, 376, 60…
## $ `2020-03-27`            &amp;lt;dbl&amp;gt; 0, 28, 41, 36, 1, 2, 4, 87, 39, 9, 367, 1141,…
## $ `2020-03-28`            &amp;lt;dbl&amp;gt; 16, 12, 0, 43, 1, 0, 0, 101, 43, 0, 212, 668,…
## $ `2020-03-29`            &amp;lt;dbl&amp;gt; 15, 11, 104, 41, 0, 0, 0, 55, 52, 0, 431, 594…
## $ `2020-03-30`            &amp;lt;dbl&amp;gt; 8, 15, 45, 26, 3, 0, 0, 75, 0, 22, 284, 522, …
## $ `2020-03-31`            &amp;lt;dbl&amp;gt; 27, 11, 57, 36, 0, 0, 0, 146, 58, NA, 464, 80…
## $ `2020-04-01`            &amp;lt;dbl&amp;gt; 25, 20, 73, 6, 0, 0, 0, 0, 50, 5, 150, 564, 2…
## $ `2020-04-02`            &amp;lt;dbl&amp;gt; 26, 16, 263, 14, 1, 0, 0, 167, 39, 0, 269, 52…
## $ `2020-04-03`            &amp;lt;dbl&amp;gt; 43, 18, 0, 38, 0, 1, 2, 0, 92, 5, 248, 418, 4…
## $ `2020-04-04`            &amp;lt;dbl&amp;gt; 0, 27, 139, 11, 0, 0, 6, 132, 73, 2, 324, 396…
## $ `2020-04-05`            &amp;lt;dbl&amp;gt; 35, 29, 314, 27, 2, 0, 0, 186, 34, 2, 139, 24…
## $ `2020-04-06`            &amp;lt;dbl&amp;gt; 29, 28, 20, 35, 4, 0, 0, 103, 52, 0, 57, 217,…
## $ `2020-04-07`            &amp;lt;dbl&amp;gt; 38, 16, 103, 25, 2, 0, 0, 74, 11, 7, 100, 314…
## $ `2020-04-08`            &amp;lt;dbl&amp;gt; 30, 6, 45, 19, 1, 0, 0, 87, 20, 3, 112, 343, …
## $ `2020-04-09`            &amp;lt;dbl&amp;gt; 56, 17, 104, 19, 2, 0, 0, 80, 28, 3, 96, 329,…
## $ `2020-04-10`            &amp;lt;dbl&amp;gt; 61, 9, 94, 19, 0, 0, 4, 99, 40, 5, 100, 279, …
## $ `2020-04-11`            &amp;lt;dbl&amp;gt; 37, 7, 95, 18, 0, 0, 2, 81, 16, 4, 86, 312, 6…
## $ `2020-04-12`            &amp;lt;dbl&amp;gt; 34, 17, 64, 21, 0, 0, 0, 162, 30, 6, 51, 247,…
## $ `2020-04-13`            &amp;lt;dbl&amp;gt; 52, 13, 89, 16, 0, 0, 0, 66, 46, 0, 33, 130, …
## $ `2020-04-14`            &amp;lt;dbl&amp;gt; 58, 21, 69, 8, 0, 0, 2, 69, 26, 0, 44, 106, 5…
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;5-241개의-행으로-맞추기&#34;&gt;(5) 241개의 행으로 맞추기&lt;/h2&gt;
&lt;p&gt;이제 Table Join을 활용해야 한다. 이 때 조인키를 확인해야 한다. 그리고 countries 데이터셋에 맞추도록 한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;coronaConfirmed &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;left_join&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;data.frame&lt;/span&gt;(countries &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; countries&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;NAME &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(), 
                                   Pop &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; countries&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;POP_EST &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.numeric&lt;/span&gt;()), 
                        dataCases &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;rename&lt;/span&gt;(countries &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; countriesAndTerritories)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;filter&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;is.na&lt;/span&gt;(countries))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## Joining, by = &amp;quot;countries&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;## Warning: Column `countries` joining factor and character vector, coercing into
## character vector
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;glimpse&lt;/span&gt;(coronaConfirmed)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## Rows: 241
## Columns: 108
## $ countries    &amp;lt;chr&amp;gt; &amp;quot;Zimbabwe&amp;quot;, &amp;quot;Zambia&amp;quot;, &amp;quot;Yemen&amp;quot;, &amp;quot;Vietnam&amp;quot;, &amp;quot;Venezuela&amp;quot;, &amp;quot;…
## $ Pop          &amp;lt;dbl&amp;gt; 13805084, 15972000, 28036829, 96160163, 31304016, 1000, …
## $ `2019-12-31` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-01` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-02` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-03` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-04` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-05` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-06` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-07` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-08` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-09` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-10` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-11` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-12` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-13` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-14` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-15` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-16` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-17` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-18` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-19` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-20` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-21` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-22` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-23` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-24` &amp;lt;dbl&amp;gt; NA, NA, NA, 2, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-25` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-26` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-27` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-28` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-29` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-30` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-31` &amp;lt;dbl&amp;gt; NA, NA, NA, 3, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-02-01` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-02-02` &amp;lt;dbl&amp;gt; NA, NA, NA, 2, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-02-03` &amp;lt;dbl&amp;gt; NA, NA, NA, 1, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-02-04` &amp;lt;dbl&amp;gt; NA, NA, NA, 1, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-02-05` &amp;lt;dbl&amp;gt; NA, NA, NA, 1, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-02-06` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-02-07` &amp;lt;dbl&amp;gt; NA, NA, NA, 2, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-02-08` &amp;lt;dbl&amp;gt; NA, NA, NA, 1, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-02-09` &amp;lt;dbl&amp;gt; NA, NA, NA, 1, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-02-10` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-02-11` &amp;lt;dbl&amp;gt; NA, NA, NA, 1, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-02-12` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-02-13` &amp;lt;dbl&amp;gt; NA, NA, NA, 1, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-02-14` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-02-15` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-02-16` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-02-17` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-02-18` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-02-19` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-02-20` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-02-21` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-02-22` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-02-23` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-02-24` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-02-25` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-02-26` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-02-27` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-02-28` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-02-29` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-03-01` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-03-02` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-03-03` &amp;lt;dbl&amp;gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …
## $ `2020-03-04` &amp;lt;dbl&amp;gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …
## $ `2020-03-05` &amp;lt;dbl&amp;gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …
## $ `2020-03-06` &amp;lt;dbl&amp;gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …
## $ `2020-03-07` &amp;lt;dbl&amp;gt; NA, NA, NA, 1, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-03-08` &amp;lt;dbl&amp;gt; NA, NA, NA, 4, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-03-09` &amp;lt;dbl&amp;gt; NA, NA, NA, 9, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-03-10` &amp;lt;dbl&amp;gt; NA, NA, NA, 1, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-03-11` &amp;lt;dbl&amp;gt; NA, NA, NA, 4, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-03-12` &amp;lt;dbl&amp;gt; NA, NA, NA, 4, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-03-13` &amp;lt;dbl&amp;gt; NA, NA, NA, 5, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-03-14` &amp;lt;dbl&amp;gt; NA, NA, NA, 5, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-03-15` &amp;lt;dbl&amp;gt; NA, NA, NA, 4, 10, NA, NA, NA, 6, NA, NA, NA, NA, NA, NA…
## $ `2020-03-16` &amp;lt;dbl&amp;gt; NA, NA, NA, 4, 5, NA, NA, 6, 2, NA, NA, NA, NA, NA, NA, …
## $ `2020-03-17` &amp;lt;dbl&amp;gt; NA, NA, NA, 4, 18, NA, NA, 2, 21, NA, NA, NA, NA, NA, NA…
## $ `2020-03-18` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, 0, NA, NA, 8, 21, NA, NA, NA, NA, NA, NA,…
## $ `2020-03-19` &amp;lt;dbl&amp;gt; NA, 2, NA, 15, 0, NA, NA, 7, 29, NA, NA, NA, NA, 3, NA, …
## $ `2020-03-20` &amp;lt;dbl&amp;gt; NA, 0, NA, 9, 0, NA, NA, 0, 15, NA, NA, NA, NA, 9, NA, N…
## $ `2020-03-21` &amp;lt;dbl&amp;gt; 1, 0, NA, 2, 3, NA, NA, 10, 16, NA, NA, NA, NA, 2, NA, N…
## $ `2020-03-22` &amp;lt;dbl&amp;gt; 1, 0, NA, 7, 0, NA, NA, 0, 25, NA, NA, NA, NA, 1, NA, NA…
## $ `2020-03-23` &amp;lt;dbl&amp;gt; 0, 1, NA, 24, 0, NA, NA, 13, 23, NA, NA, NA, NA, 12, NA,…
## $ `2020-03-24` &amp;lt;dbl&amp;gt; 0, 0, NA, 5, 48, NA, NA, 3, 4, NA, NA, NA, 17, 2, NA, NA…
## $ `2020-03-25` &amp;lt;dbl&amp;gt; 0, 0, NA, 11, 7, NA, NA, 6, 27, NA, NA, NA, 0, 3, NA, NA…
## $ `2020-03-26` &amp;lt;dbl&amp;gt; 1, 9, NA, 14, 15, NA, NA, 10, 28, NA, NA, NA, 0, 5, NA, …
## $ `2020-03-27` &amp;lt;dbl&amp;gt; 0, 2, NA, 5, 1, NA, NA, 18, 21, NA, NA, NA, 0, 12, NA, N…
## $ `2020-03-28` &amp;lt;dbl&amp;gt; 2, 2, NA, 16, 12, NA, NA, 21, 0, NA, NA, NA, 2, 2, NA, N…
## $ `2020-03-29` &amp;lt;dbl&amp;gt; 2, 12, NA, 54, 0, NA, NA, 29, 66, NA, NA, NA, 3, 4, NA, …
## $ `2020-03-30` &amp;lt;dbl&amp;gt; 0, 1, NA, 5, 0, NA, NA, 12, 5, NA, NA, NA, 8, 1, NA, NA,…
## $ `2020-03-31` &amp;lt;dbl&amp;gt; 0, 6, NA, 1, 16, NA, NA, 4, 11, NA, NA, NA, NA, 4, NA, N…
## $ `2020-04-01` &amp;lt;dbl&amp;gt; 1, 0, NA, 0, 0, NA, NA, 24, 18, NA, NA, NA, 0, 9, NA, NA…
## $ `2020-04-02` &amp;lt;dbl&amp;gt; 0, 1, NA, 6, 8, NA, NA, 14, 0, NA, NA, NA, 0, 8, NA, NA,…
## $ `2020-04-03` &amp;lt;dbl&amp;gt; 0, 3, NA, 4, 1, NA, NA, 3, 31, NA, NA, NA, 3, 5, NA, NA,…
## $ `2020-04-04` &amp;lt;dbl&amp;gt; 1, 0, NA, 0, 0, NA, NA, 37, 17, NA, NA, NA, 7, 5, NA, NA…
## $ `2020-04-05` &amp;lt;dbl&amp;gt; 0, 0, NA, 1, 0, NA, NA, 39, 14, NA, NA, NA, 0, 6, NA, NA…
## $ `2020-04-06` &amp;lt;dbl&amp;gt; 0, 0, NA, 1, 4, NA, NA, 76, 6, NA, NA, NA, 2, 17, NA, NA…
## $ `2020-04-07` &amp;lt;dbl&amp;gt; 0, 0, NA, 4, 11, NA, NA, 55, 9, NA, NA, NA, 0, 2, NA, NA…
## $ `2020-04-08` &amp;lt;dbl&amp;gt; 1, 0, NA, 6, 7, NA, NA, 107, 9, NA, NA, NA, 3, 9, NA, NA…
## $ `2020-04-09` &amp;lt;dbl&amp;gt; 1, 0, NA, 0, 1, NA, NA, 51, 32, NA, NA, NA, 0, 4, NA, NA…
## $ `2020-04-10` &amp;lt;dbl&amp;gt; 0, 0, 1, 4, 4, NA, NA, 27, 17, NA, NA, NA, 5, 3, NA, NA,…
## $ `2020-04-11` &amp;lt;dbl&amp;gt; 0, 1, 0, 2, 4, NA, NA, 42, 21, NA, NA, NA, 0, 2, NA, NA,…
## $ `2020-04-12` &amp;lt;dbl&amp;gt; 3, 0, 0, 1, 0, NA, NA, 172, 7, NA, NA, NA, 1, 3, NA, NA,…
## $ `2020-04-13` &amp;lt;dbl&amp;gt; 0, 3, 0, 4, 6, NA, NA, 69, 11, NA, NA, NA, 0, 0, NA, NA,…
## $ `2020-04-14` &amp;lt;dbl&amp;gt; 3, 2, 0, 3, 8, NA, NA, 133, 9, NA, NA, NA, 0, 1, NA, NA,…
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;6-na값-처리하기&#34;&gt;(6) NA값 처리하기&lt;/h2&gt;
&lt;p&gt;국가 및 날짜별로 &lt;code&gt;case&lt;/code&gt;가 정리된 것을 확인할 수 있다. 아직 문제는 끝나지 않았다. 왜냐하면 &lt;code&gt;NA&lt;/code&gt;가 있기 때문이다. &lt;code&gt;NA&lt;/code&gt;가 포함된 부분은 모두 0으로 처리하자. 왜냐하면, 우리는 숫자로 표시해야 하기 때문에 &lt;code&gt;NA&lt;/code&gt;의 공백은 있을 수 없다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(ggplot2)

&lt;span style=&#34;color:#a6e22e&#34;&gt;sapply&lt;/span&gt;(coronaConfirmed[&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)],&lt;span style=&#34;color:#a6e22e&#34;&gt;function&lt;/span&gt;(x) &lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;is.na&lt;/span&gt;(x))) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as_tibble&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(date &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.Date&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;colnames&lt;/span&gt;(coronaConfirmed)[&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)])) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; date, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; value)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; 
    &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_line&lt;/span&gt;(size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1.5&lt;/span&gt;, color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;darkblue&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; 
    &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_minimal&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/coronaProject/project_06/project_01.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;NA&lt;/code&gt;값 처리에 관한 그래프를 작성한 것이다. 거의 모든 국가에서 발현되기 시작한 3월 이후부터는 &lt;code&gt;NA&lt;/code&gt;가 줄어드는 것을 확인할 수 있다. (아! 시각화 분석이 아니다! 빨리 돌아가서 NA를 처리하자)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;coronaConfirmed&lt;span style=&#34;color:#a6e22e&#34;&gt;[is.na&lt;/span&gt;(coronaConfirmed)] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;sapply&lt;/span&gt;(coronaConfirmed[&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)],&lt;span style=&#34;color:#a6e22e&#34;&gt;function&lt;/span&gt;(x) &lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;is.na&lt;/span&gt;(x))) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as_tibble&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(date &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.Date&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;colnames&lt;/span&gt;(coronaConfirmed)[&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)])) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; date, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; value)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; 
    &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_line&lt;/span&gt;(size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1.5&lt;/span&gt;, color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;darkblue&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; 
    &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_minimal&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/coronaProject/project_06/project_02.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;모든 &lt;code&gt;NA&lt;/code&gt;가 0으로 수렴되는 것을 볼 수 있다.&lt;/p&gt;
&lt;h2 id=&#34;7-데이터-저장&#34;&gt;(7) 데이터 저장&lt;/h2&gt;
&lt;p&gt;이렇게 전처리된 데이터를 다시 사용하기 위해, &lt;code&gt;csv&lt;/code&gt;, &lt;code&gt;Database&lt;/code&gt; 등 다양한 형태로 저장을 해본다. 이 부분은 수강생의 자율에 맡기도록 한다.&lt;/p&gt;
&lt;h2 id=&#34;v-수강생을-위한-과제&#34;&gt;V. 수강생을 위한 과제&lt;/h2&gt;
&lt;p&gt;지금까지 한것은 확진자(casesConfirmed) 데이터를 가지고 전처리를 진행하였다. 그러나, 확진후 사망자 수 데이터도 중요하며, 더 나아가 인구대비 확진자, 사망자 등도 중요한 데이터가 될 수 있다.&lt;/p&gt;
&lt;p&gt;문제는 아직 사망자 수 데이터를 기반으로 작업은 하지 못했다는 점이다. 이 부분은 수강생을 위한 과제로 남겨두겠다.&lt;/p&gt;
&lt;h2 id=&#34;vi-결론&#34;&gt;VI. 결론&lt;/h2&gt;
&lt;p&gt;이번에는 데이터 전처리에 대해 배우는 시간을 가졌다. 이렇게 데이터 전처리는 어렵다. 강사 역시, 글을 쓰면서 하루의 시간을 모두 통으로 보내며 전처리의 과정을 진행했다. 단순히 소스코드를 짜는 것 뿐만 아니라, 하나씩 확인하는 과정, 좀 더 나은 방법들을 고민하면서 소스코드를 짜는데 주력하였다.&lt;/p&gt;
&lt;p&gt;이제 마지막 &lt;code&gt;Chart Automation&lt;/code&gt;만 남았다.&lt;/p&gt;
&lt;p&gt;이글을 읽는 사람들에게 작게나마 도움이 되기를 바란다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Pray for Victims of Covid_19. Contribution to them with this tutorial.&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Corona Shiny Project 5 - Chart with DateInput</title>
      <link>https://chloevan.github.io/r/shiny/project_05/</link>
      <pubDate>Sat, 11 Apr 2020 10:15:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/shiny/project_05/</guid>
      <description>&lt;h2 id=&#34;공지&#34;&gt;공지&lt;/h2&gt;
&lt;p&gt;이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다&lt;/p&gt;
&lt;p&gt;이번에 준비한 Tutorial 코로나 세계현황을 &lt;code&gt;Shiny Dashboard&lt;/code&gt;로 만들어 가는 과정을 담았다.&lt;/p&gt;
&lt;h2 id=&#34;i-shiny-tutorial-소개&#34;&gt;I. Shiny Tutorial 소개&lt;/h2&gt;
&lt;p&gt;처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_01/&#34;&gt;shiny tutorial 01 - get started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_02/&#34;&gt;shiny tutorial 02 - Shiny Structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_03/&#34;&gt;shiny tutorial 03 - HTML content&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_04/&#34;&gt;shiny tutorial 04 - Shiny Layouts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_05/&#34;&gt;shiny tutorial 05 - Sharing Apps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_06/&#34;&gt;shiny tutorial 06 - shinydashboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_07/&#34;&gt;shiny tutorial 07 - flexdashboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_08/&#34;&gt;shiny tutorial 08 - HTML, CSS 적용&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ii-shiny-project&#34;&gt;II. Shiny Project&lt;/h2&gt;
&lt;p&gt;현재 진행중인 프로젝트가 궁금하다면 아래를 확인해보자.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_01/&#34;&gt;Corona Shiny Project 1 - Get Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_02/&#34;&gt;Corona Shiny Project 2 - Visusalization (Time Series)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_03/&#34;&gt;Corona Shiny Project 3 - Visusalization (Bubble Chart)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_04/&#34;&gt;Corona Shiny Project 4 - Visusalization (Map Chart)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;iii-date-control&#34;&gt;III. Date Control&lt;/h2&gt;
&lt;p&gt;이제 프로젝트의 마지막에 와 있다. 오늘의 내용은 간단하게 표현하면 날짜에 따라 그래프가 달라져야 하는 것을 어떻게 기능적으로 구현할 것인가에 대한 과제가 들어있다.&lt;/p&gt;
&lt;p&gt;또한, 늘 그래왔던 것처럼, Sample로 구현을 먼저 한 후에 응용을 하면 된다. 당연히 처음에는 어렵다. 그러나, 1-2번 반복해서 하다보면, 자연스럽게 익히게 되니, 크게 염려하지 않기를 바란다.&lt;/p&gt;
&lt;h2 id=&#34;1-dateinput-핸들링&#34;&gt;(1) DateInput 핸들링&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_03/&#34;&gt;project_03&lt;/a&gt;에서 확인해야 하는 내용의 소스코드를 그대로 사용해야 하니, &lt;a href=&#34;https://chloevan.github.io/r/shiny/project_03/&#34;&gt;project_03&lt;/a&gt; 내용이 숙지가 되지 않았으면 다시 공부할 것을 권한다. 강사는 글의 편의성을 위해, 나눠서 작성을 했다. 우선 &lt;code&gt;Global Bubble Chart&lt;/code&gt;부터 다룬다. 각 코드에 대한 자세한 설명은 여기에서는 생략한다.&lt;/p&gt;
&lt;h3 id=&#34;a-global-chunk-code&#34;&gt;(A) Global Chunk Code&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Global Chunk Code&lt;/code&gt;는 아래와 같이 되어 있을 것이다. 본 포스트에서 필요한 데이터는 &lt;code&gt;corona3&lt;/code&gt; 데이터셋이다. 다시 &lt;code&gt;Review&lt;/code&gt;하는 마음으로 코드를 작성한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(plotly)    &lt;span style=&#34;color:#75715e&#34;&gt;# 동적 시각화&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(viridis)   &lt;span style=&#34;color:#75715e&#34;&gt;# 색상 관련 패키지&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(readxl)    &lt;span style=&#34;color:#75715e&#34;&gt;# 엑셀파일 데이터 수집&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(tidyverse) &lt;span style=&#34;color:#75715e&#34;&gt;# 데이터 가공 및 ggplot2 시각&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# get code data&lt;/span&gt;
url &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://pkgstore.datahub.io/JohnSnowLabs/country-and-continent-codes-list/country-and-continent-codes-list-csv_csv/data/b7876b7f496677669644f3d1069d3121/country-and-continent-codes-list-csv_csv.csv&amp;#39;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# Country Code 변수명 재정의&lt;/span&gt;
country_code &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;read.csv&lt;/span&gt;(url, stringsAsFactors &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;select&lt;/span&gt;(Continent_Name, Three_Letter_Country_Code) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;rename&lt;/span&gt;(continent_code &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Three_Letter_Country_Code)

&lt;span style=&#34;color:#75715e&#34;&gt;# Covid_19 변수명 재정의&lt;/span&gt;
corona &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;rename&lt;/span&gt;(date &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dateRep, 
         country &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; countriesAndTerritories, 
         continent_code &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; countryterritoryCode) &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; corona2 

&lt;span style=&#34;color:#75715e&#34;&gt;# continent_code 변수 기준으로 데이터 통합&lt;/span&gt;
corona3 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;left_join&lt;/span&gt;(corona2, country_code)

&lt;span style=&#34;color:#75715e&#34;&gt;# 결과 확인&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;glimpse&lt;/span&gt;(corona3)  

Rows&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;339&lt;/span&gt;
Columns&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt; date           &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;date&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2020-04-05&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2020-04-04&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2020-04-03&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2020-04-02&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;…
&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt; day            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;dbl&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;31&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;29&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;28&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;26&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt;,…
&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt; month          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;dbl&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,…
&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt; year           &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;dbl&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2020&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2020&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2020&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2020&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2020&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2020&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2020&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2020&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;…
&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt; cases          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;dbl&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;35&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;43&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;26&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;33&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;,…
&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt; deaths         &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;dbl&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,…
&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt; country        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;chr&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Afghanistan&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Afghanistan&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Afghanistan&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Afgh…
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;$ geoId          &amp;lt;chr&amp;gt; &amp;#34;&lt;/span&gt;AF&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;AF&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;AF&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;AF&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;AF&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;AF&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;AF&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;AF&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;A…
&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt; continent_code &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;chr&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AFG&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AFG&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AFG&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AFG&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AFG&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AFG&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AFG&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;…
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;$ popData2018    &amp;lt;dbl&amp;gt; 37172386, 37172386, 37172386, 37172386, 37172386, …
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;$ Continent_Name &amp;lt;chr&amp;gt; &amp;#34;&lt;/span&gt;Asia&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;Asia&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;Asia&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;Asia&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;Asia&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;Asia&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;A…
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;b-slide-bar-chunk-code&#34;&gt;(B) Slide Bar Chunk Code&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;corona3&lt;/code&gt; 데이터셋을 확보했다면, 이제는 &lt;code&gt;Slide Bar&lt;/code&gt;를 만들어본다. &lt;code&gt;dateInput&lt;/code&gt; 코드를 입력한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;Inputs {.sidebar data-width=300}
-----------------------------------------------------------------------
원하는 날짜에 놓고 &lt;span style=&#34;color:#e6db74&#34;&gt;`Button`&lt;/span&gt;을 누르세요. 

&lt;span style=&#34;color:#e6db74&#34;&gt;```r
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;h4&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Step 1. Click Global Bubble Chart&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#a6e22e&#34;&gt;h4&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Step 2. Change Date&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#a6e22e&#34;&gt;dateInput&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bubbleDate&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Date:&amp;#34;&lt;/span&gt;, value &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2020-03-01&amp;#34;&lt;/span&gt;)

&lt;span style=&#34;color:#a6e22e&#34;&gt;h4&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Check if bubble is moving by date&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#e6db74&#34;&gt;```&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;c-flexdashboard-code&#34;&gt;(C) flexdashboard Code&lt;/h3&gt;
&lt;p&gt;마지막으로 &lt;code&gt;Global Bubble Chart&lt;/code&gt; 탭에서 그래프가 출력되는지 확인한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Create data Reactive&lt;/span&gt;
corona_bubble_df &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;reactive&lt;/span&gt;({
  corona3 &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;filter&lt;/span&gt;(date &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2020-04-05&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;is.na&lt;/span&gt;(cty_code)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;select&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(day, month, year, geoId)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# Reorder countries to having big bubbles on top&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;arrange&lt;/span&gt;(date) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;group_by&lt;/span&gt;(country) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(cum_cases &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;cumsum&lt;/span&gt;(cases), 
         cum_deaths &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;cumsum&lt;/span&gt;(deaths)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#75715e&#34;&gt;# prepare text for tooltip&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;paste&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Country: &amp;#34;&lt;/span&gt;, country, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\ntoday cases: &amp;#34;&lt;/span&gt;, cases, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\ntoday_deaths: &amp;#34;&lt;/span&gt;, deaths, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\ntotal_cases: &amp;#34;&lt;/span&gt;, cum_cases, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\ntotal_deaths: &amp;#34;&lt;/span&gt;, cum_deaths, sep&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;filter&lt;/span&gt;(date &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2020-04-05&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;distinct&lt;/span&gt;(date, cases, deaths, country, .keep_all &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;)
})

&lt;span style=&#34;color:#a6e22e&#34;&gt;renderPlotly&lt;/span&gt;({
  &lt;span style=&#34;color:#75715e&#34;&gt;# Classic ggplot&lt;/span&gt;
  p &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;corona_bubble_df&lt;/span&gt;(), &lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;cases, y&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;deaths, size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; popData2018, color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Continent_Name, text&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;text)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_point&lt;/span&gt;(alpha&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.7&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; 
    &lt;span style=&#34;color:#a6e22e&#34;&gt;scale_x_log10&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; 
    &lt;span style=&#34;color:#a6e22e&#34;&gt;scale_size&lt;/span&gt;(range &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1.4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;19&lt;/span&gt;), name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Population (M)&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;scale_color_viridis&lt;/span&gt;(discrete&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;, guide&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_minimal&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;theme&lt;/span&gt;(legend.position&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;none&amp;#34;&lt;/span&gt;)
  
  &lt;span style=&#34;color:#a6e22e&#34;&gt;ggplotly&lt;/span&gt;(p, tooltip&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;text&amp;#34;&lt;/span&gt;)
})
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;위 소스코드를 새로운 &lt;code&gt;flexdashboard template&lt;/code&gt; 정상적으로 실행했다면 아래와 같이 나타나면 정상이다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/coronaProject/project_05/project_01.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h3 id=&#34;d-날짜-입력값-자동화-코드&#34;&gt;(D) 날짜 입력값 자동화 코드&lt;/h3&gt;
&lt;p&gt;문제는 날짜를 바꿔도 그래프는 달라지지 않는다. 왜 그럴까? &lt;code&gt;reactive dataset&lt;/code&gt; 코드를 따라 작성했다면, &lt;code&gt;filter(date == 2020-04-05)&lt;/code&gt; 이와 같이 입력한 것을 확인할 수 있을 것이다. 즉, &lt;code&gt;2020-04-05&lt;/code&gt; 이 부분을 입력값으로 대체를 해야 한다. 아래와 같이 수정한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;filter(date == &amp;quot;2020-04-05&amp;quot;, !is.na(cty_code)&lt;/code&gt;를 &lt;code&gt;filter(date &amp;lt;= as.Date(as.character(input$bubbleDate)), !is.na(cty_code))&lt;/code&gt; 수정한다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;filter(date == &amp;quot;2020-04-05&amp;quot;)&lt;/code&gt;를 &lt;code&gt;filter(date == as.Date(as.character(input$bubbleDate))&lt;/code&gt;로 수정한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Create data Reactive&lt;/span&gt;
corona_bubble_df &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;reactive&lt;/span&gt;({
  corona3 &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;filter&lt;/span&gt;(date &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.Date&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(input&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;bubbleDate)), &lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;is.na&lt;/span&gt;(cty_code)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;select&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(day, month, year, geoId)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# Reorder countries to having big bubbles on top&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;arrange&lt;/span&gt;(date) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;group_by&lt;/span&gt;(country) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(cum_cases &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;cumsum&lt;/span&gt;(cases), 
         cum_deaths &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;cumsum&lt;/span&gt;(deaths)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#75715e&#34;&gt;# prepare text for tooltip&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;paste&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Country: &amp;#34;&lt;/span&gt;, country, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\ntoday cases: &amp;#34;&lt;/span&gt;, cases, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\ntoday_deaths: &amp;#34;&lt;/span&gt;, deaths, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\ntotal_cases: &amp;#34;&lt;/span&gt;, cum_cases, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\ntotal_deaths: &amp;#34;&lt;/span&gt;, cum_deaths, sep&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;filter&lt;/span&gt;(date &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.Date&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(input&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;bubbleDate))) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;distinct&lt;/span&gt;(date, cases, deaths, country, .keep_all &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;)
})
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;날짜를 입력받는데, &lt;code&gt;as.character()&lt;/code&gt;가 나온 것에 대해 의구심이 생길 수 있는데, 이 부분을 다루려면 R의 Shiny의 &lt;code&gt;Date Input&lt;/code&gt; 및 R 프로그래밍에서의 &lt;code&gt;Date Type에&lt;/code&gt;값을 처리하는 것에 대한 부가적인 설명이 필요해서 일단 여기에서는 설명하지 않는다. (강사가 이 문제를 푸는데 약 30-40분 시간을 허비했다!)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;input$bubbleDate&lt;/code&gt;는 뭘까? &lt;code&gt;shiny&lt;/code&gt;의 &lt;code&gt;input &amp;amp; output&lt;/code&gt; 개념에 대한 이해도가 필요하며, 이 기본적인 개념은 &lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_02/&#34;&gt;shiny tutorial 02 - Shiny Structure&lt;/a&gt;에서 확인한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;그러면 이제 다른 날짜를 클릭하면, 그래프가 달라지는 것을 확인할 수 있을 것이다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/coronaProject/project_05/project_02.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;정상적으로 바뀐 것을 확인을 하였다면, 수정 후 다시 재 배포하면 된다.&lt;/p&gt;
&lt;h2 id=&#34;iv-결론&#34;&gt;IV. 결론&lt;/h2&gt;
&lt;p&gt;간단하게 소스코드 1-2줄 수정으로 의미있는 시각화가 구현되었다. 이제 본 프로젝트의 마지막이다. 다음 튜토리얼에서는 날짜의 범위(Range)를 이용하여 자동으로 그래프가 변화되는 것을 만들어본다.&lt;/p&gt;
&lt;p&gt;이글을 읽는 사람들에게 작게나마 도움이 되기를 바란다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Pray for Victims of Covid_19. Contribution to them with this tutorial.&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;v-reference&#34;&gt;V. Reference&lt;/h2&gt;
&lt;p&gt;Shiny Tutorial. Lession 4 Display reactive output. from &lt;a href=&#34;https://shiny.rstudio.com/tutorial/written-tutorial/lesson4/&#34;&gt;https://shiny.rstudio.com/tutorial/written-tutorial/lesson4/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Corona Shiny Project 4 - Visusalization (Map Chart)</title>
      <link>https://chloevan.github.io/r/shiny/project_04/</link>
      <pubDate>Thu, 09 Apr 2020 10:10:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/shiny/project_04/</guid>
      <description>&lt;h2 id=&#34;공지&#34;&gt;공지&lt;/h2&gt;
&lt;p&gt;이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다&lt;/p&gt;
&lt;p&gt;이번에 준비한 Tutorial 코로나 세계현황을 &lt;code&gt;Shiny Dashboard&lt;/code&gt;로 만들어 가는 과정을 담았다.&lt;/p&gt;
&lt;h2 id=&#34;i-shiny-tutorial-소개&#34;&gt;I. Shiny Tutorial 소개&lt;/h2&gt;
&lt;p&gt;처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_01/&#34;&gt;shiny tutorial 01 - get started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_02/&#34;&gt;shiny tutorial 02 - Shiny Structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_03/&#34;&gt;shiny tutorial 03 - HTML content&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_04/&#34;&gt;shiny tutorial 04 - Shiny Layouts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_05/&#34;&gt;shiny tutorial 05 - Sharing Apps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_06/&#34;&gt;shiny tutorial 06 - shinydashboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_07/&#34;&gt;shiny tutorial 07 - flexdashboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_08/&#34;&gt;shiny tutorial 08 - HTML, CSS 적용&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ii-shiny-project&#34;&gt;II. Shiny Project&lt;/h2&gt;
&lt;p&gt;현재 진행중인 프로젝트가 궁금하다면 아래를 확인해보자.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_01/&#34;&gt;Corona Shiny Project 1 - Get Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_02/&#34;&gt;Corona Shiny Project 2 - Visusalization (Time Series)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_03/&#34;&gt;Corona Shiny Project 3 - Visusalization (Bubble Chart)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;iii-leaflet-소개&#34;&gt;III. Leaflet 소개&lt;/h2&gt;
&lt;p&gt;leaflet 패키지에 관한 간단한 소개에 강사가 작성한 글이 있다. 구체적인 내용은 여기에서 참고하기를 바란다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/graph01_leaflet/&#34;&gt;Leaflet for R&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;vi-지도-시각화-작업에-앞서서-고려할-내용&#34;&gt;VI. 지도 시각화 작업에 앞서서 고려할 내용&lt;/h2&gt;
&lt;h2 id=&#34;1-지도-데이터-수집하기&#34;&gt;(1) 지도 데이터 수집하기&lt;/h2&gt;
&lt;p&gt;지도 시각화를 작업하려면, 필수적으로 위도와 경도가 담긴 데이터를 확보해야 한다. 이번 프로젝트에서 관건이 되는 건 국가별 위도 경도 데이터를 확보하는 소스코드를 작업해야 한다.&lt;/p&gt;
&lt;p&gt;원소스부터 수집하는 방법 등 다양한 방법이 있지만, 강사는 아래와 같이 진행했다.&lt;/p&gt;
&lt;p&gt;먼저 &lt;a href=&#34;https://www.naturalearthdata.com/downloads/50m-cultural-vectors/50m-admin-0-countries-2/&#34;&gt;Natural Earth Data&lt;/a&gt;에서 &lt;code&gt;Download Countries&lt;/code&gt;데이터 파일을 다운로드 받은 후 적정 경로에서 데이터를 로드 한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;폴더 트리 구조&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;.
├── ne_50m_admin_0_countries.README.html
├── ne_50m_admin_0_countries.VERSION.txt
├── ne_50m_admin_0_countries.cpg
├── ne_50m_admin_0_countries.dbf
├── ne_50m_admin_0_countries.prj
├── ne_50m_admin_0_countries.shp
└── ne_50m_admin_0_countries.shx
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;각각의 확장명이 있는데, 각각의 확장명을 이해하려면 또다른 공부를 해야 한다. (현재 시점에서 강사는 관심이 크게 없다!)&lt;/p&gt;
&lt;p&gt;&lt;code&gt;countries&lt;/code&gt; 코드는 그대로 실행해준다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/coronaProject/project_04/project_01.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(rgdal)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## Loading required package: sp
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;## rgdal: version: 1.4-8, (SVN revision 845)
##  Geospatial Data Abstraction Library extensions to R successfully loaded
##  Loaded GDAL runtime: GDAL 2.4.2, released 2019/06/28
##  Path to GDAL shared files: /Library/Frameworks/R.framework/Versions/3.6/Resources/library/rgdal/gdal
##  GDAL binary built with GEOS: FALSE 
##  Loaded PROJ.4 runtime: Rel. 5.2.0, September 15th, 2018, [PJ_VERSION: 520]
##  Path to PROJ.4 shared files: /Library/Frameworks/R.framework/Versions/3.6/Resources/library/rgdal/proj
##  Linking to sp version: 1.3-2
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;countries &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;readOGR&lt;/span&gt;(dsn &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;~/Desktop/ne_50m_admin_0_countries&amp;#34;&lt;/span&gt;,
                     layer &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ne_50m_admin_0_countries&amp;#34;&lt;/span&gt;,
                     encoding &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;utf-8&amp;#34;&lt;/span&gt;,use_iconv &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; T,
                     verbose &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;)

&lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;(countries)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;SpatialPolygonsDataFrame&amp;quot;
## attr(,&amp;quot;package&amp;quot;)
## [1] &amp;quot;sp&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;countries의 class는 &lt;code&gt;sp&lt;/code&gt;로 일반적인 &lt;code&gt;data.frame&lt;/code&gt; 형태가 아닌 것을 확인할 수 있다.&lt;/p&gt;
&lt;h2 id=&#34;2-countries-data-시각화&#34;&gt;(2) Countries data 시각화&lt;/h2&gt;
&lt;p&gt;일단, 뭔지는 몰라도 실제 시각화 되는지 확인해보자. 이 때에는 &lt;code&gt;leaflet package&lt;/code&gt;를 활용한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(leaflet)
&lt;span style=&#34;color:#a6e22e&#34;&gt;leaflet&lt;/span&gt;(data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; countries) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;addTiles&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;setView&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;, zoom &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/coronaProject/project_04/project_02.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;오! 신기하게 되었다. 이 소스코드가 실제로 R Markdown에서도 적용되는지 확인해본다. 그러려면, &lt;code&gt;countries&lt;/code&gt; 데이터를 저장한 후, &lt;code&gt;R Markdown&lt;/code&gt;코드에서 불러오는 걸 수행해야 한다. 어떻게 수행하면 좋을까? &lt;code&gt;MySQL&lt;/code&gt;과 같은 &lt;code&gt;RDB&lt;/code&gt;로는 저장이 당연히 되지 않는다. 그러면, &lt;code&gt;NoSQL&lt;/code&gt;로 데이터를 &lt;code&gt;Input&lt;/code&gt; 하면 된다. 왜 강사가 &lt;code&gt;MongoDB&lt;/code&gt;로 작업하는지 이 때 비로써 &lt;code&gt;아!&lt;/code&gt; 하면 충분하다.&lt;/p&gt;
&lt;h2 id=&#34;3-mongodb에-저장하기&#34;&gt;(3) MongoDB에 저장하기&lt;/h2&gt;
&lt;p&gt;이 데이터를 &lt;code&gt;MongoDB&lt;/code&gt;에 실제로 저장되는지 확인해본다.
이 때 작업해야 하는 것은 &lt;code&gt;sp class&lt;/code&gt;를 &lt;code&gt;MongoDB&lt;/code&gt; 형태인 &lt;code&gt;JSON 형태&lt;/code&gt;로 바꿔져야 하는 작업이 남았는데, 어려운 것은 아니니, 소스 코드를 참고한다.&lt;/p&gt;
&lt;p&gt;다행히 R은 GIS 형태의 sp class를 다룰 수 있도록 도와주는 패키지를 지원하고 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;참고로 해당 패키지 설치 과정에서는 &lt;code&gt;gdal&lt;/code&gt; 및 &lt;code&gt;sf&lt;/code&gt; 버전 관련 에러가 나올 확률이 크다. 이런 경우, &lt;a href=&#34;https://github.com/r-spatial/sf&#34;&gt;sf 공식문서&lt;/a&gt; 문서를 참조하기를 바란다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;Facing similar problem I have followed the steps below:

&lt;span style=&#34;color:#66d9ef&#34;&gt;1.&lt;/span&gt; On Terminal: gdalinfo --version to check which gdal version do you have. Mine was GDAL 2.2.0, released 2017/04/28 after brew update and brew upgrade

&lt;span style=&#34;color:#66d9ef&#34;&gt;2.&lt;/span&gt; From here: https://github.com/r-spatial/sf, instructions for macOS, as I have already gdal installed, I have used only brew unlink gdal and then brew link --force gdal2

&lt;span style=&#34;color:#66d9ef&#34;&gt;3.&lt;/span&gt; I reinstalled rgdal on R: install.packages(&amp;#34;rgdal&amp;#34;, repos = &amp;#34;http://cran.us.r-project.org&amp;#34;, type = &amp;#34;source&amp;#34;) and I have confirmed it was compiled with configure: GDAL: 2.2.0

&lt;span style=&#34;color:#66d9ef&#34;&gt;4.&lt;/span&gt; Finally, install.packages(&amp;#34;sf&amp;#34;) and it required to be compiled: binary source needs_compilation sf 0.5-3 TRUE
Again, I have confirmed configure: GDAL: 2.2.0 and checking GDAL version &amp;gt;= 2.0.0... yes

After that, I have the new version installed: library(sf) Linking to GEOS 3.6.2, GDAL 2.2.0, proj.4 4.9.3

I hope it could be a solution for you too.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;에러를 잘 다루는 사람이 일의 성과도 높다! 일의 해결법은 대부분 공식문서에 있다.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;install.packages(&amp;quot;sf&amp;quot;, configure.args = &amp;quot;--with-proj-lib=/usr/local/lib/&amp;quot;)
install.packages(&amp;quot;geojsonio&amp;quot;, dependencies = TRUE)
remotes::install_github(&amp;quot;ropensci/geojsonlint&amp;quot;)
library(geojsonio)

# json
county_json &amp;lt;- geojson_json(countries)

&amp;gt; class(county_json)
[1] &amp;quot;geofeaturecollection&amp;quot; &amp;quot;geojson&amp;quot;             
[3] &amp;quot;geo_json&amp;quot;             &amp;quot;json&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;geon_json 형태로 데이터가 변환된 것을 확인할 수 있다.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;library(mongolite)
collection &amp;lt;- &amp;quot;countries&amp;quot; 
db &amp;lt;- &#39;learningspoons&#39;
mongo_id &amp;lt;- Sys.getenv(&amp;quot;MONGO_ID&amp;quot;) # 보안 유지를 위해 가렸다.(실무에서는 이렇게 작업하라고 권유하는 것임!) 
mongo_pw &amp;lt;- Sys.getenv(&amp;quot;MONGO_PW&amp;quot;) # (실무에서는 이렇게 작업하라고 권유하는 것임!)  

mongo_url &amp;lt;- paste0(&#39;mongodb+srv://&#39;, mongo_id, &#39;:&#39;,mongo_pw,&#39;@learningspoons-rhpei.gcp.mongodb.net/&#39;)

conn &amp;lt;- mongo(collection = collection, 
              db = db, 
              url = mongo_url)

conn$insert(county_json)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/coronaProject/project_04/project_03.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;실제로 MongoDB에 잘 들어간 것을 확인할 수 있다.&lt;/p&gt;
&lt;h2 id=&#34;4-shapefile-저장-및-불러오기&#34;&gt;(4) ShapeFile 저장 및 불러오기&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;MongoDB&lt;/code&gt;에 저장하는 방법이 싫다면, 매우 간단히, &lt;code&gt;.RData 형태로 저장해도 된다.&lt;/code&gt; 이렇게 다양한 형태로 저장할 수 있음을 확인한다.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;save(countries, file=&amp;quot;shapeFile.RData&amp;quot;)
load(&amp;quot;shapeFile.RData&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;v-국가별-인구-데이터-지도-시각화-예제&#34;&gt;V. 국가별 인구 데이터 지도 시각화 예제&lt;/h2&gt;
&lt;p&gt;수집된 데이터를 통해서 다양한 시각화를 진행할 수 있다. 지도 시각화 관한 다양한 예제는 &lt;a href=&#34;https://rstudio.github.io/leaflet/shapes.html&#34;&gt;leaflet&lt;/a&gt; 확인한다.&lt;/p&gt;
&lt;p&gt;특히, 주의해야 하는 것은 데이터의 형태가 &lt;code&gt;sp&lt;/code&gt; 형태인지, 아니면 &lt;code&gt;geojson&lt;/code&gt; 형태인지에 따라 조금씩 달라지니, 여기에 주의하면서 관련 공식문서를 읽도록 한다.&lt;/p&gt;
&lt;h2 id=&#34;1-소스-코드-실행&#34;&gt;(1) 소스 코드 실행&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 패키지 로드&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(rgdal)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(leaflet)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(viridis)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(RCurl)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(dplyr)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(RColorBrewer)

&lt;span style=&#34;color:#75715e&#34;&gt;# 지도 데이터 수집&lt;/span&gt;
countries &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;readOGR&lt;/span&gt;(dsn &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;~/Desktop/ne_50m_admin_0_countries&amp;#34;&lt;/span&gt;,
                     layer &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ne_50m_admin_0_countries&amp;#34;&lt;/span&gt;,
                     encoding &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;utf-8&amp;#34;&lt;/span&gt;,use_iconv &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; T,
                     verbose &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;)

&lt;span style=&#34;color:#75715e&#34;&gt;# 인구수 데이터 가공&lt;/span&gt;
countries&lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;data&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;POP_EST&lt;span style=&#34;color:#a6e22e&#34;&gt;[which&lt;/span&gt;(countries&lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;data&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;POP_EST &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NA&lt;/span&gt;
countries&lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;data&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;POP_EST &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.numeric&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(countries&lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;data&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;POP_EST)) &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1000000&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;round&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)

&lt;span style=&#34;color:#75715e&#34;&gt;# 색상, 범례에 사용할 것&lt;/span&gt;
mybins &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;500&lt;/span&gt;,&lt;span style=&#34;color:#66d9ef&#34;&gt;Inf&lt;/span&gt;)
mypalette &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;colorBin&lt;/span&gt;(palette&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;YlOrBr&amp;#34;&lt;/span&gt;, domain&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;countries&lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;data&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;POP_EST, na.color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;transparent&amp;#34;&lt;/span&gt;, bins&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mybins)

&lt;span style=&#34;color:#75715e&#34;&gt;# 국가 클릭 시, 아래 내용으로 출력&lt;/span&gt;
mytext &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;paste&lt;/span&gt;(
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Country: &amp;#34;&lt;/span&gt;, countries&lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;data&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;NAME_EN,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;br/&amp;gt;&amp;#34;&lt;/span&gt;, 
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Area:  &amp;#34;&lt;/span&gt;, countries&lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;data&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;CONTINENT, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;br/&amp;gt;&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Population: &amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;round&lt;/span&gt;(countries&lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;data&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;POP_EST, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;),
  sep&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;lapply&lt;/span&gt;(htmltools&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;HTML)

&lt;span style=&#34;color:#75715e&#34;&gt;# 마지막으로 Mapping&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;leaflet&lt;/span&gt;(countries) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;addTiles&lt;/span&gt;()  &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;setView&lt;/span&gt;( lat&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;, lng&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; , zoom&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;addPolygons&lt;/span&gt;( 
    fillColor &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mypalette&lt;/span&gt;(POP_EST), 
    weight &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,
    opacity &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,
    color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;white&amp;#34;&lt;/span&gt;,
    dashArray &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;3&amp;#34;&lt;/span&gt;,
    fillOpacity &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.7&lt;/span&gt;,
    highlight &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;highlightOptions&lt;/span&gt;(
      weight &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,
      color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#666&amp;#34;&lt;/span&gt;,
      dashArray &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;,
      fillOpacity &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.7&lt;/span&gt;,
      bringToFront &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;),
    label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mytext,
    labelOptions &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;labelOptions&lt;/span&gt;(
      style &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;font-weight&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;normal&amp;#34;&lt;/span&gt;, padding &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2px 7px&amp;#34;&lt;/span&gt;),
      textsize &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;13px&amp;#34;&lt;/span&gt;,
      direction &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;auto&amp;#34;&lt;/span&gt;
    )
  ) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;addLegend&lt;/span&gt;(pal&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;mypalette, values&lt;span style=&#34;color:#f92672&#34;&gt;=~&lt;/span&gt;POP_EST, opacity&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.9&lt;/span&gt;, title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Population (M)&amp;#34;&lt;/span&gt;, position &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bottomleft&amp;#34;&lt;/span&gt; )
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/coronaProject/project_04/project_04.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;2-소스-코드-설명&#34;&gt;(2) 소스 코드 설명&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;인구수 데이터 가공: 0인 데이터는 NA로 처리한 뒤, 인구수가 인구수는 단위가 크기때문에, 백만명 단위로 처리했다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;색상, 범례에 사용할 것: 국가별 인구수에 색상의 차별화를 하려면 &lt;code&gt;mybins &amp;lt;- c(0,10,20,50,100,500,Inf)&lt;/code&gt;에 따라 차별화를 두었다. 만약 기준이 다르다면, 다른 기준점을 적용하면 된다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Leaflet Mapping: &lt;code&gt;Leaflet + Choropleths&lt;/code&gt; 검색을 하면 다양한 예제가 나오니 거기에서 응용하면 된다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://rstudio.github.io/leaflet/choropleths.html&#34;&gt;Choropleths&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;vi-apply-to-r-markdown&#34;&gt;VI. Apply To R Markdown.&lt;/h2&gt;
&lt;p&gt;이제 위 데이터를 활용해서 실제로 &lt;code&gt;flexdashboard&lt;/code&gt; 패키지에 적용되는지 확인해보자. 다행히 leaflet과 R Markdown은 연동이 매우 잘되서, Editor에서 작업한 소스 코드를 그대로 응용해도 무방하다. 단, &lt;code&gt;reactive 데이터 셋&lt;/code&gt;은 당연히 &lt;code&gt;renderLeaflet()&lt;/code&gt;을 활용한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;Row
-----------------------------------------------------------------------

&lt;span style=&#34;color:#75715e&#34;&gt;### World Population
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#e6db74&#34;&gt;```r
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Final Map&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;leaflet&lt;/span&gt;(countries) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;addTiles&lt;/span&gt;()  &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;setView&lt;/span&gt;( lat&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;, lng&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; , zoom&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;addPolygons&lt;/span&gt;( 
    fillColor &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mypalette&lt;/span&gt;(POP_EST), 
    weight &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,
    opacity &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,
    color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;white&amp;#34;&lt;/span&gt;,
    dashArray &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;3&amp;#34;&lt;/span&gt;,
    fillOpacity &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.7&lt;/span&gt;,
    highlight &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;highlightOptions&lt;/span&gt;(
      weight &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,
      color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#666&amp;#34;&lt;/span&gt;,
      dashArray &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;,
      fillOpacity &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.7&lt;/span&gt;,
      bringToFront &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;),
    label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mytext,
    labelOptions &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;labelOptions&lt;/span&gt;(
      style &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;font-weight&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;normal&amp;#34;&lt;/span&gt;, padding &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2px 7px&amp;#34;&lt;/span&gt;),
      textsize &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;13px&amp;#34;&lt;/span&gt;,
      direction &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;auto&amp;#34;&lt;/span&gt;
    )
  ) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  leaflet&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;addLegend&lt;/span&gt;(pal &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mypalette, values&lt;span style=&#34;color:#f92672&#34;&gt;=~&lt;/span&gt;POP_EST, opacity&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.9&lt;/span&gt;, title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Population (M)&amp;#34;&lt;/span&gt;, position &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bottomleft&amp;#34;&lt;/span&gt; )
&lt;span style=&#34;color:#e6db74&#34;&gt;```&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/coronaProject/project_04/project_05.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;vii-결론&#34;&gt;VII. 결론&lt;/h2&gt;
&lt;p&gt;이번 포스트에서는, &lt;code&gt;leaflet&lt;/code&gt; 패키지를 활용한 지도 시각화 실전에 준하는 과정을 만들었다. 지도 데이터를 다루는 것은 사실 쉬운 것은 아니다. 강사가 GIS 개념을 다루는 데 참조했던 원문 링크를 보고 참고하기를 바란다.&lt;/p&gt;
&lt;p&gt;이글을 읽는 사람들에게 작게나마 도움이 되기를 바란다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Pray for Victims of Covid_19. Contribution to them with this tutorial.&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;viii-reference&#34;&gt;VIII. Reference&lt;/h2&gt;
&lt;p&gt;Moraga, P. (n.d.). Geospatial Health Data: Modeling and Visualization with R-INLA and Shiny. from &lt;a href=&#34;http://www.paulamoraga.com/book-geospatial/index.html&#34;&gt;http://www.paulamoraga.com/book-geospatial/index.html&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Corona Shiny Project 2 - Visusalization (Time Series)</title>
      <link>https://chloevan.github.io/r/shiny/project_02/</link>
      <pubDate>Tue, 07 Apr 2020 10:10:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/shiny/project_02/</guid>
      <description>&lt;h2 id=&#34;공지&#34;&gt;공지&lt;/h2&gt;
&lt;p&gt;이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다&lt;/p&gt;
&lt;p&gt;이번에 준비한 Tutorial 코로나 세계현황을 &lt;code&gt;Shiny Dashboard&lt;/code&gt;로 만들어 가는 과정을 담았다.&lt;/p&gt;
&lt;h2 id=&#34;i-shiny-tutorial-소개&#34;&gt;I. Shiny Tutorial 소개&lt;/h2&gt;
&lt;p&gt;처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_01/&#34;&gt;shiny tutorial 01 - get started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_02/&#34;&gt;shiny tutorial 02 - Shiny Structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_03/&#34;&gt;shiny tutorial 03 - HTML content&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_04/&#34;&gt;shiny tutorial 04 - Shiny Layouts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_05/&#34;&gt;shiny tutorial 05 - Sharing Apps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_06/&#34;&gt;shiny tutorial 06 - shinydashboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_07/&#34;&gt;shiny tutorial 07 - flexdashboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_08/&#34;&gt;shiny tutorial 08 - HTML, CSS 적용&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ii-shiny-project&#34;&gt;II. Shiny Project&lt;/h2&gt;
&lt;p&gt;이전 포스트에서는 &lt;code&gt;Corona 데이터셋&lt;/code&gt;을 구하는 방법에 대해 기술하였다. 그리고, 데이터셋을 &lt;code&gt;MongoDB&lt;/code&gt;에 저장하는 방법에 대해 서술하였다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_01/&#34;&gt;Corona Shiny Project I - Get Data&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;iii-shiny-project-with-flexdashboard-package&#34;&gt;III. Shiny Project with flexdashboard package.&lt;/h2&gt;
&lt;p&gt;강사는 &lt;code&gt;flexdashboard&lt;/code&gt; 패키지를 활용할 예정이기 때문에 어떻게 처음 시작하는지는 여기서 추가 설명은 하지 않는다. 다만, 처음 이 페이지를 방문한 사람을 위해 강사가 작성한 블로그 글 &lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_07/&#34;&gt;shiny tutorial 07 - flexdashboard&lt;/a&gt;에서 참조하기를 바란다.&lt;/p&gt;
&lt;h2 id=&#34;1-model-dashboard&#34;&gt;(1) Model Dashboard&lt;/h2&gt;
&lt;p&gt;강사가 참조하려는 대시보드는 아래와 같이 만들어갈 예정이다. &lt;code&gt;Heatmap&lt;/code&gt; 대신에 세계지도를 넣으려고 하며, 날짜에 따라 어떻게 시시각각 변하는지 만들 예정이다. 또한, &lt;code&gt;Time Series Chart&lt;/code&gt; 또는 &lt;code&gt;Bubble Chart&lt;/code&gt; 애니메이션을 활용하여 국가별로 누적 확진자수와 사망자수를 만들 예정이다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jjallaire.shinyapps.io/shiny-biclust/&#34;&gt;Gene Expression Biclustering&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/coronaProject/project_02/project_01.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;2-필수-패키지-불러오기&#34;&gt;(2) 필수 패키지 불러오기&lt;/h2&gt;
&lt;p&gt;강사가 사용하려는 패키지는 아래와 같다. (작업하다보면 추가가 될 수 있어서, 계속 업데이트 하려고 한다.)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;```r
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 데이터를 &amp;#39;global&amp;#39; chunk에 넣고, 대시보드의 모든 사용자가 데이터를 공유할 수 있도록 지원하는 소스 코드&lt;/span&gt;

&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(shiny)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(mongolite)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(tidyverse)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(leaflet)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(dygraphs)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(xts)
&lt;span style=&#34;color:#e6db74&#34;&gt;```&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;3-layout-기본-구성&#34;&gt;(3) Layout 기본 구성&lt;/h2&gt;
&lt;p&gt;강사는 아래와 같이 기본 구성도를 작성하였다.
&lt;img src=&#34;https://chloevan.github.io/img/shiny/coronaProject/project_02/project02.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;iii-get-data-from-mongodb&#34;&gt;III. Get Data From MongoDB&lt;/h2&gt;
&lt;p&gt;아래 소스코드를 통해서 데이터를 가져온다. MongoDB에 관련된 자료는 &lt;a href=&#34;https://rpubs.com/Evan_Jung/r_mongodb&#34;&gt;R MongoDB 접속 및 소개 자료&lt;/a&gt;에서 확인하기를 바란다. 사실 본 프로젝트에서는 꼭 이렇게 하지 않아도 된다. 그러나, 조금 더 깊은 내용을 원하면, 이렇게 해줘야 함을 명시한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(mongolite)
collection &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;covid_19&amp;#34;&lt;/span&gt; 
db &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;learningspoons&amp;#39;&lt;/span&gt;
mongo_id &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Sys.getenv&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MONGO_ID&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;# 보안 유지를 위해 가렸다.(실무에서는 이렇게 작업하라고 권유하는 것임!) &lt;/span&gt;
mongo_pw &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Sys.getenv&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MONGO_PW&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;# (실무에서는 이렇게 작업하라고 권유하는 것임!)  &lt;/span&gt;

mongo_url &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;paste0&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;mongodb+srv://&amp;#39;&lt;/span&gt;, mongo_id, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;:&amp;#39;&lt;/span&gt;,mongo_pw,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;@learningspoons-rhpei.gcp.mongodb.net/&amp;#39;&lt;/span&gt;)

conn &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;mongo&lt;/span&gt;(collection &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; collection, 
              db &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; db, 
              url &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mongo_url)

&lt;span style=&#34;color:#75715e&#34;&gt;# get data&lt;/span&gt;
corona &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; conn&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;find&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{}&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;위 소스코드는 &lt;code&gt;global&lt;/code&gt; chunk에 작성한다. 이유는 위 데이터를 우선 공동으로 사용되어야 하기 때문이다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Tip-1: 여기에서 &lt;code&gt;Sys.getenv(&amp;quot;MONGO_ID&amp;quot;)&lt;/code&gt;와 함께 &lt;code&gt;App Publishing&lt;/code&gt;을 진행하면, shinyapp.io에서 에러가 날 가능성이 크다. 이유는 &lt;code&gt;Sys.getenv(&amp;quot;&amp;quot;)&lt;/code&gt;은 환경설정 파일(&lt;code&gt;.Renviron&lt;/code&gt;)인데, 당연히 &lt;code&gt;github&lt;/code&gt; 등에는 공적으로 같이 올리지 않는다. 강사는 publishing 할 때, 명시적으로 ID와 PW를 같이 기재하여 배포하였지만, 보안상으로는 당연히 그렇게 하면 안된다. 이에 대한 적절한 해결책을 공유하니, 참고하기를 바란다.
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/39084284/how-to-pass-environment-variables-to-shinyapps&#34;&gt;How to pass environment variables to shinyapps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;iv-sidebar-구성&#34;&gt;IV. Sidebar 구성&lt;/h2&gt;
&lt;p&gt;이제 본격적으로 시각화를 구현하기에 앞서서 슬라이드형 날짜를 구성해보자.&lt;/p&gt;
&lt;h2 id=&#34;1-전역변수-지정&#34;&gt;(1) 전역변수 지정&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;global chunk&lt;/code&gt;에 아래와 같이 추가적으로 코드를 입력한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 날짜 지정&lt;/span&gt;
corona_date &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.Date&lt;/span&gt;(corona&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;dateRep)

&lt;span style=&#34;color:#75715e&#34;&gt;# 특정 Input값이 없을 경우 대비&lt;/span&gt;
variable &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; F
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;위 코드를 지정했다면, 아래와 같이 소스코드를 작업한 뒤 결과물을 빠르게 확인한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;Inputs {.sidebar data-width=300}
-----------------------------------------------------------------------
원하는 날짜에 놓고 &lt;span style=&#34;color:#e6db74&#34;&gt;`Button`&lt;/span&gt;을 누르세요. 

&lt;span style=&#34;color:#e6db74&#34;&gt;```r
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;uiOutput&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Slider&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#a6e22e&#34;&gt;sliderInput&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;day1&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Day&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;min&lt;/span&gt;(corona_date), &lt;span style=&#34;color:#a6e22e&#34;&gt;max&lt;/span&gt;(corona_date),
                    value &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;max&lt;/span&gt;(corona_date)), animate &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; T, step &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)

&lt;span style=&#34;color:#a6e22e&#34;&gt;renderUI&lt;/span&gt;({
    &lt;span style=&#34;color:#a6e22e&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;is.null&lt;/span&gt;(input&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;variable)){
    }else{
      &lt;span style=&#34;color:#a6e22e&#34;&gt;if&lt;/span&gt;(input&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;variable &lt;span style=&#34;color:#f92672&#34;&gt;%in%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cases&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;deaths&amp;#34;&lt;/span&gt;)){
        &lt;span style=&#34;color:#a6e22e&#34;&gt;sliderInput&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;day1&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Day&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;min&lt;/span&gt;(corona_date), &lt;span style=&#34;color:#a6e22e&#34;&gt;max&lt;/span&gt;(corona_date),
                    value &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;max&lt;/span&gt;(corona_date)), animate &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; T, step &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
        }else{
        &lt;span style=&#34;color:#a6e22e&#34;&gt;sliderInput&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;day2&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Day&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;min&lt;/span&gt;(corona_date), &lt;span style=&#34;color:#a6e22e&#34;&gt;max&lt;/span&gt;(corona_date),
                    value &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;max&lt;/span&gt;(corona_date)&lt;span style=&#34;color:#ae81ff&#34;&gt;-7&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;max&lt;/span&gt;(corona_date)), animate &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; T, step &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
        } &lt;span style=&#34;color:#75715e&#34;&gt;# else&lt;/span&gt;
    } &lt;span style=&#34;color:#75715e&#34;&gt;# is.null&lt;/span&gt;
  })
&lt;span style=&#34;color:#e6db74&#34;&gt;```&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/coronaProject/project_02/project_03.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;추가적으로 더 넣을 내용이 생기면 업데이트 하겠다.&lt;/p&gt;
&lt;h2 id=&#34;v-time-series-데이터-작성&#34;&gt;V. Time Series 데이터 작성&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Shiny App&lt;/code&gt;을 작성할 때, 특히 시각화와 데이터 처리와 관련해서 작업할 때는 &lt;code&gt;R Markdown&lt;/code&gt;에서 하는 것보다, 일반 &lt;code&gt;.R&lt;/code&gt;파일을 하나 생성해서 빠르게 구현하는 것을 추천한다.&lt;/p&gt;
&lt;p&gt;강사가 작업할 Time Series 시각화는 &lt;code&gt;dygraphs&lt;/code&gt; 패키지를 할용하려고 한다. 참고로 강사 역시, dygraphs 패키지를 이전에 사용해본적은 없다! 즉, 현재 듣는 수강생과 동일한 입장에서 작업하는 것임을 알고, 자신감 있게 작업하기를 바란다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.r-graph-gallery.com/317-time-series-with-the-dygraphs-library.html&#34;&gt;Time series visualization with the dygraphs package&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;강사가 R 에디터에서 빠르게 작업한 전체 소스코드는 아래와 같다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# load data in &amp;#39;global&amp;#39; chunk so it can be shared by all users of the dashboard&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(mongolite)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(tidyverse)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(dygraphs)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(xts)

collection &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;covid_19&amp;#34;&lt;/span&gt; 
db &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;learningspoons&amp;#39;&lt;/span&gt;
mongo_id &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Sys.getenv&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MONGO_ID&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;# 보안 유지를 위해 가렸다.(실무에서는 이렇게 작업하라고 권유하는 것임!) &lt;/span&gt;
mongo_pw &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Sys.getenv&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MONGO_PW&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;# (실무에서는 이렇게 작업하라고 권유하는 것임!)  &lt;/span&gt;

mongo_url &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;paste0&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;mongodb+srv://&amp;#39;&lt;/span&gt;, mongo_id, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;:&amp;#39;&lt;/span&gt;,mongo_pw,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;@learningspoons-rhpei.gcp.mongodb.net/&amp;#39;&lt;/span&gt;)

conn &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;mongo&lt;/span&gt;(collection &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; collection, 
              db &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; db, 
              url &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mongo_url)

&lt;span style=&#34;color:#75715e&#34;&gt;# get data&lt;/span&gt;
corona &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; conn&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;find&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{}&amp;#34;&lt;/span&gt;)

&lt;span style=&#34;color:#75715e&#34;&gt;# 날짜 변환&lt;/span&gt;
corona&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;dateRep &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.Date&lt;/span&gt;(corona&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;dateRep)

&lt;span style=&#34;color:#75715e&#34;&gt;# summarise&lt;/span&gt;
corona2 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; corona &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;group_by&lt;/span&gt;(dateRep) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;summarise&lt;/span&gt;(total_cases &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt;(cases), 
            total_deaths &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt;(deaths))

cases_data &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;xts&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; corona2[, &lt;span style=&#34;color:#ae81ff&#34;&gt;-1&lt;/span&gt;], order.by &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; corona2&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;dateRep)
p &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dygraph&lt;/span&gt;(cases_data) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;dyOptions&lt;/span&gt;(drawPoints &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;, pointSize &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, fillGraph&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;)
p
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/coronaProject/project_02/project_04.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;이제 &lt;code&gt;R Markdown&lt;/code&gt;에 응용만 하면 된다. 그런데, 여기서 주의점! &lt;code&gt;shiny tutorial&lt;/code&gt;에서 패키지 설명서를 잘 읽었다면, interactive graph package와 연동이 잘 된다는 걸 기억했으면 좋겠다. 즉, 생각보다 쉽게 작업할 수 있다는 뜻이다. &lt;code&gt;dygraphs&lt;/code&gt; 패키지 설명서를 다시 한번 읽어보자.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://rstudio.github.io/dygraphs/shiny.html&#34;&gt;Using in Shiny Applications&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ui.R&lt;/code&gt;코드에서 &lt;code&gt;dygraphOutput(&amp;quot;dygraph&amp;quot;)&lt;/code&gt;을 봤으면 좋겠다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;이런 형태로 소스코드를 응용할 것이다. 잘 따라와주기를 바란다.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;corona_xts &amp;lt;- reactive({
  temp &amp;lt;- corona %&amp;gt;% 
  mutate(dateRep = as.Date(dateRep)) %&amp;gt;% 
  group_by(dateRep) %&amp;gt;% 
  summarise(total_cases = sum(cases), 
            total_deaths = sum(deaths))
  xts::xts(x = temp[, -1], order.by = temp$dateRep)
})

renderDygraph({
  dygraph(corona_xts(), height = 400) %&amp;gt;% 
  dyHighlight(highlightCircleSize = 5, 
              highlightSeriesBackgroundAlpha = 0.2,
              hideOnMouseOut = FALSE) %&amp;gt;% 
  dyOptions(drawPoints = TRUE, 
            pointSize = 4, 
            fillGraph=TRUE, 
            axisLineWidth = 1.5)
})
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/coronaProject/project_02/project_05.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;위와 같은 형태로 나오면 완성이다. 아쉽지만, 아직은 &lt;code&gt;date&lt;/code&gt;와 연동된 것은 아니다. &lt;code&gt;date&lt;/code&gt;와 연동하려면, 보다 더 많은 작업을 해야 한다! 아직은 좀 더 기다리자.&lt;/p&gt;
&lt;p&gt;다음 시간에는 &lt;code&gt;Bubble Chart&lt;/code&gt;를 작성하는 코드를 실습해보자.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Pray for Victims of Covid_19. Contribution to them with this tutorial.&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Leaflet for R</title>
      <link>https://chloevan.github.io/r/graph01_leaflet/</link>
      <pubDate>Tue, 17 Mar 2020 20:33:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/graph01_leaflet/</guid>
      <description>&lt;h2 id=&#34;1-introduction&#34;&gt;1. Introduction&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Leaflet&lt;/code&gt; 패키지는 동적 지도 시각화를 위한 자바스크립트-오픈소스 기반 라이브러리입니다. 일반적인 기업 회사 뿐만 아니라 GIS 전문 회사인 &lt;a href=&#34;http://www.openstreetmap.org/&#34;&gt;OpenStreetMap&lt;/a&gt;, &lt;a href=&#34;http://www.mapbox.com/&#34;&gt;Mapbox&lt;/a&gt;, 그리고 &lt;a href=&#34;http://cartodb.com/&#34;&gt;CartoDB&lt;/a&gt;에서도 이 패키지를 사용하고 있습니다.&lt;/p&gt;
&lt;p&gt;R의 &lt;code&gt;leaflet&lt;/code&gt; 패키지는 일종의 자바스크립트의 &lt;code&gt;Leaflet&lt;/code&gt;을 쉽게 연동(Integrate) 할 수 있도록 도와 주는 패키지입니다.&lt;/p&gt;
&lt;h2 id=&#34;2-features&#34;&gt;2. Features&lt;/h2&gt;
&lt;p&gt;패키지의 주요 특징은 아래와 같습니다. 오역 방지를 위해 원문에 있는 내용을 그대로 사용했습니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Interactive panning/zooming&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Compose maps using arbitrary combinations of:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Map tiles&lt;/li&gt;
&lt;li&gt;Markers&lt;/li&gt;
&lt;li&gt;Polygons&lt;/li&gt;
&lt;li&gt;Lines&lt;/li&gt;
&lt;li&gt;Popups&lt;/li&gt;
&lt;li&gt;GeoJSON&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create maps right from the R console or RStudio&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Embed maps in knitr/R Markdown documents and Shiny apps&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;R 마크다운과 Shiny Apps에 연동이 쉽게 되는 장점이 있습니다.&lt;/li&gt;
&lt;li&gt;이는 보고서 작성 또는 대시보드 작성에 위 패키지를 연동할 수 있는 큰 장점이 있기 때문에 지도 분석과 관련된 업무를 하시는 분에게는 특히 강력히 추천합니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Easily render spatial objects from the &lt;code&gt;sp&lt;/code&gt; or &lt;code&gt;sf&lt;/code&gt; packages, or &lt;code&gt;data frames&lt;/code&gt; with &lt;code&gt;latitude/longitude&lt;/code&gt; columns&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use map bounds and mouse events to drive &lt;code&gt;Shiny&lt;/code&gt; logic&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Display maps in non spherical mercator projections&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Augment map features using chosen plugins from &lt;a href=&#34;http://leafletjs.com/plugins&#34;&gt;leaflet plugins repository&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;3-installation&#34;&gt;3. Installation&lt;/h2&gt;
&lt;p&gt;R 에디터 또는 콘솔창에서는 아래와 같이 입력 후 실행합니다.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;install.packages(&amp;quot;leaflet&amp;quot;)
# to install the development version from Github, run
# devtools::install_github(&amp;quot;rstudio/leaflet&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이렇게 한번 설치가 된 이후에는 &lt;a href=&#34;http://rmarkdown.rstudio.com/&#34;&gt;R마크다운&lt;/a&gt; 또는 &lt;a href=&#34;http://shiny.rstudio.com/&#34;&gt;Shiny&lt;/a&gt;앱에서 &lt;code&gt;library(leaflet)&lt;/code&gt;을 호출하여 사용할 수 있습니다.&lt;/p&gt;
&lt;h2 id=&#34;4-basic-usage&#34;&gt;4. Basic Usage&lt;/h2&gt;
&lt;p&gt;보통 아래와 같은 단계로 사용을 합니다. &lt;a href=&#34;https://ggplot2.tidyverse.org/&#34;&gt;ggplot2&lt;/a&gt; 패키지를 사용하시는 분들은 데이터 + 기하함수 + 설정 등 이러한 형태로 코드를 작성한 기억을 떠올리시면 쉽게 이해가 되실 것입니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;우선 &lt;code&gt;leaflet()&lt;/code&gt; 함수에 데이터프레임을 넣은 후 map 객체를 생성합니다.&lt;/li&gt;
&lt;li&gt;그다음 특징에 맞춰서 layer 관련 함수를 추가합니다.
&lt;ul&gt;
&lt;li&gt;addTiles()&lt;/li&gt;
&lt;li&gt;addMarkers()&lt;/li&gt;
&lt;li&gt;addPolygons()&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;각 함수들을 연결할 때에는 Pipe Operator인 R의 강력한 무기인 &lt;code&gt;%&amp;gt;%&lt;/code&gt;을 사용합니다.&lt;/li&gt;
&lt;li&gt;만약에 &lt;code&gt;%&amp;gt;%&lt;/code&gt;인 익숙하지 않다면 &lt;a href=&#34;https://github.com/smbache/magrittr&#34;&gt;magrittr&lt;/a&gt; 에서 구체적인 내용을 살펴봅니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;간단한 그래프를 작성합니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(leaflet)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(htmlwidgets)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(htmltools)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(widgetframe)

m &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;leaflet&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;addTiles&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# Add default OpenStreetMap map tiles&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;addMarkers&lt;/span&gt;(lng&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;174.768&lt;/span&gt;, lat&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;-36.852&lt;/span&gt;, popup&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;The birthplace of R&amp;#34;&lt;/span&gt;)

&lt;span style=&#34;color:#a6e22e&#34;&gt;saveWidget&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;frameableWidget&lt;/span&gt;(m),&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;leaflet.html&amp;#39;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;결과물은 다음을 클릭해서 확인합니다. &lt;a href=&#34;https://chloevan.github.io/r/leaflet.html&#34;&gt;https://chloevan.github.io/r/leaflet.html&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>