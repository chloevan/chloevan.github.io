<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python Basic on Data Science | ChloEvan</title>
    <link>https://chloevan.github.io/tags/python-basic/</link>
    <description>Recent content in Python Basic on Data Science | ChloEvan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 09 Jul 2020 12:00:47 +0900</lastBuildDate>
    
	<atom:link href="https://chloevan.github.io/tags/python-basic/rss.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How to create my own function and module</title>
      <link>https://chloevan.github.io/python/python_edu/01_basic/chapter_3_6_def/</link>
      <pubDate>Thu, 09 Jul 2020 12:00:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/01_basic/chapter_3_6_def/</guid>
      <description>I. 개요  나만의 함수를 작성해 본다. 함수의 정의와 문서화의 기본에 대해 배운다.  II. 기존 내장 함수  함수는 특정 기능을 수행하는 코드를 의미한다. 함수는 Sum(), Len()을 의미한다.  x = [1,2,3,4,5] print(sum(x)) print(len(x)) 5  III 사용자 정의 함수 예제  이제 사용자 정의 함수를 사용하자. 함수 선언 시, def는 define의 약자다.  def my_avg(x): sum_var = sum(x) len_var = len(x) return sum_var / len_var print(my_avg(x)) 3.0  </description>
    </item>
    
    <item>
      <title>머신러닝 데이터 전처리 1 - 결측치 처리</title>
      <link>https://chloevan.github.io/python/python_edu/04_machinelearning/chapter_4_1_handling_missing_values/</link>
      <pubDate>Wed, 08 Jul 2020 18:00:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/04_machinelearning/chapter_4_1_handling_missing_values/</guid>
      <description>개요  EDA를 진행할 때, 결측치가 있는 데이터를 시각화 하여 결측치 유무를 파악하였다.  참조: EDA with Housing Price Prediction - Handling Missing Values   이번 포스트에서는 결측치를 처리하는 코드를 작성할 것이다.  I. 구글 드라이브 연동  구글 코랩을 시작하면 언제든지 가장 먼저 해야 하는 것은 드라이브 연동이다.  from google.colab import drive # 패키지 불러오기  from os.path import join ROOT = &amp;#34;/content/drive&amp;#34; # 드라이브 기본 경로 print(ROOT) # print content of ROOT (Optional) drive.</description>
    </item>
    
    <item>
      <title>Pandas Data Handling 1편</title>
      <link>https://chloevan.github.io/python/python_edu/02_datatransformation/pandas_data_handling_1/</link>
      <pubDate>Sun, 05 Jul 2020 16:00:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/02_datatransformation/pandas_data_handling_1/</guid>
      <description>I. Kaggle에서 타이타닉 데이터 가져오기  캐글 데이터 가져오는 예제는 본 Kaggle with Google Colab에서 참고하기를 바란다. 먼저 kaggle 패키지를 설치한다.  !pip install kaggle Requirement already satisfied: kaggle in /usr/local/lib/python3.6/dist-packages (1.5.6) Requirement already satisfied: urllib3&amp;lt;1.25,&amp;gt;=1.21.1 in /usr/local/lib/python3.6/dist-packages (from kaggle) (1.24.3) Requirement already satisfied: six&amp;gt;=1.10 in /usr/local/lib/python3.6/dist-packages (from kaggle) (1.12.0) Requirement already satisfied: python-dateutil in /usr/local/lib/python3.6/dist-packages (from kaggle) (2.8.1) Requirement already satisfied: tqdm in /usr/local/lib/python3.6/dist-packages (from kaggle) (4.41.1) Requirement already satisfied: python-slugify in /usr/local/lib/python3.</description>
    </item>
    
    <item>
      <title>Python for loop example</title>
      <link>https://chloevan.github.io/python/python_edu/01_basic/chapter_3_5_for_loop_example/</link>
      <pubDate>Mon, 29 Jun 2020 10:10:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/01_basic/chapter_3_5_for_loop_example/</guid>
      <description>I. 개요  지난 시간에 for_loop의 기본적인 개념에 대해 살펴봤다.  참조: [Python] for loops in different ways   이번 시간에는 for_loop의 실제 다양한 활용 방안에 대해 살펴본다.  II. 데이터 시각화  변수의 개수에 상관없이 for-loop를 활용하면 무한대로 시각화를 작성할 수 있다. 빠르게 코드로 확인해본다. IRIS 데이터를 수집하는 코드를 작성한다.  import numpy as np import pandas as pd import matplotlib.pyplot as plt import seaborn as sns from sklearn import datasets iris = datasets.</description>
    </item>
    
    <item>
      <title>Python for loops in different ways</title>
      <link>https://chloevan.github.io/python/python_edu/01_basic/chapter_3_4_for_loop/</link>
      <pubDate>Sat, 27 Jun 2020 18:42:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/01_basic/chapter_3_4_for_loop/</guid>
      <description>I. 개요  여러 형태의 반복문을 배우고 실습한다. 한줄로 작성하는 반복문을 배우고 실습한다.  II. For Loop Basic Syntax  파이썬의 기본 문법은 아래와 같다.  for &amp;lt;변수&amp;gt; in &amp;lt;iterable&amp;gt;: &amp;lt;코드&amp;gt;  여기에서 iterable의 개념은 list와 tuple을 의미한다. 간단하게 for_loop 코드를 작성해보자.  우선, A라는 리스트 객체를 작성한다. for_loop를 활용해서 리스트 안에 있는 것을 하나씩 출력한다.    A = [&amp;#34;철수&amp;#34;, &amp;#34;영희&amp;#34;, &amp;#34;길동&amp;#34;] for i in A: print(i) 철수 영희 길동 (1) Iterables  Iteration을 한국어로 번역하면 되풀이다.</description>
    </item>
    
    <item>
      <title>If else, and more</title>
      <link>https://chloevan.github.io/python/python_edu/01_basic/chapter_3_3_if_else/</link>
      <pubDate>Thu, 25 Jun 2020 21:42:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/01_basic/chapter_3_3_if_else/</guid>
      <description>I. 개요  조건문에 대해 배우고 실습하는 시간을 갖는다. else와 elif에 대해 배우고 실습한다. 한줄로 작성하는 if_else에 대해 배우고 실습한다.  II. If 조건문 소개  Excel을 배운 사람이라면 누구나 아는 문법이다.  다만, 위 문법을 파이썬 언어에 맞게 변형한 것이다.    if &amp;lt;조건=True&amp;gt;: &amp;lt;코드1&amp;gt; &amp;lt;코드2&amp;gt; (1) 언제 실행되는가?   위 구문의 뜻이 무엇인가?
 프로그래밍 처음 입문하는 사람이라면, 조금 난해할 수 있다. 그러나, 절대 어렵지 않다. 조건이 True 이면 &amp;lt;코드1&amp;gt;과 &amp;lt;코드2&amp;gt;를 실행한다.</description>
    </item>
    
    <item>
      <title>About Dictionaries</title>
      <link>https://chloevan.github.io/python/python_edu/01_basic/chapter_3_2_dictionary/</link>
      <pubDate>Sat, 20 Jun 2020 10:42:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/01_basic/chapter_3_2_dictionary/</guid>
      <description>I. 개요  이번 시간부터 본격적으로 파이썬의 기초 자료형에 대해 간단한 튜토리얼을 준비했다. 데이터 분석과는 큰 관계가 없을 수 있지만, 데이터 정제 할 때, 도움이 되기도 한다. 그 중에서 면접의 단골질문과 같은 Dictionary에 대해 나누는 시간을 가졌다.  II. Dictionary의 기본적인 특징  Dictionary는 영어 원뜻 그대로 사전을 생각하면 된다. Dictionary는 List와 유사한 부분이 많다.  List와 같이 Mutable이라는 뜻을 포함한다. List와 같이 다른 Dictionary, list 등을 포함시킬 수 있다.   차이점은 원소에 대한 접근방법의 차이다.</description>
    </item>
    
    <item>
      <title>The difference betwen Lists and Tuples in Python</title>
      <link>https://chloevan.github.io/python/python_edu/01_basic/chapter_3_1_lists_and_tuples/</link>
      <pubDate>Thu, 18 Jun 2020 01:10:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/01_basic/chapter_3_1_lists_and_tuples/</guid>
      <description>I. 개요  이번 시간부터 본격적으로 파이썬의 기초 자료형에 대해 간단한 튜토리얼을 준비했다. 데이터 분석과는 큰 관계가 없을 수 있지만, 데이터 정제 할 때, 도움이 되기도 한다. 그 중에서 면접의 단골질문과 같은 Lists &amp;amp; Tuple에 대해 나누는 시간을 가졌다.  II. Lists  먼저 Lists는 [] 형태로 정의가 된다.  alphabet = [&amp;#39;A&amp;#39;, &amp;#39;B&amp;#39;, &amp;#39;C&amp;#39;, &amp;#39;D&amp;#39;] print(alphabet) [&#39;A&#39;, &#39;B&#39;, &#39;C&#39;, &#39;D&#39;]   코드는 간단하다. 그러나 함의하고 있는 내용은 다음과 같다.</description>
    </item>
    
    <item>
      <title>EDA with Pandas - Data Merge</title>
      <link>https://chloevan.github.io/python/python_edu/02_datatransformation/chapter_1_4_python_pandas_merge_solution/</link>
      <pubDate>Fri, 05 Jun 2020 13:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/02_datatransformation/chapter_1_4_python_pandas_merge_solution/</guid>
      <description>I. 개요  실무 데이터에서는 여러가지 데이터를 만나는 경우가 흔하다. 이 때, SQL에서 데이터를 직접 병합하는 방법이 좋다. 그러나, 현실적으로 DB에 접근하는 권한을 가진 경우는 흔하지는 않다. 현재 운영중인 서비스상에 DB를 직접 만지는 경우는 거의 없다 (DBA가 할지도..) 따라서, 데이터분석가는 흩어져 있는 데이터 Dump를 받게 될 가능성이 큰데, 이 때 Python에서 데이터를 병합하는 작업을 진행하게 된다. Kaggle이나 각종 경진대회에 출전하게 되면 서로 다른 데이터를 합쳐야 하는 경우가 매우 많다.  II.</description>
    </item>
    
    <item>
      <title>EDA with Python - Pandas</title>
      <link>https://chloevan.github.io/python/python_edu/01_basic/chapter_1_3_eda_with_pandas/</link>
      <pubDate>Mon, 01 Jun 2020 18:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/01_basic/chapter_1_3_eda_with_pandas/</guid>
      <description>I. 개요  Pandas는 panel data의 의미를 가지고 있다. 흔히, 엑셀 데이터로 불리우는 관계형(Relational) 또는 레이블링된(Labeling)된 데이터를 보다 쉽게, 직관적으로 작업할 수 있도록 설계되어 있다. Python에서 데이터 분석을 수행하기 위한 매우 기초적이며 높은 수준의 문법을 제공한다. Pandas는 크게 Series &amp;amp; DataFrame을 다룰 수 있도록 기초 문법을 제공하고 있다. Pandas가 다루는 여러 종류의 데이터를 확인해보자.  SQL 테이블 또는 Excel 스프레드시트에서와 같이 형식의 행과 열이 있는 표 형식 데이터 순서 및 순서 지정되지 않은(고정 빈도일 필요는 없음) 시계열 데이터.</description>
    </item>
    
    <item>
      <title>EDA with Python - NumPy Broadcasting</title>
      <link>https://chloevan.github.io/python/python_edu/01_basic/chapter_1_2_eda_with_numpy_broadcasting/</link>
      <pubDate>Mon, 01 Jun 2020 13:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/01_basic/chapter_1_2_eda_with_numpy_broadcasting/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
I. 개요  NumPy는 C언어로 구성되었으며, 고성능의 수치계산을 위해 나온 패키지이며, Numerical Python의 약자이다. Python을 활용한 데이터 분석을 수행할 때, 그리고 데이터 시각화나 전처리를 수행할 때, NumPy는 매우 자주 사용되기 때문에 한번쯤은 꼭 다듬고 가는 것이 중요하다. 이전 포스트에서는 Python - NumPy 소개 및 다양한 객체 생성에 대해 다루었으니, 본 포스트 읽기에 앞서서 기본적인 개념에 대해 확인하기를 바란다.</description>
    </item>
    
    <item>
      <title>EDA with Python - NumPy basic</title>
      <link>https://chloevan.github.io/python/python_edu/01_basic/chapter_1_1_eda_with_numpy_basic/</link>
      <pubDate>Sun, 31 May 2020 13:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/01_basic/chapter_1_1_eda_with_numpy_basic/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
I. 개요  파이썬 처음 입문하는 사람들을 위해서 작성하였다. 탐색작 자료분석(EDA: Exploratory Data Analysis)을 위해 가장 기초적인 뼈대가 되는 NumPy에 대해서 학습하도록 합니다.  II. Array 만들기  1차원, 2차원, 3차원의 Array를 만들고 학습니다. 먼저 numpy 라이브러리를 불러옵니다.  # import numpy import numpy as np print(np.</description>
    </item>
    
    <item>
      <title>Python - NumPy 소개 및 다양한 객체 생성</title>
      <link>https://chloevan.github.io/python/basic/numpy_array_creation/</link>
      <pubDate>Fri, 15 May 2020 16:12:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/basic/numpy_array_creation/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
I. 개요  NumPy는 C언어로 구성되었으며, 고성능의 수치계산을 위해 나온 패키지이며, Numerical Python의 약자이다. Python을 활용한 데이터 분석을 수행할 때, 그리고 데이터 시각화나 전처리를 수행할 때, NumPy는 매우 자주 사용되기 때문에 한번쯤은 꼭 다듬고 가는 것이 중요하다. 독자의 가독성을 위해 두번에 걸쳐 나눠서 연재하려고 한다.</description>
    </item>
    
    <item>
      <title>Python - Lambda and List Comprehension</title>
      <link>https://chloevan.github.io/python/basic/lambda_and_list_comprehension/</link>
      <pubDate>Tue, 12 May 2020 17:12:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/basic/lambda_and_list_comprehension/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
I. 개요 Python을 활용한 데이터전처리를 수행할 때, Lambda and List Comprehension 활용하면 매우 handy한 경험을 할 수 있다. 특히, 코드 수행 시, for-loop가 많을 때 유용하다.
II. Lambda Expression 우선 Lambda의 표현 방법은 아래와 같다.
lambda 인자 : 표현식 어떻게 사용할 수 있을까요?</description>
    </item>
    
    <item>
      <title>Python Basic Syntax - list(1)</title>
      <link>https://chloevan.github.io/python/basic/basic_syntax_list_1/</link>
      <pubDate>Tue, 12 May 2020 11:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/basic/basic_syntax_list_1/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
본 포스트에서는 짧게 list를 만드는 법과, 값을 추가하는 것에 대해 작성합니다.
I. list 개요 list는 순서는 순서가 있는 집합이며, [] 형태를 가집니다. list는 (integer, float, string, etc) 등으로 구성되는데, 서로 다른 데이터 값이 들어올 수도 있다. 아래 코드를 보자.
# empty list my_list = [] # 숫자형 list num_list = [1, 2, 3] # 문자형 list chr_list = [&amp;#39;A&amp;#39;, &amp;#39;B&amp;#39;, &amp;#39;C&amp;#39;] 리스트는 또다른 리스트를 포함할 수 도 있다.</description>
    </item>
    
    <item>
      <title>basic_loop</title>
      <link>https://chloevan.github.io/python/basic/basic_loop/</link>
      <pubDate>Sat, 02 May 2020 01:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/basic/basic_loop/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
I. 개요 파이썬 처음 입문하는 사람들을 위해서 작성하였다. Python으로 코드를 작성하다보면, 매우 빈번히 For-loop 구문을 확인할 수 있다. 간단한 코드로 For-loop를 확인해보자.
II. Loop over list 간단하게 for-loop를 작성해보자.
# double list num = [1.72, 1.67, 1.71, 1.89] for height in num: print(height) 1.</description>
    </item>
    
  </channel>
</rss>