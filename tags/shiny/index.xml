<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Shiny on Data Science | ChloEvan</title>
    <link>https://chloevan.github.io/tags/shiny/</link>
    <description>Recent content in Shiny on Data Science | ChloEvan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 18 Apr 2020 17:15:39 +0900</lastBuildDate>
    
        <atom:link href="https://chloevan.github.io/tags/shiny/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Shiny 프로젝트 Review &amp; 더 알아볼 것</title>
      <link>https://chloevan.github.io/r/shiny/project_final/</link>
      <pubDate>Sat, 18 Apr 2020 17:15:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/shiny/project_final/</guid>
      <description>&lt;h2 id=&#34;공지&#34;&gt;공지&lt;/h2&gt;
&lt;p&gt;이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다&lt;/p&gt;
&lt;p&gt;이번에 준비한 Tutorial 코로나 세계현황을 &lt;code&gt;Shiny Dashboard&lt;/code&gt;로 만들어 가는 과정을 담았다.&lt;/p&gt;
&lt;h2 id=&#34;i-shiny-tutorial-소개&#34;&gt;I. Shiny Tutorial 소개&lt;/h2&gt;
&lt;p&gt;처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_01/&#34;&gt;shiny tutorial 01 - get started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_02/&#34;&gt;shiny tutorial 02 - Shiny Structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_03/&#34;&gt;shiny tutorial 03 - HTML content&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_04/&#34;&gt;shiny tutorial 04 - Shiny Layouts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_05/&#34;&gt;shiny tutorial 05 - Sharing Apps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_06/&#34;&gt;shiny tutorial 06 - shinydashboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_07/&#34;&gt;shiny tutorial 07 - flexdashboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_08/&#34;&gt;shiny tutorial 08 - HTML, CSS 적용&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ii-shiny-project&#34;&gt;II. Shiny Project&lt;/h2&gt;
&lt;p&gt;현재 진행중인 프로젝트가 궁금하다면 아래를 확인해보자.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_01/&#34;&gt;Corona Shiny Project 1 - Get Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_02/&#34;&gt;Corona Shiny Project 2 - Visusalization (Time Series)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_03/&#34;&gt;Corona Shiny Project 3 - Visusalization (Bubble Chart)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_04/&#34;&gt;Corona Shiny Project 4 - Visusalization (Map Chart)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_05/&#34;&gt;Corona Shiny Project 5 - Chart with DateInput&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_06_01/&#34;&gt;Corona Shiny Project 6_1 - 데이터 전처리&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_06_02/&#34;&gt;Corona Shiny Project 6_2 - Chart Automation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;iii-현재-게시중인-다양한-종류의-shiny-app&#34;&gt;III. 현재 게시중인 다양한 종류의 Shiny App&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;(참고) 가급적 PC에서 확인하시기를 바란다.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.shinyapps.io/source/&#34;&gt;영화관련 데이터&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.shinyapps.io/fashion/&#34;&gt;웹크롤링 데이터&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.shinyapps.io/shinyProject_Test/&#34;&gt;ShinyTest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.shinyapps.io/corona_19/&#34;&gt;Corona_Ref&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;강사에게 영감을 준 코로나 대시보드&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.shinyapps.io/COVID_19_Project/&#34;&gt;Corona_Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;iv-더-알아볼-것&#34;&gt;IV. 더 알아볼 것&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/datastorm-open/shinymanager&#34;&gt;로그인 기능&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://shiny.rstudio.com/articles/modules.html&#34;&gt;Shiny App 모듈화&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;v-결론&#34;&gt;V. 결론&lt;/h2&gt;
&lt;p&gt;약 2주동안 작성한 것 같다. 위 프로젝트는 R에 대해 처음 배우는 사람에게는 조금 난해할 수 있다. 데이터 가공 및 시각화에 대한 구체적인 설명을 하기에는 사실 공간도 부족하고 글의 본질에도 조금 벗어난다.&lt;/p&gt;
&lt;p&gt;대시보드의 본질은 매일매일 봐야하는 데이터를 자동화(&lt;code&gt;Automation&lt;/code&gt;)의 기능이 있다. 강사가 작업한 &lt;code&gt;Corona와 웹크롤링 대시보드&lt;/code&gt;는 외부 또는 수동으로 데이터를 계속 매일매일 업데이트 해주면서 쌓아가고 있는 대시보드이다. 한번 만든 이후에는 현재 별다른 코딩을 추가하지도 않고 있다. 이것외에 더 중요한 &lt;code&gt;Metric&lt;/code&gt;이 나온다면 그 때 다시 대시보드가 하나씩 추가가 될 것이다. 물론 이건 현업에서의 일이다.&lt;/p&gt;
&lt;p&gt;결국엔 이러한 과정도 매일매일 꾸준하게 하지 않으면 잊게 될 것이다. 강사가 이러한 글을 블로그에 담을 때는 결국 코드의 재사용성도 염두에 두었다. 지도 시각화 같은 경우에는 여간해서는 바뀌지 않을 것이고, 디자인만 조금 손 보면 대시보드는 늘 그럴싸하게 나오니까 말이다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Shiny&lt;/code&gt;의 대장정은 여기까지이다.&lt;/p&gt;
&lt;p&gt;아! 로그인 기능과 클라우드 서버를 통한 배포! 이 부분은 추후에 추가적으로 업데이트 한다. (언제가 될지는 모르겠지만&amp;hellip;) 내용적으로 어려운 건 아니다. 한번 해보면 된다. 내용적으로 어려운 건 언제나 분석(Analytics)이다.&lt;/p&gt;
&lt;h2 id=&#34;vi-reference&#34;&gt;VI. Reference&lt;/h2&gt;
&lt;p&gt;shinydashboard., (2020). shinydashboard. Retrieved April 1, 2020, from &lt;a href=&#34;https://rstudio.github.io/shinydashboard/index.html/&#34;&gt;https://rstudio.github.io/shinydashboard/index.html/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;flexdashboard, (2020). flexdashboard Retrieved April 2, 2020, from &lt;a href=&#34;https://rmarkdown.rstudio.com/flexdashboard/index.html&#34;&gt;https://rmarkdown.rstudio.com/flexdashboard/index.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;shinyapps.io team., (2020, March 5). shinyapps.io user guide. Retrieved March 31, 2020, from &lt;a href=&#34;https://docs.rstudio.com/shinyapps.io/&#34;&gt;https://docs.rstudio.com/shinyapps.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;김진성. (2018). 빅데이터 분석을 위한 R 프로그래밍. 서울: 가메출판사.&lt;/p&gt;
&lt;p&gt;Grolemund, G., Cheng, J., &amp;amp; Cetinkaya-Rundel, M. (2017, August 9). Customize your UI with HTML. Retrieved from &lt;a href=&#34;https://shiny.rstudio.com/articles/html-tags.html&#34;&gt;https://shiny.rstudio.com/articles/html-tags.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Allaire. (2014, January 24). Application layout guide. Retrieved March 30, 2020, from &lt;a href=&#34;https://shiny.rstudio.com/articles/layout-guide.html&#34;&gt;https://shiny.rstudio.com/articles/layout-guide.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Grolemund, Garrett. and Cheng, Joe., (2014). Style your apps with CSS Retrieved April 5, 2020, from &lt;a href=&#34;https://shiny.rstudio.com/articles/css.html&#34;&gt;https://shiny.rstudio.com/articles/css.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;FABACHER, Thibaut. “Covid-19 Interactive Map (Using R with Shiny, Leaflet and Dplyr).” R, R-Bloggers, 12 Mar. 2020, &lt;a href=&#34;http://www.r-bloggers.com/covid-19-interactive-map-using-r-with-shiny-leaflet-and-dplyr/&#34;&gt;www.r-bloggers.com/covid-19-interactive-map-using-r-with-shiny-leaflet-and-dplyr/&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Corona Shiny Project 6_2 - Chart Automation</title>
      <link>https://chloevan.github.io/r/shiny/project_06_02/</link>
      <pubDate>Sat, 18 Apr 2020 14:15:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/shiny/project_06_02/</guid>
      <description>&lt;h2 id=&#34;공지&#34;&gt;공지&lt;/h2&gt;
&lt;p&gt;이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다&lt;/p&gt;
&lt;p&gt;이번에 준비한 Tutorial 코로나 세계현황을 &lt;code&gt;Shiny Dashboard&lt;/code&gt;로 만들어 가는 과정을 담았다.&lt;/p&gt;
&lt;h2 id=&#34;i-shiny-tutorial-소개&#34;&gt;I. Shiny Tutorial 소개&lt;/h2&gt;
&lt;p&gt;처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_01/&#34;&gt;shiny tutorial 01 - get started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_02/&#34;&gt;shiny tutorial 02 - Shiny Structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_03/&#34;&gt;shiny tutorial 03 - HTML content&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_04/&#34;&gt;shiny tutorial 04 - Shiny Layouts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_05/&#34;&gt;shiny tutorial 05 - Sharing Apps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_06/&#34;&gt;shiny tutorial 06 - shinydashboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_07/&#34;&gt;shiny tutorial 07 - flexdashboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_08/&#34;&gt;shiny tutorial 08 - HTML, CSS 적용&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ii-shiny-project&#34;&gt;II. Shiny Project&lt;/h2&gt;
&lt;p&gt;현재 진행중인 프로젝트가 궁금하다면 아래를 확인해보자.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_01/&#34;&gt;Corona Shiny Project 1 - Get Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_02/&#34;&gt;Corona Shiny Project 2 - Visusalization (Time Series)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_03/&#34;&gt;Corona Shiny Project 3 - Visusalization (Bubble Chart)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_04/&#34;&gt;Corona Shiny Project 4 - Visusalization (Map Chart)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_05/&#34;&gt;Corona Shiny Project 5 - Chart with DateInput&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_06_01/&#34;&gt;Corona Shiny Project 6_1 - 데이터 전처리)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;iii-데이터-전처리-리뷰&#34;&gt;III. 데이터 전처리 리뷰&lt;/h2&gt;
&lt;p&gt;처음 이글을 접하는 사람들을 위해 전체적인 코드를 다시 정리하였다. 처음부터 &lt;code&gt;shiny tutorial&lt;/code&gt;을 진행하는 것도 도움이 되지만, 우선 이번 강의의 목적은 &lt;code&gt;Chart Automation&lt;/code&gt;을 어떻게 활용하는지가 우선이기 때문에 데이터셋은 전처리된 데이터셋을 다시 정리한다.&lt;/p&gt;
&lt;p&gt;아래 코드대로 실행하면 되니, 큰 문제없이 따라와주기를 바란다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(rgdal)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## Loading required package: sp
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;## rgdal: version: 1.4-8, (SVN revision 845)
##  Geospatial Data Abstraction Library extensions to R successfully loaded
##  Loaded GDAL runtime: GDAL 2.4.2, released 2019/06/28
##  Path to GDAL shared files: /Library/Frameworks/R.framework/Versions/3.6/Resources/library/rgdal/gdal
##  GDAL binary built with GEOS: FALSE 
##  Loaded PROJ.4 runtime: Rel. 5.2.0, September 15th, 2018, [PJ_VERSION: 520]
##  Path to PROJ.4 shared files: /Library/Frameworks/R.framework/Versions/3.6/Resources/library/rgdal/proj
##  Linking to sp version: 1.3-2
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(readxl)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(httr)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(dplyr)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &#39;dplyr&#39;
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;## The following objects are masked from &#39;package:stats&#39;:
## 
##     filter, lag
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;## The following objects are masked from &#39;package:base&#39;:
## 
##     intersect, setdiff, setequal, union
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(stringr)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(tidyr)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(shiny)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(leaflet)

&lt;span style=&#34;color:#75715e&#34;&gt;# Excel URL Copy&lt;/span&gt;
url &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://www.ecdc.europa.eu/sites/default/files/documents/COVID-19-geographic-disbtribution-worldwide.xlsx&amp;#39;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# 파일 이름만 가져오기&lt;/span&gt;
getFileName &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;basename&lt;/span&gt;(url)

&lt;span style=&#34;color:#75715e&#34;&gt;# 지정된 디렉토리에 파일 다운로드 받기&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;download.file&lt;/span&gt;(url &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; url, destfile &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; getFileName)

&lt;span style=&#34;color:#75715e&#34;&gt;# 지정된 디렉토리에서 파일 업로드 하기&lt;/span&gt;
corona &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;read_excel&lt;/span&gt;(getFileName)

corona_date &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.Date&lt;/span&gt;(corona&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;dateRep)

countries &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;readOGR&lt;/span&gt;(dsn &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;~/Desktop/ne_50m_admin_0_countries&amp;#34;&lt;/span&gt;,
                     layer &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ne_50m_admin_0_countries&amp;#34;&lt;/span&gt;,
                     encoding &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;utf-8&amp;#34;&lt;/span&gt;,use_iconv &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; T,
                     verbose &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;)

countries&lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;data&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;POP_EST[ &lt;span style=&#34;color:#a6e22e&#34;&gt;which&lt;/span&gt;(countries&lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;data&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;POP_EST &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NA&lt;/span&gt;
countries&lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;data&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;POP_EST &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.numeric&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(countries&lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;data&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;POP_EST)) &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1000000&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;round&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)

corona &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;select&lt;/span&gt;(dateRep, countriesAndTerritories, cases) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 필요한 열만 추출한다. &lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;group_by_at&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;vars&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;cases)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# cases를 제외하고 모두 그룹을 한다는 뜻이다. &lt;/span&gt;
  dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(row_id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;n&lt;/span&gt;()) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ungroup&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# 그룹 인덱스를 만든다.&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;spread&lt;/span&gt;(key&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;dateRep, value&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;cases) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# &lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;select&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;row_id) &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; dataCases &lt;span style=&#34;color:#75715e&#34;&gt;# 인덱스 제거 후 corona2로 저장한다. &lt;/span&gt;

coronaConfirmed &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;left_join&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;data.frame&lt;/span&gt;(countries &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; countries&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;NAME &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(), 
                                              Pop &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; countries&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;POP_EST &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.numeric&lt;/span&gt;()), 
                             dataCases &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
                               &lt;span style=&#34;color:#a6e22e&#34;&gt;rename&lt;/span&gt;(countries &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; countriesAndTerritories)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
                               &lt;span style=&#34;color:#a6e22e&#34;&gt;filter&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;is.na&lt;/span&gt;(countries))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## Joining, by = &amp;quot;countries&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;## Warning: Column `countries` joining factor and character vector, coercing into
## character vector
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;coronaConfirmed&lt;span style=&#34;color:#a6e22e&#34;&gt;[is.na&lt;/span&gt;(coronaConfirmed)] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;

countries2 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;merge&lt;/span&gt;(countries,
                    coronaConfirmed,
                    by.x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;NAME&amp;#34;&lt;/span&gt;,
                    by.y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;countries&amp;#34;&lt;/span&gt;,
                    sort &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;처음 이글을 접한 사람들에게 여기에서 문제가 될만한 소스코드는 &lt;code&gt;readOGR&lt;/code&gt;에 해당하는 지도객체를 가져오는 문제인데, 이 부분은 강사가 작업한 &lt;a href=&#34;https://chloevan.github.io/r/shiny/project_04/&#34;&gt;Corona Shiny Project 4 - Visusalization (Map Chart)&lt;/a&gt;에서 추가학습 할 것을 권한다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;countries2&lt;/code&gt; 객체로 데이터를 &lt;code&gt;Merge&lt;/code&gt; 하였다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;이렇게 합쳐진 데이터의 데이터를 다시 보면 아래와 같다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;head&lt;/span&gt;(countries2&lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;data) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;select&lt;/span&gt;(NAME, Pop, &lt;span style=&#34;color:#a6e22e&#34;&gt;contains&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-&amp;#34;&lt;/span&gt;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;##          NAME      Pop 2019-12-31 2020-01-01 2020-01-02 2020-01-03 2020-01-04
## 241  Zimbabwe 13.80508          0          0          0          0          0
## 240    Zambia 15.97200          0          0          0          0          0
## 239     Yemen 28.03683          0          0          0          0          0
## 236   Vietnam 96.16016          0          0          0          0          0
## 235 Venezuela 31.30402          0          0          0          0          0
## 234   Vatican  0.00100          0          0          0          0          0
##     2020-01-05 2020-01-06 2020-01-07 2020-01-08 2020-01-09 2020-01-10
## 241          0          0          0          0          0          0
## 240          0          0          0          0          0          0
## 239          0          0          0          0          0          0
## 236          0          0          0          0          0          0
## 235          0          0          0          0          0          0
## 234          0          0          0          0          0          0
##     2020-01-11 2020-01-12 2020-01-13 2020-01-14 2020-01-15 2020-01-16
## 241          0          0          0          0          0          0
## 240          0          0          0          0          0          0
## 239          0          0          0          0          0          0
## 236          0          0          0          0          0          0
## 235          0          0          0          0          0          0
## 234          0          0          0          0          0          0
##     2020-01-17 2020-01-18 2020-01-19 2020-01-20 2020-01-21 2020-01-22
## 241          0          0          0          0          0          0
## 240          0          0          0          0          0          0
## 239          0          0          0          0          0          0
## 236          0          0          0          0          0          0
## 235          0          0          0          0          0          0
## 234          0          0          0          0          0          0
##     2020-01-23 2020-01-24 2020-01-25 2020-01-26 2020-01-27 2020-01-28
## 241          0          0          0          0          0          0
## 240          0          0          0          0          0          0
## 239          0          0          0          0          0          0
## 236          0          2          0          0          0          0
## 235          0          0          0          0          0          0
## 234          0          0          0          0          0          0
##     2020-01-29 2020-01-30 2020-01-31 2020-02-01 2020-02-02 2020-02-03
## 241          0          0          0          0          0          0
## 240          0          0          0          0          0          0
## 239          0          0          0          0          0          0
## 236          0          0          3          0          2          1
## 235          0          0          0          0          0          0
## 234          0          0          0          0          0          0
##     2020-02-04 2020-02-05 2020-02-06 2020-02-07 2020-02-08 2020-02-09
## 241          0          0          0          0          0          0
## 240          0          0          0          0          0          0
## 239          0          0          0          0          0          0
## 236          1          1          0          2          1          1
## 235          0          0          0          0          0          0
## 234          0          0          0          0          0          0
##     2020-02-10 2020-02-11 2020-02-12 2020-02-13 2020-02-14 2020-02-15
## 241          0          0          0          0          0          0
## 240          0          0          0          0          0          0
## 239          0          0          0          0          0          0
## 236          0          1          0          1          0          0
## 235          0          0          0          0          0          0
## 234          0          0          0          0          0          0
##     2020-02-16 2020-02-17 2020-02-18 2020-02-19 2020-02-20 2020-02-21
## 241          0          0          0          0          0          0
## 240          0          0          0          0          0          0
## 239          0          0          0          0          0          0
## 236          0          0          0          0          0          0
## 235          0          0          0          0          0          0
## 234          0          0          0          0          0          0
##     2020-02-22 2020-02-23 2020-02-24 2020-02-25 2020-02-26 2020-02-27
## 241          0          0          0          0          0          0
## 240          0          0          0          0          0          0
## 239          0          0          0          0          0          0
## 236          0          0          0          0          0          0
## 235          0          0          0          0          0          0
## 234          0          0          0          0          0          0
##     2020-02-28 2020-02-29 2020-03-01 2020-03-02 2020-03-03 2020-03-04
## 241          0          0          0          0          0          0
## 240          0          0          0          0          0          0
## 239          0          0          0          0          0          0
## 236          0          0          0          0          0          0
## 235          0          0          0          0          0          0
## 234          0          0          0          0          0          0
##     2020-03-05 2020-03-06 2020-03-07 2020-03-08 2020-03-09 2020-03-10
## 241          0          0          0          0          0          0
## 240          0          0          0          0          0          0
## 239          0          0          0          0          0          0
## 236          0          0          1          4          9          1
## 235          0          0          0          0          0          0
## 234          0          0          0          0          0          0
##     2020-03-11 2020-03-12 2020-03-13 2020-03-14 2020-03-15 2020-03-16
## 241          0          0          0          0          0          0
## 240          0          0          0          0          0          0
## 239          0          0          0          0          0          0
## 236          4          4          5          5          4          4
## 235          0          0          0          0         10          5
## 234          0          0          0          0          0          0
##     2020-03-17 2020-03-18 2020-03-19 2020-03-20 2020-03-21 2020-03-22
## 241          0          0          0          0          1          1
## 240          0          0          2          0          0          0
## 239          0          0          0          0          0          0
## 236          4          0         15          9          2          7
## 235         18          0          0          0          3          0
## 234          0          0          0          0          0          0
##     2020-03-23 2020-03-24 2020-03-25 2020-03-26 2020-03-27 2020-03-28
## 241          0          0          0          1          0          2
## 240          1          0          0          9          2          2
## 239          0          0          0          0          0          0
## 236         24          5         11         14          5         16
## 235          0         48          7         15          1         12
## 234          0          0          0          0          0          0
##     2020-03-29 2020-03-30 2020-03-31 2020-04-01 2020-04-02 2020-04-03
## 241          2          0          0          1          0          0
## 240         12          1          6          0          1          3
## 239          0          0          0          0          0          0
## 236         54          5          1          0          6          4
## 235          0          0         16          0          8          1
## 234          0          0          0          0          0          0
##     2020-04-04 2020-04-05 2020-04-06 2020-04-07 2020-04-08 2020-04-09
## 241          1          0          0          0          1          1
## 240          0          0          0          0          0          0
## 239          0          0          0          0          0          0
## 236          0          1          1          4          6          0
## 235          0          0          4         11          7          1
## 234          0          0          0          0          0          0
##     2020-04-10 2020-04-11 2020-04-12 2020-04-13 2020-04-14 2020-04-15
## 241          0          0          3          0          3          0
## 240          0          1          0          3          2          0
## 239          1          0          0          0          0          0
## 236          4          2          1          4          3          9
## 235          4          4          0          6          8          4
## 234          0          0          0          0          0          0
##     2020-04-16 2020-04-17
## 241          6          1
## 240          3          0
## 239          0          0
## 236          1          0
## 235          4          7
## 234          0          0
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;변환하고 합친 데이터가 이렇게 정렬된 것을 볼 수 있다. 참고로 위 데이터는 각 나라별 확진자 수 데이터를 보여주는 것이다.&lt;/p&gt;
&lt;p&gt;이제 &lt;code&gt;flexdashboard&lt;/code&gt;를 활용해서 지도 시각화를 진행해보자. 코드가 어려운 것은 아니다. 다만, &lt;code&gt;reactive&lt;/code&gt;에 대한 개념이 없으면 문법이 달라서 조금 고생할 수 있다.&lt;/p&gt;
&lt;h2 id=&#34;iv-시각화-코드&#34;&gt;IV. 시각화 코드&lt;/h2&gt;
&lt;h3 id=&#34;1-sliderinput&#34;&gt;(1) sliderInput&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Inputs&lt;/code&gt; 탭에 아래와 같이 코드를 입력한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# to control speed, plus looping&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;sliderInput&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dayRange&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Looping Animation:&amp;#34;&lt;/span&gt;,
             min &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;min&lt;/span&gt;(corona_date), max &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;max&lt;/span&gt;(corona_date),
             value &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;median&lt;/span&gt;(corona_date)), step &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;, 
             animate &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;animationOptions&lt;/span&gt;(interval &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2000&lt;/span&gt;, loop &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;소스코드에 대한 설명은 다음과 같다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;dateRange&lt;/code&gt; : &lt;code&gt;inputID&lt;/code&gt;이며, 날짜 데이터를 받는다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Looping Animation:&lt;/code&gt; &lt;code&gt;sliderInput&lt;/code&gt; 표시글이다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;min&lt;/code&gt;, &lt;code&gt;max&lt;/code&gt;: 날짜의 범위를 최소값과 최대값을 나타낸다. &lt;code&gt;corona_date&lt;/code&gt;는 데이터의 수집 날짜로 &lt;code&gt;vector&lt;/code&gt;로 구성되어 있다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;value:&lt;/code&gt; 처음 &lt;code&gt;ShinyApp&lt;/code&gt;이 실행되었을 때 나타내는 초기값이다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;step:&lt;/code&gt; 1~100까지 vector가 존재할 때, 건너뛰는 단위를 나타낸다. 무언가 극적인 변화를 보여줄 때, 쓰면 좋다. 강사는 25로 지정했다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;animate:&lt;/code&gt; 차트 애니메이션 작동 방식을 의미하며, &lt;code&gt;step&lt;/code&gt;에 따라 데이터가 바뀐다. &lt;code&gt;intervals&lt;/code&gt; 시간, &lt;code&gt;loop&lt;/code&gt;는 자동으로 계속 &lt;code&gt;step&lt;/code&gt;을 돌릴 것인지 &lt;code&gt;TRUE&lt;/code&gt; 또는 &lt;code&gt;FALSE&lt;/code&gt;에 따라 달라진다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-날짜-데이터-다루기&#34;&gt;(2) 날짜 데이터 다루기&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_04/&#34;&gt;세계 인구 지도 차트&lt;/a&gt; 작성했을 때의 코드를 기억하였으면 좋겠다. 왜냐하면 많이 바뀌지 않기 때문이다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 색상, 범례에 사용할 것&lt;/span&gt;
mybins &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;500&lt;/span&gt;,&lt;span style=&#34;color:#66d9ef&#34;&gt;Inf&lt;/span&gt;)
mypalette &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;colorBin&lt;/span&gt;(palette&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;YlOrBr&amp;#34;&lt;/span&gt;, domain&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;countries&lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;data&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;POP_EST, na.color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;transparent&amp;#34;&lt;/span&gt;, bins&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mybins)

&lt;span style=&#34;color:#75715e&#34;&gt;# 국가 클릭 시, 아래 내용으로 출력&lt;/span&gt;
mytext &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;paste&lt;/span&gt;(
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Country: &amp;#34;&lt;/span&gt;, countries&lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;data&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;NAME_EN,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;br/&amp;gt;&amp;#34;&lt;/span&gt;, 
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Area:  &amp;#34;&lt;/span&gt;, countries&lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;data&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;CONTINENT, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;br/&amp;gt;&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Population: &amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;round&lt;/span&gt;(countries&lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;data&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;POP_EST, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;),
  sep&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;lapply&lt;/span&gt;(htmltools&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;HTML)

&lt;span style=&#34;color:#75715e&#34;&gt;# 마지막으로 Mapping&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;leaflet&lt;/span&gt;(countries) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;addTiles&lt;/span&gt;()  &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;setView&lt;/span&gt;( lat&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;, lng&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; , zoom&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;addPolygons&lt;/span&gt;( 
    fillColor &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mypalette&lt;/span&gt;(POP_EST), 
    weight &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,
    opacity &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,
    color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;white&amp;#34;&lt;/span&gt;,
    dashArray &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;3&amp;#34;&lt;/span&gt;,
    fillOpacity &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.7&lt;/span&gt;,
    highlight &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;highlightOptions&lt;/span&gt;(
      weight &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,
      color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#666&amp;#34;&lt;/span&gt;,
      dashArray &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;,
      fillOpacity &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.7&lt;/span&gt;,
      bringToFront &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;),
    label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mytext,
    labelOptions &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;labelOptions&lt;/span&gt;(
      style &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;font-weight&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;normal&amp;#34;&lt;/span&gt;, padding &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2px 7px&amp;#34;&lt;/span&gt;),
      textsize &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;13px&amp;#34;&lt;/span&gt;,
      direction &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;auto&amp;#34;&lt;/span&gt;
    )
  ) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;addLegend&lt;/span&gt;(pal&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;mypalette, values&lt;span style=&#34;color:#f92672&#34;&gt;=~&lt;/span&gt;POP_EST, opacity&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.9&lt;/span&gt;, title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Population (M)&amp;#34;&lt;/span&gt;, position &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bottomleft&amp;#34;&lt;/span&gt; )
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;여기서 바꿔야 하는 코드는 무엇일까? 인구 대신 확진자 수 데이터만 대입하면 된다. 그런데 문제가 있다. 날짜가 바뀔때마다 확진수도 바뀌어야 한다. 그렇지 않은가? 그래야 의미가 있기 때문이다. 즉, 여기서 고민해야 하는 것은 프로세스이다.&lt;/p&gt;
&lt;p&gt;순서대로 고민해보자.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;첫번째, 날짜가 바뀐다.&lt;/li&gt;
&lt;li&gt;두번째, 바뀐 날짜를 문자열 변수로 저장한다.&lt;/li&gt;
&lt;li&gt;세번째, 저장된 변수를 활용하여 데이터의 &lt;code&gt;Column&lt;/code&gt;를 선택한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;위와 같은 Workflow대로 작업하면 된다.&lt;/p&gt;
&lt;p&gt;세번째의 개념을 좀더 돕고자 아래 소스코드를 예제로 들어본다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;indicator &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2020-03-10&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;data.frame&lt;/span&gt;(date &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; indicator,
           country &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; countries2&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;NAME, 
           Confirmed &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; countries2[[indicator]],
           Pop &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; countries2&lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;data&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;Pop) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;arrange&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;desc&lt;/span&gt;(Confirmed)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;head&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;##          date     country Confirmed       Pop
## 1  2020-03-10       Italy      1797 62.137802
## 2  2020-03-10       Spain       615 48.958159
## 3  2020-03-10        Iran       595 82.021564
## 4  2020-03-10      France       286 67.106161
## 5  2020-03-10     Germany       237 80.594017
## 6  2020-03-10     Denmark        75  5.605948
## 7  2020-03-10 Netherlands        56 17.084719
## 8  2020-03-10      Sweden        45  9.960487
## 9  2020-03-10 Switzerland        42  8.236303
## 10 2020-03-10     Belgium        39 11.491346
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;여기에서 주목해야 하는 코드는 &lt;code&gt;countries2[[indicator]]&lt;/code&gt; 이 코드이다. 이번에는 corona_date의 값을 바꿔서 실제로 값이 들어오는 것처럼 적용한다. 이 때에는 &lt;code&gt;max(corona_date)&lt;/code&gt;값을 가져온다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;indicator &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;max&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(corona_date))
&lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;paste0&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;현재 날짜: &amp;#34;&lt;/span&gt;, indicator))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;현재 날짜: 2020-04-17&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;data.frame&lt;/span&gt;(date &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; indicator,
           country &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; countries2&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;NAME, 
           Confirmed &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; countries2[[indicator]],
           Pop &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; countries2&lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;data&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;Pop) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;arrange&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;desc&lt;/span&gt;(Confirmed)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;head&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;##          date country Confirmed       Pop
## 1  2020-04-17   Spain      5183  48.95816
## 2  2020-04-17  Turkey      4801  80.84521
## 3  2020-04-17   Italy      3786  62.13780
## 4  2020-04-17  Russia      3448 142.25752
## 5  2020-04-17 Germany      3380  80.59402
## 6  2020-04-17  France      2641  67.10616
## 7  2020-04-17  Brazil      2105 207.35339
## 8  2020-04-17  Canada      1717  35.62368
## 9  2020-04-17    Iran      1606  82.02156
## 10 2020-04-17 Belgium      1236  11.49135
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;데이터가 수집된 4월 17일 기준으로 값이 바뀌는 것을 알 수 있다. 위와 같은 방법으로 모두 수정해주면 끝이다.&lt;/p&gt;
&lt;h3 id=&#34;3-지도-차트-완성하기&#34;&gt;(3) 지도 차트 완성하기&lt;/h3&gt;
&lt;p&gt;이제 지도차트를 작성하는데, 이 때에는 &lt;code&gt;renderLeaflet({})&lt;/code&gt; 함수를 사용하는데, 그 이유는 &lt;code&gt;reactive()&lt;/code&gt; 객체를 다루기 때문이다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sliderInput()&lt;/code&gt; 에 입력되는 데이터를 받아서 사용하려면 &lt;code&gt;reactive()&lt;/code&gt; 객체로 변환해야 해서 적용해야 하기 때문에 이 부분만 주의하면 된다. (일종의 &lt;code&gt;shiny&lt;/code&gt; 문법이라 이해하였으면 좋겠다.)&lt;/p&gt;
&lt;p&gt;날짜 데이터 다루는 방법을 &lt;code&gt;shiny에 적용하면&lt;/code&gt; 아래 코드와 같다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;dayRange &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;renderText&lt;/span&gt;({ &lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(input&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;dayRange) })
  indicator &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dayRange&lt;/span&gt;()
  &lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt;(indicator)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;print(indicator)&lt;/code&gt;이 값은 &lt;code&gt;step&lt;/code&gt;이 바뀔 때마다 다른 날짜가 주기적으로 입력될 것이다.&lt;/p&gt;
&lt;p&gt;기존에 진행했던 소스코드 &lt;code&gt;POP_EST&lt;/code&gt;를 찾아서, &lt;code&gt;countries2[[indicator]]&lt;/code&gt;로 모두 수정한다. 그리고, &lt;code&gt;mytext&lt;/code&gt;에서도 &amp;ldquo;NewCases: &amp;ldquo;, round(countries2[[indicator]], 0),
sep=&amp;rdquo;&amp;quot;) 코드를 추가하여 보완하도록 한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;renderLeaflet&lt;/span&gt;({
  dayRange &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;renderText&lt;/span&gt;({ &lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(input&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;dayRange) })
  indicator &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dayRange&lt;/span&gt;()
  &lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt;(indicator)

&lt;span style=&#34;color:#75715e&#34;&gt;# 색상, 범례에 사용할 것&lt;/span&gt;
mybins &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;500&lt;/span&gt;,&lt;span style=&#34;color:#66d9ef&#34;&gt;Inf&lt;/span&gt;)
mypalette &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;colorBin&lt;/span&gt;(palette&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;YlOrBr&amp;#34;&lt;/span&gt;, domain&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;countries2[[indicator]], na.color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;transparent&amp;#34;&lt;/span&gt;, bins&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mybins)

&lt;span style=&#34;color:#75715e&#34;&gt;# Prepare the text for tooltips:&lt;/span&gt;
mytext &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;paste&lt;/span&gt;(
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Country: &amp;#34;&lt;/span&gt;, countries2&lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;data&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;NAME_EN,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;br/&amp;gt;&amp;#34;&lt;/span&gt;, 
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Area:  &amp;#34;&lt;/span&gt;, countries2&lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;data&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;CONTINENT, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;br/&amp;gt;&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Population: &amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;round&lt;/span&gt;(countries2&lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;data&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;POP_EST, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;), &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;br/&amp;gt;&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;NewCases: &amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;round&lt;/span&gt;(countries2[[indicator]], &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;),
  sep&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;lapply&lt;/span&gt;(htmltools&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;HTML)
  
  &lt;span style=&#34;color:#a6e22e&#34;&gt;leaflet&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;map&amp;#34;&lt;/span&gt;, data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; countries2) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;addTiles&lt;/span&gt;()  &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;setView&lt;/span&gt;(lat&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;, lng&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; , zoom&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;addPolygons&lt;/span&gt;( 
    fillColor &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mypalette&lt;/span&gt;(countries2[[indicator]]), 
    weight &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,
    opacity &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,
    color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;white&amp;#34;&lt;/span&gt;,
    dashArray &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;3&amp;#34;&lt;/span&gt;,
    fillOpacity &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.7&lt;/span&gt;,
    highlight &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;highlightOptions&lt;/span&gt;(
      weight &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,
      color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#666&amp;#34;&lt;/span&gt;,
      dashArray &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;,
      fillOpacity &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.7&lt;/span&gt;,
      bringToFront &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;),
    label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mytext,
    labelOptions &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;labelOptions&lt;/span&gt;(
      style &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;font-weight&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;normal&amp;#34;&lt;/span&gt;, padding &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2px 7px&amp;#34;&lt;/span&gt;),
      textsize &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;13px&amp;#34;&lt;/span&gt;,
      direction &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;auto&amp;#34;&lt;/span&gt;
    )
  ) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  leaflet&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;addLegend&lt;/span&gt;(pal &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mypalette, values&lt;span style=&#34;color:#f92672&#34;&gt;=~&lt;/span&gt;countries2[[indicator]], opacity&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.9&lt;/span&gt;, title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Population (M)&amp;#34;&lt;/span&gt;, position &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bottomleft&amp;#34;&lt;/span&gt; )
  
})
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Output은 유투브 영상을 통해 확인한다.&lt;/p&gt;
&lt;h3 id=&#34;4-유투브-sample&#34;&gt;(4) 유투브 Sample&lt;/h3&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/BB9osH5Cdwg?autoplay=1&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id=&#34;v-결론&#34;&gt;V. 결론&lt;/h2&gt;
&lt;p&gt;이제 최종버전만 남았다. 3개의 동적 대시보드를 하나로 합치는 작업만 남았는데, 이 부분은 수강생의 과제로 남겨둔다. 전체코드는 강사가 게시한 &lt;a href=&#34;https://chloevan.shinyapps.io/COVID_19_Project/&#34;&gt;ShinyApp&lt;/a&gt;에서 확인하기를 바란다 (참고: 가급적 PC에서 보기를 바란다.)&lt;/p&gt;
&lt;p&gt;이글을 읽는 사람들에게 작게나마 도움이 되기를 바란다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Pray for Victims of Covid_19. Contribution to them with this tutorial.&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Corona Shiny Project 6_1 - 데이터 전처리</title>
      <link>https://chloevan.github.io/r/shiny/project_06_01/</link>
      <pubDate>Tue, 14 Apr 2020 10:15:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/shiny/project_06_01/</guid>
      <description>&lt;h2 id=&#34;공지&#34;&gt;공지&lt;/h2&gt;
&lt;p&gt;이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다&lt;/p&gt;
&lt;p&gt;이번에 준비한 Tutorial 코로나 세계현황을 &lt;code&gt;Shiny Dashboard&lt;/code&gt;로 만들어 가는 과정을 담았다.&lt;/p&gt;
&lt;h2 id=&#34;i-shiny-tutorial-소개&#34;&gt;I. Shiny Tutorial 소개&lt;/h2&gt;
&lt;p&gt;처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_01/&#34;&gt;shiny tutorial 01 - get started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_02/&#34;&gt;shiny tutorial 02 - Shiny Structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_03/&#34;&gt;shiny tutorial 03 - HTML content&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_04/&#34;&gt;shiny tutorial 04 - Shiny Layouts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_05/&#34;&gt;shiny tutorial 05 - Sharing Apps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_06/&#34;&gt;shiny tutorial 06 - shinydashboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_07/&#34;&gt;shiny tutorial 07 - flexdashboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_08/&#34;&gt;shiny tutorial 08 - HTML, CSS 적용&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ii-shiny-project&#34;&gt;II. Shiny Project&lt;/h2&gt;
&lt;p&gt;현재 진행중인 프로젝트가 궁금하다면 아래를 확인해보자.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_01/&#34;&gt;Corona Shiny Project 1 - Get Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_02/&#34;&gt;Corona Shiny Project 2 - Visusalization (Time Series)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_03/&#34;&gt;Corona Shiny Project 3 - Visusalization (Bubble Chart)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_04/&#34;&gt;Corona Shiny Project 4 - Visusalization (Map Chart)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_05/&#34;&gt;Corona Shiny Project 5 - Chart with DateInput&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;iii-생각해볼-문제&#34;&gt;III. 생각해볼 문제&lt;/h2&gt;
&lt;p&gt;생각해볼 문제, &lt;code&gt;sliderInput&lt;/code&gt;의 기능을 활용한다는 것의 의미는 매일매일 데이터가 변화하는 것을 확인하는 것에 의미가 있다. 누적데이터가 중요한지, 아니면 매일매일 업데이트된 데이터가 중요한지에 따라 대시보드의 성격이 달라진다.&lt;/p&gt;
&lt;p&gt;우선, 누적데이터는 &lt;code&gt;line Graph&lt;/code&gt;를 통해서 한번 보여줬기 때문에, 여기에서는 생략하겠다.&lt;/p&gt;
&lt;p&gt;날짜가 변화할 때마다 국가별 &lt;code&gt;Case&lt;/code&gt;가 달라지는 과정을 보여주고자 한다. 그런데, 문제가 있다.&lt;/p&gt;
&lt;h2 id=&#34;iv-데이터-처리의-문제점&#34;&gt;IV. 데이터 처리의 문제점&lt;/h2&gt;
&lt;p&gt;이 튜토리얼을 계속 따라왔다면, 다양한 데이터셋이 사용되고 있음을 알 수 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;corona 데이터셋&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;지도 데이터셋&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;지도 데이터셋은 &lt;code&gt;sp&lt;/code&gt;라는 특별한 객체로 이루어져 있고, 이미 깔끔하게 국가별 지도 &lt;code&gt;mapping&lt;/code&gt;까지 완료된 데이터셋이다.&lt;/p&gt;
&lt;p&gt;그럼 여기에서 기준이 데이터셋이 무엇일까? 당연히 &lt;code&gt;지도 데이터셋&lt;/code&gt;이다. 강사가 시간을 가장 많이 허비한 포인트가 이 지점이다. 이 글을 읽는 사람은 그러려니 하겠지만, 사실 매우 중요하다. 왜냐하면, 지도가 &lt;code&gt;Plotting&lt;/code&gt; 되지 않는다!&lt;/p&gt;
&lt;h2 id=&#34;1-지도-데이터셋에-포함된-국가의-숫자&#34;&gt;(1) 지도 데이터셋에 포함된 국가의 숫자&lt;/h2&gt;
&lt;p&gt;우선 지도 데이터셋을 좀 더 면밀히 확인해보자.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(rgdal)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## Loading required package: sp
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;## rgdal: version: 1.4-8, (SVN revision 845)
##  Geospatial Data Abstraction Library extensions to R successfully loaded
##  Loaded GDAL runtime: GDAL 2.4.2, released 2019/06/28
##  Path to GDAL shared files: /Library/Frameworks/R.framework/Versions/3.6/Resources/library/rgdal/gdal
##  GDAL binary built with GEOS: FALSE 
##  Loaded PROJ.4 runtime: Rel. 5.2.0, September 15th, 2018, [PJ_VERSION: 520]
##  Path to PROJ.4 shared files: /Library/Frameworks/R.framework/Versions/3.6/Resources/library/rgdal/proj
##  Linking to sp version: 1.3-2
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;countries &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;readOGR&lt;/span&gt;(dsn &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;~/Desktop/ne_50m_admin_0_countries&amp;#34;&lt;/span&gt;,
                     layer &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ne_50m_admin_0_countries&amp;#34;&lt;/span&gt;,
                     encoding &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;utf-8&amp;#34;&lt;/span&gt;,use_iconv &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; T,
                     verbose &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;)

&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;unique&lt;/span&gt;(countries&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;NAME))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## [1] 241
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;우선 241개로 확인이 된다.&lt;/p&gt;
&lt;h2 id=&#34;2-corona-데이터셋-국가의-숫자&#34;&gt;(2) corona 데이터셋 국가의 숫자&lt;/h2&gt;
&lt;p&gt;이번에는 다운로드 엑셀 파일을 Import 하여 실제 국가의 숫자가 몇개인지 확인해본다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(readxl)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(httr)

&lt;span style=&#34;color:#75715e&#34;&gt;# URL Copy&lt;/span&gt;
url &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://www.ecdc.europa.eu/sites/default/files/documents/COVID-19-geographic-disbtribution-worldwide.xlsx&amp;#39;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# 파일 이름만 가져오기&lt;/span&gt;
getFileName &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;basename&lt;/span&gt;(url)

&lt;span style=&#34;color:#75715e&#34;&gt;# 지정된 디렉토리에 파일 다운로드 받기&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;download.file&lt;/span&gt;(url &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; url, destfile &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; getFileName)

&lt;span style=&#34;color:#75715e&#34;&gt;# 지정된 디렉토리에서 파일 업로드 하기&lt;/span&gt;
corona &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;read_excel&lt;/span&gt;(getFileName)
&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;unique&lt;/span&gt;(corona&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;countriesAndTerritories))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## [1] 206
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;일단 &lt;code&gt;countries&lt;/code&gt; 데이터셋의 국가의 숫자와 &lt;code&gt;corona&lt;/code&gt; 데이터셋의 국가의 숫자가 다른 것이 눈에 띈다.&lt;/p&gt;
&lt;p&gt;어떻게 해결 할 것인가? 하는 문제점이 발생한다.&lt;/p&gt;
&lt;h2 id=&#34;3-동일-국가이나-기재된-값이-상호-다른-경우&#34;&gt;(3) 동일 국가이나 기재된 값이 상호 다른 경우&lt;/h2&gt;
&lt;p&gt;우선 &lt;code&gt;U&lt;/code&gt;로 시작하는 국가를 양쪽에서 추출한 후 비교해보자.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(dplyr)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &#39;dplyr&#39;
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;## The following objects are masked from &#39;package:stats&#39;:
## 
##     filter, lag
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;## The following objects are masked from &#39;package:base&#39;:
## 
##     intersect, setdiff, setequal, union
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(stringr)
country_names &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(countries&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;NAME)
corona_names &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;unique&lt;/span&gt;(corona&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;countriesAndTerritories))

&lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;data.frame&lt;/span&gt;(
  from_countries &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(country_names&lt;span style=&#34;color:#a6e22e&#34;&gt;[str_detect&lt;/span&gt;(country_names, pattern &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^U&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;], &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;empty&amp;#34;&lt;/span&gt;), 
  from_corona &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; corona_names&lt;span style=&#34;color:#a6e22e&#34;&gt;[str_detect&lt;/span&gt;(corona_names, pattern &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^U&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;]
))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;##             from_countries                  from_corona
## 1               Uzbekistan                       Uganda
## 2                  Uruguay                      Ukraine
## 3          U.S. Virgin Is.         United_Arab_Emirates
## 4 United States of America               United_Kingdom
## 5           United Kingdom  United_Republic_of_Tanzania
## 6     United Arab Emirates     United_States_of_America
## 7                  Ukraine United_States_Virgin_Islands
## 8                   Uganda                      Uruguay
## 9                    empty                   Uzbekistan
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;위 데이터에서 볼 수 있는 것처럼, 똑같은 미국이지만, 표기법이 다르다. (강사의 혼잣말, 고치는 방법이 있기는 하다. 그런데, 쉽지가 않다! 강의의 본질은 고생은 수강생이 하는게 아니라 원래 강의 준비하는 사람이 하는거다!)&lt;/p&gt;
&lt;p&gt;우선 진행방법은 아래와 같다. 여기에서 국가명을 고쳐야 하는 건, &lt;code&gt;corona&lt;/code&gt; 데이터셋이다.&lt;/p&gt;
&lt;p&gt;수정하는 방법은 아래와 같다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(dplyr)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(stringr)

corona&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;countriesAndTerritories[corona&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;countriesAndTerritories &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;United_Arab_Emirates&amp;#34;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;United Arab Emirates&amp;#34;&lt;/span&gt;
corona&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;countriesAndTerritories[corona&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;countriesAndTerritories &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;United_States_Virgin_Islands&amp;#34;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;U.S. Virgin Is.&amp;#34;&lt;/span&gt;
corona&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;countriesAndTerritories[corona&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;countriesAndTerritories &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;United_States_of_America&amp;#34;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;United States of America&amp;#34;&lt;/span&gt;
corona&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;countriesAndTerritories[corona&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;countriesAndTerritories &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;United_Republic_of_Tanzania&amp;#34;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;empty&amp;#34;&lt;/span&gt;

country_names &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sort&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(countries&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;NAME), decreasing &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;)
corona_names &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sort&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;unique&lt;/span&gt;(corona&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;countriesAndTerritories)), decreasing &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;)

&lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;data.frame&lt;/span&gt;(
  from_countries &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(country_names&lt;span style=&#34;color:#a6e22e&#34;&gt;[str_detect&lt;/span&gt;(country_names, pattern &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^U&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;]), 
  from_corona &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; corona_names&lt;span style=&#34;color:#a6e22e&#34;&gt;[str_detect&lt;/span&gt;(corona_names, pattern &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^U&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;]
))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;##             from_countries              from_corona
## 1               Uzbekistan               Uzbekistan
## 2                  Uruguay                  Uruguay
## 3 United States of America           United_Kingdom
## 4           United Kingdom United States of America
## 5     United Arab Emirates     United Arab Emirates
## 6                  Ukraine                  Ukraine
## 7                   Uganda                   Uganda
## 8          U.S. Virgin Is.          U.S. Virgin Is.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;위와 같은 방식으로 일일이 수정해야 한다! 갑자기 머리가 아파온다. 원래 데이터싸이언티스트는 &lt;code&gt;80%의 잡무&lt;/code&gt;와 &lt;code&gt;20%의 우아함&lt;/code&gt;으로 이루어진다고 한다. 이런일을 즐거워 해야 한다. 걱정마시라, 이미 데이터 전처리 된 데이터는 별도로 &lt;code&gt;URL&lt;/code&gt;을 알려줄 것이다.&lt;/p&gt;
&lt;h2 id=&#34;4-corona-데이터-가공하기&#34;&gt;(4) corona 데이터 가공하기&lt;/h2&gt;
&lt;p&gt;여전히 한가지 더 큰 어려움이 있다. &lt;code&gt;241&lt;/code&gt;개의 데이터셋을 맞춰야 한다. 그런데, &lt;code&gt;countries@data&lt;/code&gt;의 행은 &lt;code&gt;241&lt;/code&gt;개이지만, &lt;code&gt;corona&lt;/code&gt;의 행은 &lt;code&gt;206&lt;/code&gt;개이다. 어떻게 맞춰야 할까?&lt;/p&gt;
&lt;p&gt;우선, corona데이터를 넓게 할 필요가 있다. 이유는 국가가 기준이기 때문이다. 즉, 국가가 첫번째 열에 오면 더 좋다.&lt;/p&gt;
&lt;p&gt;이 때, 우리에게 필요한 지식은 &lt;code&gt;tidyr 패키지의 gather &amp;amp; spread&lt;/code&gt; 함수의 사용법이다. 자세한 설명이 필요하면 &lt;a href=&#34;https://tidyr.tidyverse.org/&#34;&gt;tidyr&lt;/a&gt;에서 확인해보자.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(dplyr)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(tidyr)

corona &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;select&lt;/span&gt;(dateRep, countriesAndTerritories, cases) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 필요한 열만 추출한다. &lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;group_by_at&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;vars&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;cases)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# cases를 제외하고 모두 그룹을 한다는 뜻이다. &lt;/span&gt;
  dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(row_id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;n&lt;/span&gt;()) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ungroup&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# 그룹 인덱스를 만든다.&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;spread&lt;/span&gt;(key&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;dateRep, value&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;cases) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# &lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;select&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;row_id) &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; dataCases &lt;span style=&#34;color:#75715e&#34;&gt;# 인덱스 제거 후 corona2로 저장한다. &lt;/span&gt;

&lt;span style=&#34;color:#a6e22e&#34;&gt;glimpse&lt;/span&gt;(dataCases)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## Rows: 206
## Columns: 107
## $ countriesAndTerritories &amp;lt;chr&amp;gt; &amp;quot;Afghanistan&amp;quot;, &amp;quot;Albania&amp;quot;, &amp;quot;Algeria&amp;quot;, &amp;quot;Andorra…
## $ `2019-12-31`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-01-01`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-01-02`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-01-03`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-01-04`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-01-05`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-01-06`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-01-07`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-01-08`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-01-09`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-01-10`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-01-11`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-01-12`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-01-13`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-01-14`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-01-15`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-01-16`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-01-17`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-01-18`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-01-19`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-01-20`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-01-21`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-01-22`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-01-23`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-01-24`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-01-25`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 1, 0, 0,…
## $ `2020-01-26`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 3, 0, 0,…
## $ `2020-01-27`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-01-28`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-01-29`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-01-30`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 2, 0, 0,…
## $ `2020-01-31`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 1, 0, 0,…
## $ `2020-02-01`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 2, 0, 0,…
## $ `2020-02-02`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 2, 0, 0,…
## $ `2020-02-03`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-02-04`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-02-05`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 1, 0, 0,…
## $ `2020-02-06`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 1, 0, 0,…
## $ `2020-02-07`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 1, 0, 0,…
## $ `2020-02-08`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-02-09`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-02-10`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-02-11`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-02-12`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-02-13`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-02-14`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 1, 0, 0,…
## $ `2020-02-15`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-02-16`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-02-17`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-02-18`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-02-19`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-02-20`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-02-21`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 2, 0, 0,…
## $ `2020-02-22`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 4, 0, 0,…
## $ `2020-02-23`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 1, 0, 0,…
## $ `2020-02-24`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-02-25`            &amp;lt;dbl&amp;gt; 1, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 0, 0,…
## $ `2020-02-26`            &amp;lt;dbl&amp;gt; 0, NA, 1, NA, NA, NA, NA, NA, 0, NA, 0, 2, 0,…
## $ `2020-02-27`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 1, 0, 0,…
## $ `2020-02-28`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 0, 3, 0,…
## $ `2020-02-29`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 0, NA, 2, 2, 1,…
## $ `2020-03-01`            &amp;lt;dbl&amp;gt; 0, NA, 0, NA, NA, NA, NA, NA, 1, NA, 1, 3, 0,…
## $ `2020-03-02`            &amp;lt;dbl&amp;gt; 0, NA, 2, NA, NA, NA, NA, NA, 0, NA, 3, 4, 2,…
## $ `2020-03-03`            &amp;lt;dbl&amp;gt; NA, NA, NA, 1, NA, NA, NA, NA, NA, NA, 4, 4, …
## $ `2020-03-04`            &amp;lt;dbl&amp;gt; NA, NA, 2, NA, NA, NA, NA, 1, NA, NA, 8, 6, N…
## $ `2020-03-05`            &amp;lt;dbl&amp;gt; NA, NA, 7, NA, NA, NA, NA, NA, NA, NA, 11, 5,…
## $ `2020-03-06`            &amp;lt;dbl&amp;gt; NA, NA, 5, NA, NA, NA, NA, 1, NA, NA, 7, 12, …
## $ `2020-03-07`            &amp;lt;dbl&amp;gt; NA, NA, NA, NA, NA, NA, NA, 6, NA, NA, 4, 33,…
## $ `2020-03-08`            &amp;lt;dbl&amp;gt; 3, NA, NA, NA, NA, NA, NA, 1, NA, NA, 11, 25,…
## $ `2020-03-09`            &amp;lt;dbl&amp;gt; NA, 2, 3, NA, NA, NA, NA, 3, NA, NA, 6, 3, NA…
## $ `2020-03-10`            &amp;lt;dbl&amp;gt; NA, 4, NA, NA, NA, NA, NA, NA, NA, NA, 20, 29…
## $ `2020-03-11`            &amp;lt;dbl&amp;gt; 3, 4, NA, NA, NA, NA, NA, 7, NA, NA, 12, 51, …
## $ `2020-03-12`            &amp;lt;dbl&amp;gt; NA, 1, 0, NA, NA, NA, NA, NA, 3, NA, 14, 64, …
## $ `2020-03-13`            &amp;lt;dbl&amp;gt; NA, 12, 4, NA, NA, NA, NA, 12, 2, 2, 30, 115,…
## $ `2020-03-14`            &amp;lt;dbl&amp;gt; NA, 10, 2, 1, NA, NA, NA, 3, 7, NA, 41, 143, …
## $ `2020-03-15`            &amp;lt;dbl&amp;gt; 3, 5, 11, NA, NA, NA, 1, 11, 7, NA, 52, 151, …
## $ `2020-03-16`            &amp;lt;dbl&amp;gt; 6, 4, 11, 3, NA, NA, NA, 11, 10, NA, 49, 205,…
## $ `2020-03-17`            &amp;lt;dbl&amp;gt; 5, 9, 12, 9, NA, NA, NA, 9, 22, NA, 77, 156, …
## $ `2020-03-18`            &amp;lt;dbl&amp;gt; 1, 4, 0, 0, NA, NA, NA, 14, 26, NA, 79, 316, …
## $ `2020-03-19`            &amp;lt;dbl&amp;gt; 0, 4, 13, 39, NA, NA, NA, 18, 37, NA, 111, 31…
## $ `2020-03-20`            &amp;lt;dbl&amp;gt; 0, 11, 9, 22, NA, NA, NA, 31, 7, 2, 144, 550,…
## $ `2020-03-21`            &amp;lt;dbl&amp;gt; 2, 0, 12, 0, NA, NA, 0, 30, 14, NA, 165, 453,…
## $ `2020-03-22`            &amp;lt;dbl&amp;gt; 0, 6, 0, 13, 2, NA, 0, 67, 24, NA, 224, 375, …
## $ `2020-03-23`            &amp;lt;dbl&amp;gt; 10, 13, 8, 25, 0, NA, 0, 41, 30, NA, 611, 607…
## $ `2020-03-24`            &amp;lt;dbl&amp;gt; 6, 11, 87, 20, 0, NA, 0, 35, 4, 8, 114, 855, …
## $ `2020-03-25`            &amp;lt;dbl&amp;gt; 2, 23, 42, 31, 0, NA, 2, 86, 71, 5, 600, 796,…
## $ `2020-03-26`            &amp;lt;dbl&amp;gt; 33, 23, 33, 24, 0, NA, 0, 115, 25, 2, 376, 60…
## $ `2020-03-27`            &amp;lt;dbl&amp;gt; 0, 28, 41, 36, 1, 2, 4, 87, 39, 9, 367, 1141,…
## $ `2020-03-28`            &amp;lt;dbl&amp;gt; 16, 12, 0, 43, 1, 0, 0, 101, 43, 0, 212, 668,…
## $ `2020-03-29`            &amp;lt;dbl&amp;gt; 15, 11, 104, 41, 0, 0, 0, 55, 52, 0, 431, 594…
## $ `2020-03-30`            &amp;lt;dbl&amp;gt; 8, 15, 45, 26, 3, 0, 0, 75, 0, 22, 284, 522, …
## $ `2020-03-31`            &amp;lt;dbl&amp;gt; 27, 11, 57, 36, 0, 0, 0, 146, 58, NA, 464, 80…
## $ `2020-04-01`            &amp;lt;dbl&amp;gt; 25, 20, 73, 6, 0, 0, 0, 0, 50, 5, 150, 564, 2…
## $ `2020-04-02`            &amp;lt;dbl&amp;gt; 26, 16, 263, 14, 1, 0, 0, 167, 39, 0, 269, 52…
## $ `2020-04-03`            &amp;lt;dbl&amp;gt; 43, 18, 0, 38, 0, 1, 2, 0, 92, 5, 248, 418, 4…
## $ `2020-04-04`            &amp;lt;dbl&amp;gt; 0, 27, 139, 11, 0, 0, 6, 132, 73, 2, 324, 396…
## $ `2020-04-05`            &amp;lt;dbl&amp;gt; 35, 29, 314, 27, 2, 0, 0, 186, 34, 2, 139, 24…
## $ `2020-04-06`            &amp;lt;dbl&amp;gt; 29, 28, 20, 35, 4, 0, 0, 103, 52, 0, 57, 217,…
## $ `2020-04-07`            &amp;lt;dbl&amp;gt; 38, 16, 103, 25, 2, 0, 0, 74, 11, 7, 100, 314…
## $ `2020-04-08`            &amp;lt;dbl&amp;gt; 30, 6, 45, 19, 1, 0, 0, 87, 20, 3, 112, 343, …
## $ `2020-04-09`            &amp;lt;dbl&amp;gt; 56, 17, 104, 19, 2, 0, 0, 80, 28, 3, 96, 329,…
## $ `2020-04-10`            &amp;lt;dbl&amp;gt; 61, 9, 94, 19, 0, 0, 4, 99, 40, 5, 100, 279, …
## $ `2020-04-11`            &amp;lt;dbl&amp;gt; 37, 7, 95, 18, 0, 0, 2, 81, 16, 4, 86, 312, 6…
## $ `2020-04-12`            &amp;lt;dbl&amp;gt; 34, 17, 64, 21, 0, 0, 0, 162, 30, 6, 51, 247,…
## $ `2020-04-13`            &amp;lt;dbl&amp;gt; 52, 13, 89, 16, 0, 0, 0, 66, 46, 0, 33, 130, …
## $ `2020-04-14`            &amp;lt;dbl&amp;gt; 58, 21, 69, 8, 0, 0, 2, 69, 26, 0, 44, 106, 5…
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;5-241개의-행으로-맞추기&#34;&gt;(5) 241개의 행으로 맞추기&lt;/h2&gt;
&lt;p&gt;이제 Table Join을 활용해야 한다. 이 때 조인키를 확인해야 한다. 그리고 countries 데이터셋에 맞추도록 한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;coronaConfirmed &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;left_join&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;data.frame&lt;/span&gt;(countries &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; countries&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;NAME &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(), 
                                   Pop &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; countries&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;POP_EST &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.numeric&lt;/span&gt;()), 
                        dataCases &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;rename&lt;/span&gt;(countries &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; countriesAndTerritories)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;filter&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;is.na&lt;/span&gt;(countries))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## Joining, by = &amp;quot;countries&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;## Warning: Column `countries` joining factor and character vector, coercing into
## character vector
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;glimpse&lt;/span&gt;(coronaConfirmed)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## Rows: 241
## Columns: 108
## $ countries    &amp;lt;chr&amp;gt; &amp;quot;Zimbabwe&amp;quot;, &amp;quot;Zambia&amp;quot;, &amp;quot;Yemen&amp;quot;, &amp;quot;Vietnam&amp;quot;, &amp;quot;Venezuela&amp;quot;, &amp;quot;…
## $ Pop          &amp;lt;dbl&amp;gt; 13805084, 15972000, 28036829, 96160163, 31304016, 1000, …
## $ `2019-12-31` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-01` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-02` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-03` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-04` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-05` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-06` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-07` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-08` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-09` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-10` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-11` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-12` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-13` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-14` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-15` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-16` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-17` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-18` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-19` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-20` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-21` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-22` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-23` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-24` &amp;lt;dbl&amp;gt; NA, NA, NA, 2, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-25` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-26` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-27` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-28` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-29` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-30` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-01-31` &amp;lt;dbl&amp;gt; NA, NA, NA, 3, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-02-01` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-02-02` &amp;lt;dbl&amp;gt; NA, NA, NA, 2, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-02-03` &amp;lt;dbl&amp;gt; NA, NA, NA, 1, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-02-04` &amp;lt;dbl&amp;gt; NA, NA, NA, 1, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-02-05` &amp;lt;dbl&amp;gt; NA, NA, NA, 1, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-02-06` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-02-07` &amp;lt;dbl&amp;gt; NA, NA, NA, 2, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-02-08` &amp;lt;dbl&amp;gt; NA, NA, NA, 1, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-02-09` &amp;lt;dbl&amp;gt; NA, NA, NA, 1, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-02-10` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-02-11` &amp;lt;dbl&amp;gt; NA, NA, NA, 1, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-02-12` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-02-13` &amp;lt;dbl&amp;gt; NA, NA, NA, 1, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-02-14` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-02-15` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-02-16` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-02-17` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-02-18` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-02-19` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-02-20` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-02-21` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-02-22` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-02-23` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-02-24` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-02-25` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-02-26` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-02-27` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-02-28` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-02-29` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-03-01` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-03-02` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-03-03` &amp;lt;dbl&amp;gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …
## $ `2020-03-04` &amp;lt;dbl&amp;gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …
## $ `2020-03-05` &amp;lt;dbl&amp;gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …
## $ `2020-03-06` &amp;lt;dbl&amp;gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …
## $ `2020-03-07` &amp;lt;dbl&amp;gt; NA, NA, NA, 1, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-03-08` &amp;lt;dbl&amp;gt; NA, NA, NA, 4, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-03-09` &amp;lt;dbl&amp;gt; NA, NA, NA, 9, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-03-10` &amp;lt;dbl&amp;gt; NA, NA, NA, 1, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-03-11` &amp;lt;dbl&amp;gt; NA, NA, NA, 4, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-03-12` &amp;lt;dbl&amp;gt; NA, NA, NA, 4, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-03-13` &amp;lt;dbl&amp;gt; NA, NA, NA, 5, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-03-14` &amp;lt;dbl&amp;gt; NA, NA, NA, 5, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ `2020-03-15` &amp;lt;dbl&amp;gt; NA, NA, NA, 4, 10, NA, NA, NA, 6, NA, NA, NA, NA, NA, NA…
## $ `2020-03-16` &amp;lt;dbl&amp;gt; NA, NA, NA, 4, 5, NA, NA, 6, 2, NA, NA, NA, NA, NA, NA, …
## $ `2020-03-17` &amp;lt;dbl&amp;gt; NA, NA, NA, 4, 18, NA, NA, 2, 21, NA, NA, NA, NA, NA, NA…
## $ `2020-03-18` &amp;lt;dbl&amp;gt; NA, NA, NA, 0, 0, NA, NA, 8, 21, NA, NA, NA, NA, NA, NA,…
## $ `2020-03-19` &amp;lt;dbl&amp;gt; NA, 2, NA, 15, 0, NA, NA, 7, 29, NA, NA, NA, NA, 3, NA, …
## $ `2020-03-20` &amp;lt;dbl&amp;gt; NA, 0, NA, 9, 0, NA, NA, 0, 15, NA, NA, NA, NA, 9, NA, N…
## $ `2020-03-21` &amp;lt;dbl&amp;gt; 1, 0, NA, 2, 3, NA, NA, 10, 16, NA, NA, NA, NA, 2, NA, N…
## $ `2020-03-22` &amp;lt;dbl&amp;gt; 1, 0, NA, 7, 0, NA, NA, 0, 25, NA, NA, NA, NA, 1, NA, NA…
## $ `2020-03-23` &amp;lt;dbl&amp;gt; 0, 1, NA, 24, 0, NA, NA, 13, 23, NA, NA, NA, NA, 12, NA,…
## $ `2020-03-24` &amp;lt;dbl&amp;gt; 0, 0, NA, 5, 48, NA, NA, 3, 4, NA, NA, NA, 17, 2, NA, NA…
## $ `2020-03-25` &amp;lt;dbl&amp;gt; 0, 0, NA, 11, 7, NA, NA, 6, 27, NA, NA, NA, 0, 3, NA, NA…
## $ `2020-03-26` &amp;lt;dbl&amp;gt; 1, 9, NA, 14, 15, NA, NA, 10, 28, NA, NA, NA, 0, 5, NA, …
## $ `2020-03-27` &amp;lt;dbl&amp;gt; 0, 2, NA, 5, 1, NA, NA, 18, 21, NA, NA, NA, 0, 12, NA, N…
## $ `2020-03-28` &amp;lt;dbl&amp;gt; 2, 2, NA, 16, 12, NA, NA, 21, 0, NA, NA, NA, 2, 2, NA, N…
## $ `2020-03-29` &amp;lt;dbl&amp;gt; 2, 12, NA, 54, 0, NA, NA, 29, 66, NA, NA, NA, 3, 4, NA, …
## $ `2020-03-30` &amp;lt;dbl&amp;gt; 0, 1, NA, 5, 0, NA, NA, 12, 5, NA, NA, NA, 8, 1, NA, NA,…
## $ `2020-03-31` &amp;lt;dbl&amp;gt; 0, 6, NA, 1, 16, NA, NA, 4, 11, NA, NA, NA, NA, 4, NA, N…
## $ `2020-04-01` &amp;lt;dbl&amp;gt; 1, 0, NA, 0, 0, NA, NA, 24, 18, NA, NA, NA, 0, 9, NA, NA…
## $ `2020-04-02` &amp;lt;dbl&amp;gt; 0, 1, NA, 6, 8, NA, NA, 14, 0, NA, NA, NA, 0, 8, NA, NA,…
## $ `2020-04-03` &amp;lt;dbl&amp;gt; 0, 3, NA, 4, 1, NA, NA, 3, 31, NA, NA, NA, 3, 5, NA, NA,…
## $ `2020-04-04` &amp;lt;dbl&amp;gt; 1, 0, NA, 0, 0, NA, NA, 37, 17, NA, NA, NA, 7, 5, NA, NA…
## $ `2020-04-05` &amp;lt;dbl&amp;gt; 0, 0, NA, 1, 0, NA, NA, 39, 14, NA, NA, NA, 0, 6, NA, NA…
## $ `2020-04-06` &amp;lt;dbl&amp;gt; 0, 0, NA, 1, 4, NA, NA, 76, 6, NA, NA, NA, 2, 17, NA, NA…
## $ `2020-04-07` &amp;lt;dbl&amp;gt; 0, 0, NA, 4, 11, NA, NA, 55, 9, NA, NA, NA, 0, 2, NA, NA…
## $ `2020-04-08` &amp;lt;dbl&amp;gt; 1, 0, NA, 6, 7, NA, NA, 107, 9, NA, NA, NA, 3, 9, NA, NA…
## $ `2020-04-09` &amp;lt;dbl&amp;gt; 1, 0, NA, 0, 1, NA, NA, 51, 32, NA, NA, NA, 0, 4, NA, NA…
## $ `2020-04-10` &amp;lt;dbl&amp;gt; 0, 0, 1, 4, 4, NA, NA, 27, 17, NA, NA, NA, 5, 3, NA, NA,…
## $ `2020-04-11` &amp;lt;dbl&amp;gt; 0, 1, 0, 2, 4, NA, NA, 42, 21, NA, NA, NA, 0, 2, NA, NA,…
## $ `2020-04-12` &amp;lt;dbl&amp;gt; 3, 0, 0, 1, 0, NA, NA, 172, 7, NA, NA, NA, 1, 3, NA, NA,…
## $ `2020-04-13` &amp;lt;dbl&amp;gt; 0, 3, 0, 4, 6, NA, NA, 69, 11, NA, NA, NA, 0, 0, NA, NA,…
## $ `2020-04-14` &amp;lt;dbl&amp;gt; 3, 2, 0, 3, 8, NA, NA, 133, 9, NA, NA, NA, 0, 1, NA, NA,…
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;6-na값-처리하기&#34;&gt;(6) NA값 처리하기&lt;/h2&gt;
&lt;p&gt;국가 및 날짜별로 &lt;code&gt;case&lt;/code&gt;가 정리된 것을 확인할 수 있다. 아직 문제는 끝나지 않았다. 왜냐하면 &lt;code&gt;NA&lt;/code&gt;가 있기 때문이다. &lt;code&gt;NA&lt;/code&gt;가 포함된 부분은 모두 0으로 처리하자. 왜냐하면, 우리는 숫자로 표시해야 하기 때문에 &lt;code&gt;NA&lt;/code&gt;의 공백은 있을 수 없다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(ggplot2)

&lt;span style=&#34;color:#a6e22e&#34;&gt;sapply&lt;/span&gt;(coronaConfirmed[&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)],&lt;span style=&#34;color:#a6e22e&#34;&gt;function&lt;/span&gt;(x) &lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;is.na&lt;/span&gt;(x))) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as_tibble&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(date &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.Date&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;colnames&lt;/span&gt;(coronaConfirmed)[&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)])) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; date, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; value)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; 
    &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_line&lt;/span&gt;(size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1.5&lt;/span&gt;, color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;darkblue&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; 
    &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_minimal&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/coronaProject/project_06/project_01.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;NA&lt;/code&gt;값 처리에 관한 그래프를 작성한 것이다. 거의 모든 국가에서 발현되기 시작한 3월 이후부터는 &lt;code&gt;NA&lt;/code&gt;가 줄어드는 것을 확인할 수 있다. (아! 시각화 분석이 아니다! 빨리 돌아가서 NA를 처리하자)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;coronaConfirmed&lt;span style=&#34;color:#a6e22e&#34;&gt;[is.na&lt;/span&gt;(coronaConfirmed)] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;sapply&lt;/span&gt;(coronaConfirmed[&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)],&lt;span style=&#34;color:#a6e22e&#34;&gt;function&lt;/span&gt;(x) &lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;is.na&lt;/span&gt;(x))) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as_tibble&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(date &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.Date&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;colnames&lt;/span&gt;(coronaConfirmed)[&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)])) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; date, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; value)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; 
    &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_line&lt;/span&gt;(size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1.5&lt;/span&gt;, color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;darkblue&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; 
    &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_minimal&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/coronaProject/project_06/project_02.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;모든 &lt;code&gt;NA&lt;/code&gt;가 0으로 수렴되는 것을 볼 수 있다.&lt;/p&gt;
&lt;h2 id=&#34;7-데이터-저장&#34;&gt;(7) 데이터 저장&lt;/h2&gt;
&lt;p&gt;이렇게 전처리된 데이터를 다시 사용하기 위해, &lt;code&gt;csv&lt;/code&gt;, &lt;code&gt;Database&lt;/code&gt; 등 다양한 형태로 저장을 해본다. 이 부분은 수강생의 자율에 맡기도록 한다.&lt;/p&gt;
&lt;h2 id=&#34;v-수강생을-위한-과제&#34;&gt;V. 수강생을 위한 과제&lt;/h2&gt;
&lt;p&gt;지금까지 한것은 확진자(casesConfirmed) 데이터를 가지고 전처리를 진행하였다. 그러나, 확진후 사망자 수 데이터도 중요하며, 더 나아가 인구대비 확진자, 사망자 등도 중요한 데이터가 될 수 있다.&lt;/p&gt;
&lt;p&gt;문제는 아직 사망자 수 데이터를 기반으로 작업은 하지 못했다는 점이다. 이 부분은 수강생을 위한 과제로 남겨두겠다.&lt;/p&gt;
&lt;h2 id=&#34;vi-결론&#34;&gt;VI. 결론&lt;/h2&gt;
&lt;p&gt;이번에는 데이터 전처리에 대해 배우는 시간을 가졌다. 이렇게 데이터 전처리는 어렵다. 강사 역시, 글을 쓰면서 하루의 시간을 모두 통으로 보내며 전처리의 과정을 진행했다. 단순히 소스코드를 짜는 것 뿐만 아니라, 하나씩 확인하는 과정, 좀 더 나은 방법들을 고민하면서 소스코드를 짜는데 주력하였다.&lt;/p&gt;
&lt;p&gt;이제 마지막 &lt;code&gt;Chart Automation&lt;/code&gt;만 남았다.&lt;/p&gt;
&lt;p&gt;이글을 읽는 사람들에게 작게나마 도움이 되기를 바란다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Pray for Victims of Covid_19. Contribution to them with this tutorial.&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Corona Shiny Project 5 - Chart with DateInput</title>
      <link>https://chloevan.github.io/r/shiny/project_05/</link>
      <pubDate>Sat, 11 Apr 2020 10:15:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/shiny/project_05/</guid>
      <description>&lt;h2 id=&#34;공지&#34;&gt;공지&lt;/h2&gt;
&lt;p&gt;이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다&lt;/p&gt;
&lt;p&gt;이번에 준비한 Tutorial 코로나 세계현황을 &lt;code&gt;Shiny Dashboard&lt;/code&gt;로 만들어 가는 과정을 담았다.&lt;/p&gt;
&lt;h2 id=&#34;i-shiny-tutorial-소개&#34;&gt;I. Shiny Tutorial 소개&lt;/h2&gt;
&lt;p&gt;처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_01/&#34;&gt;shiny tutorial 01 - get started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_02/&#34;&gt;shiny tutorial 02 - Shiny Structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_03/&#34;&gt;shiny tutorial 03 - HTML content&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_04/&#34;&gt;shiny tutorial 04 - Shiny Layouts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_05/&#34;&gt;shiny tutorial 05 - Sharing Apps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_06/&#34;&gt;shiny tutorial 06 - shinydashboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_07/&#34;&gt;shiny tutorial 07 - flexdashboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_08/&#34;&gt;shiny tutorial 08 - HTML, CSS 적용&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ii-shiny-project&#34;&gt;II. Shiny Project&lt;/h2&gt;
&lt;p&gt;현재 진행중인 프로젝트가 궁금하다면 아래를 확인해보자.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_01/&#34;&gt;Corona Shiny Project 1 - Get Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_02/&#34;&gt;Corona Shiny Project 2 - Visusalization (Time Series)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_03/&#34;&gt;Corona Shiny Project 3 - Visusalization (Bubble Chart)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_04/&#34;&gt;Corona Shiny Project 4 - Visusalization (Map Chart)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;iii-date-control&#34;&gt;III. Date Control&lt;/h2&gt;
&lt;p&gt;이제 프로젝트의 마지막에 와 있다. 오늘의 내용은 간단하게 표현하면 날짜에 따라 그래프가 달라져야 하는 것을 어떻게 기능적으로 구현할 것인가에 대한 과제가 들어있다.&lt;/p&gt;
&lt;p&gt;또한, 늘 그래왔던 것처럼, Sample로 구현을 먼저 한 후에 응용을 하면 된다. 당연히 처음에는 어렵다. 그러나, 1-2번 반복해서 하다보면, 자연스럽게 익히게 되니, 크게 염려하지 않기를 바란다.&lt;/p&gt;
&lt;h2 id=&#34;1-dateinput-핸들링&#34;&gt;(1) DateInput 핸들링&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_03/&#34;&gt;project_03&lt;/a&gt;에서 확인해야 하는 내용의 소스코드를 그대로 사용해야 하니, &lt;a href=&#34;https://chloevan.github.io/r/shiny/project_03/&#34;&gt;project_03&lt;/a&gt; 내용이 숙지가 되지 않았으면 다시 공부할 것을 권한다. 강사는 글의 편의성을 위해, 나눠서 작성을 했다. 우선 &lt;code&gt;Global Bubble Chart&lt;/code&gt;부터 다룬다. 각 코드에 대한 자세한 설명은 여기에서는 생략한다.&lt;/p&gt;
&lt;h3 id=&#34;a-global-chunk-code&#34;&gt;(A) Global Chunk Code&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Global Chunk Code&lt;/code&gt;는 아래와 같이 되어 있을 것이다. 본 포스트에서 필요한 데이터는 &lt;code&gt;corona3&lt;/code&gt; 데이터셋이다. 다시 &lt;code&gt;Review&lt;/code&gt;하는 마음으로 코드를 작성한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(plotly)    &lt;span style=&#34;color:#75715e&#34;&gt;# 동적 시각화&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(viridis)   &lt;span style=&#34;color:#75715e&#34;&gt;# 색상 관련 패키지&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(readxl)    &lt;span style=&#34;color:#75715e&#34;&gt;# 엑셀파일 데이터 수집&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(tidyverse) &lt;span style=&#34;color:#75715e&#34;&gt;# 데이터 가공 및 ggplot2 시각&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# get code data&lt;/span&gt;
url &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://pkgstore.datahub.io/JohnSnowLabs/country-and-continent-codes-list/country-and-continent-codes-list-csv_csv/data/b7876b7f496677669644f3d1069d3121/country-and-continent-codes-list-csv_csv.csv&amp;#39;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# Country Code 변수명 재정의&lt;/span&gt;
country_code &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;read.csv&lt;/span&gt;(url, stringsAsFactors &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;select&lt;/span&gt;(Continent_Name, Three_Letter_Country_Code) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;rename&lt;/span&gt;(continent_code &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Three_Letter_Country_Code)

&lt;span style=&#34;color:#75715e&#34;&gt;# Covid_19 변수명 재정의&lt;/span&gt;
corona &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;rename&lt;/span&gt;(date &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dateRep, 
         country &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; countriesAndTerritories, 
         continent_code &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; countryterritoryCode) &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; corona2 

&lt;span style=&#34;color:#75715e&#34;&gt;# continent_code 변수 기준으로 데이터 통합&lt;/span&gt;
corona3 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;left_join&lt;/span&gt;(corona2, country_code)

&lt;span style=&#34;color:#75715e&#34;&gt;# 결과 확인&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;glimpse&lt;/span&gt;(corona3)  

Rows&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;339&lt;/span&gt;
Columns&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt; date           &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;date&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2020-04-05&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2020-04-04&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2020-04-03&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2020-04-02&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;…
&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt; day            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;dbl&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;31&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;29&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;28&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;26&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt;,…
&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt; month          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;dbl&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,…
&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt; year           &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;dbl&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2020&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2020&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2020&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2020&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2020&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2020&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2020&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2020&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;…
&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt; cases          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;dbl&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;35&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;43&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;26&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;33&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;,…
&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt; deaths         &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;dbl&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,…
&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt; country        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;chr&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Afghanistan&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Afghanistan&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Afghanistan&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Afgh…
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;$ geoId          &amp;lt;chr&amp;gt; &amp;#34;&lt;/span&gt;AF&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;AF&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;AF&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;AF&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;AF&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;AF&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;AF&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;AF&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;A…
&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt; continent_code &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;chr&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AFG&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AFG&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AFG&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AFG&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AFG&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AFG&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AFG&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;…
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;$ popData2018    &amp;lt;dbl&amp;gt; 37172386, 37172386, 37172386, 37172386, 37172386, …
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;$ Continent_Name &amp;lt;chr&amp;gt; &amp;#34;&lt;/span&gt;Asia&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;Asia&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;Asia&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;Asia&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;Asia&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;Asia&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;A…
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;b-slide-bar-chunk-code&#34;&gt;(B) Slide Bar Chunk Code&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;corona3&lt;/code&gt; 데이터셋을 확보했다면, 이제는 &lt;code&gt;Slide Bar&lt;/code&gt;를 만들어본다. &lt;code&gt;dateInput&lt;/code&gt; 코드를 입력한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;Inputs {.sidebar data-width=300}
-----------------------------------------------------------------------
원하는 날짜에 놓고 &lt;span style=&#34;color:#e6db74&#34;&gt;`Button`&lt;/span&gt;을 누르세요. 

&lt;span style=&#34;color:#e6db74&#34;&gt;```r
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;h4&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Step 1. Click Global Bubble Chart&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#a6e22e&#34;&gt;h4&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Step 2. Change Date&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#a6e22e&#34;&gt;dateInput&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bubbleDate&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Date:&amp;#34;&lt;/span&gt;, value &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2020-03-01&amp;#34;&lt;/span&gt;)

&lt;span style=&#34;color:#a6e22e&#34;&gt;h4&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Check if bubble is moving by date&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#e6db74&#34;&gt;```&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;c-flexdashboard-code&#34;&gt;(C) flexdashboard Code&lt;/h3&gt;
&lt;p&gt;마지막으로 &lt;code&gt;Global Bubble Chart&lt;/code&gt; 탭에서 그래프가 출력되는지 확인한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Create data Reactive&lt;/span&gt;
corona_bubble_df &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;reactive&lt;/span&gt;({
  corona3 &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;filter&lt;/span&gt;(date &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2020-04-05&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;is.na&lt;/span&gt;(cty_code)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;select&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(day, month, year, geoId)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# Reorder countries to having big bubbles on top&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;arrange&lt;/span&gt;(date) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;group_by&lt;/span&gt;(country) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(cum_cases &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;cumsum&lt;/span&gt;(cases), 
         cum_deaths &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;cumsum&lt;/span&gt;(deaths)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#75715e&#34;&gt;# prepare text for tooltip&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;paste&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Country: &amp;#34;&lt;/span&gt;, country, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\ntoday cases: &amp;#34;&lt;/span&gt;, cases, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\ntoday_deaths: &amp;#34;&lt;/span&gt;, deaths, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\ntotal_cases: &amp;#34;&lt;/span&gt;, cum_cases, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\ntotal_deaths: &amp;#34;&lt;/span&gt;, cum_deaths, sep&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;filter&lt;/span&gt;(date &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2020-04-05&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;distinct&lt;/span&gt;(date, cases, deaths, country, .keep_all &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;)
})

&lt;span style=&#34;color:#a6e22e&#34;&gt;renderPlotly&lt;/span&gt;({
  &lt;span style=&#34;color:#75715e&#34;&gt;# Classic ggplot&lt;/span&gt;
  p &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;corona_bubble_df&lt;/span&gt;(), &lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;cases, y&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;deaths, size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; popData2018, color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Continent_Name, text&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;text)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_point&lt;/span&gt;(alpha&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.7&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; 
    &lt;span style=&#34;color:#a6e22e&#34;&gt;scale_x_log10&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; 
    &lt;span style=&#34;color:#a6e22e&#34;&gt;scale_size&lt;/span&gt;(range &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1.4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;19&lt;/span&gt;), name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Population (M)&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;scale_color_viridis&lt;/span&gt;(discrete&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;, guide&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_minimal&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;theme&lt;/span&gt;(legend.position&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;none&amp;#34;&lt;/span&gt;)
  
  &lt;span style=&#34;color:#a6e22e&#34;&gt;ggplotly&lt;/span&gt;(p, tooltip&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;text&amp;#34;&lt;/span&gt;)
})
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;위 소스코드를 새로운 &lt;code&gt;flexdashboard template&lt;/code&gt; 정상적으로 실행했다면 아래와 같이 나타나면 정상이다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/coronaProject/project_05/project_01.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h3 id=&#34;d-날짜-입력값-자동화-코드&#34;&gt;(D) 날짜 입력값 자동화 코드&lt;/h3&gt;
&lt;p&gt;문제는 날짜를 바꿔도 그래프는 달라지지 않는다. 왜 그럴까? &lt;code&gt;reactive dataset&lt;/code&gt; 코드를 따라 작성했다면, &lt;code&gt;filter(date == 2020-04-05)&lt;/code&gt; 이와 같이 입력한 것을 확인할 수 있을 것이다. 즉, &lt;code&gt;2020-04-05&lt;/code&gt; 이 부분을 입력값으로 대체를 해야 한다. 아래와 같이 수정한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;filter(date == &amp;quot;2020-04-05&amp;quot;, !is.na(cty_code)&lt;/code&gt;를 &lt;code&gt;filter(date &amp;lt;= as.Date(as.character(input$bubbleDate)), !is.na(cty_code))&lt;/code&gt; 수정한다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;filter(date == &amp;quot;2020-04-05&amp;quot;)&lt;/code&gt;를 &lt;code&gt;filter(date == as.Date(as.character(input$bubbleDate))&lt;/code&gt;로 수정한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Create data Reactive&lt;/span&gt;
corona_bubble_df &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;reactive&lt;/span&gt;({
  corona3 &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;filter&lt;/span&gt;(date &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.Date&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(input&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;bubbleDate)), &lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;is.na&lt;/span&gt;(cty_code)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;select&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(day, month, year, geoId)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# Reorder countries to having big bubbles on top&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;arrange&lt;/span&gt;(date) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;group_by&lt;/span&gt;(country) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(cum_cases &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;cumsum&lt;/span&gt;(cases), 
         cum_deaths &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;cumsum&lt;/span&gt;(deaths)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#75715e&#34;&gt;# prepare text for tooltip&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;paste&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Country: &amp;#34;&lt;/span&gt;, country, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\ntoday cases: &amp;#34;&lt;/span&gt;, cases, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\ntoday_deaths: &amp;#34;&lt;/span&gt;, deaths, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\ntotal_cases: &amp;#34;&lt;/span&gt;, cum_cases, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\ntotal_deaths: &amp;#34;&lt;/span&gt;, cum_deaths, sep&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;filter&lt;/span&gt;(date &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.Date&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(input&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;bubbleDate))) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;distinct&lt;/span&gt;(date, cases, deaths, country, .keep_all &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;)
})
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;날짜를 입력받는데, &lt;code&gt;as.character()&lt;/code&gt;가 나온 것에 대해 의구심이 생길 수 있는데, 이 부분을 다루려면 R의 Shiny의 &lt;code&gt;Date Input&lt;/code&gt; 및 R 프로그래밍에서의 &lt;code&gt;Date Type에&lt;/code&gt;값을 처리하는 것에 대한 부가적인 설명이 필요해서 일단 여기에서는 설명하지 않는다. (강사가 이 문제를 푸는데 약 30-40분 시간을 허비했다!)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;input$bubbleDate&lt;/code&gt;는 뭘까? &lt;code&gt;shiny&lt;/code&gt;의 &lt;code&gt;input &amp;amp; output&lt;/code&gt; 개념에 대한 이해도가 필요하며, 이 기본적인 개념은 &lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_02/&#34;&gt;shiny tutorial 02 - Shiny Structure&lt;/a&gt;에서 확인한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;그러면 이제 다른 날짜를 클릭하면, 그래프가 달라지는 것을 확인할 수 있을 것이다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/coronaProject/project_05/project_02.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;정상적으로 바뀐 것을 확인을 하였다면, 수정 후 다시 재 배포하면 된다.&lt;/p&gt;
&lt;h2 id=&#34;iv-결론&#34;&gt;IV. 결론&lt;/h2&gt;
&lt;p&gt;간단하게 소스코드 1-2줄 수정으로 의미있는 시각화가 구현되었다. 이제 본 프로젝트의 마지막이다. 다음 튜토리얼에서는 날짜의 범위(Range)를 이용하여 자동으로 그래프가 변화되는 것을 만들어본다.&lt;/p&gt;
&lt;p&gt;이글을 읽는 사람들에게 작게나마 도움이 되기를 바란다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Pray for Victims of Covid_19. Contribution to them with this tutorial.&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;v-reference&#34;&gt;V. Reference&lt;/h2&gt;
&lt;p&gt;Shiny Tutorial. Lession 4 Display reactive output. from &lt;a href=&#34;https://shiny.rstudio.com/tutorial/written-tutorial/lesson4/&#34;&gt;https://shiny.rstudio.com/tutorial/written-tutorial/lesson4/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Corona Shiny Project 4 - Visusalization (Map Chart)</title>
      <link>https://chloevan.github.io/r/shiny/project_04/</link>
      <pubDate>Thu, 09 Apr 2020 10:10:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/shiny/project_04/</guid>
      <description>&lt;h2 id=&#34;공지&#34;&gt;공지&lt;/h2&gt;
&lt;p&gt;이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다&lt;/p&gt;
&lt;p&gt;이번에 준비한 Tutorial 코로나 세계현황을 &lt;code&gt;Shiny Dashboard&lt;/code&gt;로 만들어 가는 과정을 담았다.&lt;/p&gt;
&lt;h2 id=&#34;i-shiny-tutorial-소개&#34;&gt;I. Shiny Tutorial 소개&lt;/h2&gt;
&lt;p&gt;처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_01/&#34;&gt;shiny tutorial 01 - get started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_02/&#34;&gt;shiny tutorial 02 - Shiny Structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_03/&#34;&gt;shiny tutorial 03 - HTML content&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_04/&#34;&gt;shiny tutorial 04 - Shiny Layouts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_05/&#34;&gt;shiny tutorial 05 - Sharing Apps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_06/&#34;&gt;shiny tutorial 06 - shinydashboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_07/&#34;&gt;shiny tutorial 07 - flexdashboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_08/&#34;&gt;shiny tutorial 08 - HTML, CSS 적용&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ii-shiny-project&#34;&gt;II. Shiny Project&lt;/h2&gt;
&lt;p&gt;현재 진행중인 프로젝트가 궁금하다면 아래를 확인해보자.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_01/&#34;&gt;Corona Shiny Project 1 - Get Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_02/&#34;&gt;Corona Shiny Project 2 - Visusalization (Time Series)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_03/&#34;&gt;Corona Shiny Project 3 - Visusalization (Bubble Chart)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;iii-leaflet-소개&#34;&gt;III. Leaflet 소개&lt;/h2&gt;
&lt;p&gt;leaflet 패키지에 관한 간단한 소개에 강사가 작성한 글이 있다. 구체적인 내용은 여기에서 참고하기를 바란다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/graph01_leaflet/&#34;&gt;Leaflet for R&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;vi-지도-시각화-작업에-앞서서-고려할-내용&#34;&gt;VI. 지도 시각화 작업에 앞서서 고려할 내용&lt;/h2&gt;
&lt;h2 id=&#34;1-지도-데이터-수집하기&#34;&gt;(1) 지도 데이터 수집하기&lt;/h2&gt;
&lt;p&gt;지도 시각화를 작업하려면, 필수적으로 위도와 경도가 담긴 데이터를 확보해야 한다. 이번 프로젝트에서 관건이 되는 건 국가별 위도 경도 데이터를 확보하는 소스코드를 작업해야 한다.&lt;/p&gt;
&lt;p&gt;원소스부터 수집하는 방법 등 다양한 방법이 있지만, 강사는 아래와 같이 진행했다.&lt;/p&gt;
&lt;p&gt;먼저 &lt;a href=&#34;https://www.naturalearthdata.com/downloads/50m-cultural-vectors/50m-admin-0-countries-2/&#34;&gt;Natural Earth Data&lt;/a&gt;에서 &lt;code&gt;Download Countries&lt;/code&gt;데이터 파일을 다운로드 받은 후 적정 경로에서 데이터를 로드 한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;폴더 트리 구조&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;.
├── ne_50m_admin_0_countries.README.html
├── ne_50m_admin_0_countries.VERSION.txt
├── ne_50m_admin_0_countries.cpg
├── ne_50m_admin_0_countries.dbf
├── ne_50m_admin_0_countries.prj
├── ne_50m_admin_0_countries.shp
└── ne_50m_admin_0_countries.shx
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;각각의 확장명이 있는데, 각각의 확장명을 이해하려면 또다른 공부를 해야 한다. (현재 시점에서 강사는 관심이 크게 없다!)&lt;/p&gt;
&lt;p&gt;&lt;code&gt;countries&lt;/code&gt; 코드는 그대로 실행해준다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/coronaProject/project_04/project_01.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(rgdal)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## Loading required package: sp
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;## rgdal: version: 1.4-8, (SVN revision 845)
##  Geospatial Data Abstraction Library extensions to R successfully loaded
##  Loaded GDAL runtime: GDAL 2.4.2, released 2019/06/28
##  Path to GDAL shared files: /Library/Frameworks/R.framework/Versions/3.6/Resources/library/rgdal/gdal
##  GDAL binary built with GEOS: FALSE 
##  Loaded PROJ.4 runtime: Rel. 5.2.0, September 15th, 2018, [PJ_VERSION: 520]
##  Path to PROJ.4 shared files: /Library/Frameworks/R.framework/Versions/3.6/Resources/library/rgdal/proj
##  Linking to sp version: 1.3-2
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;countries &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;readOGR&lt;/span&gt;(dsn &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;~/Desktop/ne_50m_admin_0_countries&amp;#34;&lt;/span&gt;,
                     layer &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ne_50m_admin_0_countries&amp;#34;&lt;/span&gt;,
                     encoding &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;utf-8&amp;#34;&lt;/span&gt;,use_iconv &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; T,
                     verbose &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;)

&lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;(countries)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;SpatialPolygonsDataFrame&amp;quot;
## attr(,&amp;quot;package&amp;quot;)
## [1] &amp;quot;sp&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;countries의 class는 &lt;code&gt;sp&lt;/code&gt;로 일반적인 &lt;code&gt;data.frame&lt;/code&gt; 형태가 아닌 것을 확인할 수 있다.&lt;/p&gt;
&lt;h2 id=&#34;2-countries-data-시각화&#34;&gt;(2) Countries data 시각화&lt;/h2&gt;
&lt;p&gt;일단, 뭔지는 몰라도 실제 시각화 되는지 확인해보자. 이 때에는 &lt;code&gt;leaflet package&lt;/code&gt;를 활용한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(leaflet)
&lt;span style=&#34;color:#a6e22e&#34;&gt;leaflet&lt;/span&gt;(data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; countries) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;addTiles&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;setView&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;, zoom &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/coronaProject/project_04/project_02.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;오! 신기하게 되었다. 이 소스코드가 실제로 R Markdown에서도 적용되는지 확인해본다. 그러려면, &lt;code&gt;countries&lt;/code&gt; 데이터를 저장한 후, &lt;code&gt;R Markdown&lt;/code&gt;코드에서 불러오는 걸 수행해야 한다. 어떻게 수행하면 좋을까? &lt;code&gt;MySQL&lt;/code&gt;과 같은 &lt;code&gt;RDB&lt;/code&gt;로는 저장이 당연히 되지 않는다. 그러면, &lt;code&gt;NoSQL&lt;/code&gt;로 데이터를 &lt;code&gt;Input&lt;/code&gt; 하면 된다. 왜 강사가 &lt;code&gt;MongoDB&lt;/code&gt;로 작업하는지 이 때 비로써 &lt;code&gt;아!&lt;/code&gt; 하면 충분하다.&lt;/p&gt;
&lt;h2 id=&#34;3-mongodb에-저장하기&#34;&gt;(3) MongoDB에 저장하기&lt;/h2&gt;
&lt;p&gt;이 데이터를 &lt;code&gt;MongoDB&lt;/code&gt;에 실제로 저장되는지 확인해본다.
이 때 작업해야 하는 것은 &lt;code&gt;sp class&lt;/code&gt;를 &lt;code&gt;MongoDB&lt;/code&gt; 형태인 &lt;code&gt;JSON 형태&lt;/code&gt;로 바꿔져야 하는 작업이 남았는데, 어려운 것은 아니니, 소스 코드를 참고한다.&lt;/p&gt;
&lt;p&gt;다행히 R은 GIS 형태의 sp class를 다룰 수 있도록 도와주는 패키지를 지원하고 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;참고로 해당 패키지 설치 과정에서는 &lt;code&gt;gdal&lt;/code&gt; 및 &lt;code&gt;sf&lt;/code&gt; 버전 관련 에러가 나올 확률이 크다. 이런 경우, &lt;a href=&#34;https://github.com/r-spatial/sf&#34;&gt;sf 공식문서&lt;/a&gt; 문서를 참조하기를 바란다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;Facing similar problem I have followed the steps below:

&lt;span style=&#34;color:#66d9ef&#34;&gt;1.&lt;/span&gt; On Terminal: gdalinfo --version to check which gdal version do you have. Mine was GDAL 2.2.0, released 2017/04/28 after brew update and brew upgrade

&lt;span style=&#34;color:#66d9ef&#34;&gt;2.&lt;/span&gt; From here: https://github.com/r-spatial/sf, instructions for macOS, as I have already gdal installed, I have used only brew unlink gdal and then brew link --force gdal2

&lt;span style=&#34;color:#66d9ef&#34;&gt;3.&lt;/span&gt; I reinstalled rgdal on R: install.packages(&amp;#34;rgdal&amp;#34;, repos = &amp;#34;http://cran.us.r-project.org&amp;#34;, type = &amp;#34;source&amp;#34;) and I have confirmed it was compiled with configure: GDAL: 2.2.0

&lt;span style=&#34;color:#66d9ef&#34;&gt;4.&lt;/span&gt; Finally, install.packages(&amp;#34;sf&amp;#34;) and it required to be compiled: binary source needs_compilation sf 0.5-3 TRUE
Again, I have confirmed configure: GDAL: 2.2.0 and checking GDAL version &amp;gt;= 2.0.0... yes

After that, I have the new version installed: library(sf) Linking to GEOS 3.6.2, GDAL 2.2.0, proj.4 4.9.3

I hope it could be a solution for you too.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;에러를 잘 다루는 사람이 일의 성과도 높다! 일의 해결법은 대부분 공식문서에 있다.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;install.packages(&amp;quot;sf&amp;quot;, configure.args = &amp;quot;--with-proj-lib=/usr/local/lib/&amp;quot;)
install.packages(&amp;quot;geojsonio&amp;quot;, dependencies = TRUE)
remotes::install_github(&amp;quot;ropensci/geojsonlint&amp;quot;)
library(geojsonio)

# json
county_json &amp;lt;- geojson_json(countries)

&amp;gt; class(county_json)
[1] &amp;quot;geofeaturecollection&amp;quot; &amp;quot;geojson&amp;quot;             
[3] &amp;quot;geo_json&amp;quot;             &amp;quot;json&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;geon_json 형태로 데이터가 변환된 것을 확인할 수 있다.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;library(mongolite)
collection &amp;lt;- &amp;quot;countries&amp;quot; 
db &amp;lt;- &#39;learningspoons&#39;
mongo_id &amp;lt;- Sys.getenv(&amp;quot;MONGO_ID&amp;quot;) # 보안 유지를 위해 가렸다.(실무에서는 이렇게 작업하라고 권유하는 것임!) 
mongo_pw &amp;lt;- Sys.getenv(&amp;quot;MONGO_PW&amp;quot;) # (실무에서는 이렇게 작업하라고 권유하는 것임!)  

mongo_url &amp;lt;- paste0(&#39;mongodb+srv://&#39;, mongo_id, &#39;:&#39;,mongo_pw,&#39;@learningspoons-rhpei.gcp.mongodb.net/&#39;)

conn &amp;lt;- mongo(collection = collection, 
              db = db, 
              url = mongo_url)

conn$insert(county_json)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/coronaProject/project_04/project_03.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;실제로 MongoDB에 잘 들어간 것을 확인할 수 있다.&lt;/p&gt;
&lt;h2 id=&#34;4-shapefile-저장-및-불러오기&#34;&gt;(4) ShapeFile 저장 및 불러오기&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;MongoDB&lt;/code&gt;에 저장하는 방법이 싫다면, 매우 간단히, &lt;code&gt;.RData 형태로 저장해도 된다.&lt;/code&gt; 이렇게 다양한 형태로 저장할 수 있음을 확인한다.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;save(countries, file=&amp;quot;shapeFile.RData&amp;quot;)
load(&amp;quot;shapeFile.RData&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;v-국가별-인구-데이터-지도-시각화-예제&#34;&gt;V. 국가별 인구 데이터 지도 시각화 예제&lt;/h2&gt;
&lt;p&gt;수집된 데이터를 통해서 다양한 시각화를 진행할 수 있다. 지도 시각화 관한 다양한 예제는 &lt;a href=&#34;https://rstudio.github.io/leaflet/shapes.html&#34;&gt;leaflet&lt;/a&gt; 확인한다.&lt;/p&gt;
&lt;p&gt;특히, 주의해야 하는 것은 데이터의 형태가 &lt;code&gt;sp&lt;/code&gt; 형태인지, 아니면 &lt;code&gt;geojson&lt;/code&gt; 형태인지에 따라 조금씩 달라지니, 여기에 주의하면서 관련 공식문서를 읽도록 한다.&lt;/p&gt;
&lt;h2 id=&#34;1-소스-코드-실행&#34;&gt;(1) 소스 코드 실행&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 패키지 로드&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(rgdal)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(leaflet)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(viridis)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(RCurl)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(dplyr)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(RColorBrewer)

&lt;span style=&#34;color:#75715e&#34;&gt;# 지도 데이터 수집&lt;/span&gt;
countries &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;readOGR&lt;/span&gt;(dsn &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;~/Desktop/ne_50m_admin_0_countries&amp;#34;&lt;/span&gt;,
                     layer &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ne_50m_admin_0_countries&amp;#34;&lt;/span&gt;,
                     encoding &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;utf-8&amp;#34;&lt;/span&gt;,use_iconv &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; T,
                     verbose &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;)

&lt;span style=&#34;color:#75715e&#34;&gt;# 인구수 데이터 가공&lt;/span&gt;
countries&lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;data&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;POP_EST&lt;span style=&#34;color:#a6e22e&#34;&gt;[which&lt;/span&gt;(countries&lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;data&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;POP_EST &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NA&lt;/span&gt;
countries&lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;data&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;POP_EST &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.numeric&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(countries&lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;data&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;POP_EST)) &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1000000&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;round&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)

&lt;span style=&#34;color:#75715e&#34;&gt;# 색상, 범례에 사용할 것&lt;/span&gt;
mybins &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;500&lt;/span&gt;,&lt;span style=&#34;color:#66d9ef&#34;&gt;Inf&lt;/span&gt;)
mypalette &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;colorBin&lt;/span&gt;(palette&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;YlOrBr&amp;#34;&lt;/span&gt;, domain&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;countries&lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;data&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;POP_EST, na.color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;transparent&amp;#34;&lt;/span&gt;, bins&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mybins)

&lt;span style=&#34;color:#75715e&#34;&gt;# 국가 클릭 시, 아래 내용으로 출력&lt;/span&gt;
mytext &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;paste&lt;/span&gt;(
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Country: &amp;#34;&lt;/span&gt;, countries&lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;data&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;NAME_EN,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;br/&amp;gt;&amp;#34;&lt;/span&gt;, 
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Area:  &amp;#34;&lt;/span&gt;, countries&lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;data&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;CONTINENT, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;br/&amp;gt;&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Population: &amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;round&lt;/span&gt;(countries&lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;data&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;POP_EST, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;),
  sep&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;lapply&lt;/span&gt;(htmltools&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;HTML)

&lt;span style=&#34;color:#75715e&#34;&gt;# 마지막으로 Mapping&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;leaflet&lt;/span&gt;(countries) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;addTiles&lt;/span&gt;()  &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;setView&lt;/span&gt;( lat&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;, lng&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; , zoom&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;addPolygons&lt;/span&gt;( 
    fillColor &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mypalette&lt;/span&gt;(POP_EST), 
    weight &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,
    opacity &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,
    color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;white&amp;#34;&lt;/span&gt;,
    dashArray &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;3&amp;#34;&lt;/span&gt;,
    fillOpacity &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.7&lt;/span&gt;,
    highlight &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;highlightOptions&lt;/span&gt;(
      weight &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,
      color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#666&amp;#34;&lt;/span&gt;,
      dashArray &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;,
      fillOpacity &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.7&lt;/span&gt;,
      bringToFront &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;),
    label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mytext,
    labelOptions &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;labelOptions&lt;/span&gt;(
      style &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;font-weight&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;normal&amp;#34;&lt;/span&gt;, padding &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2px 7px&amp;#34;&lt;/span&gt;),
      textsize &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;13px&amp;#34;&lt;/span&gt;,
      direction &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;auto&amp;#34;&lt;/span&gt;
    )
  ) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;addLegend&lt;/span&gt;(pal&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;mypalette, values&lt;span style=&#34;color:#f92672&#34;&gt;=~&lt;/span&gt;POP_EST, opacity&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.9&lt;/span&gt;, title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Population (M)&amp;#34;&lt;/span&gt;, position &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bottomleft&amp;#34;&lt;/span&gt; )
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/coronaProject/project_04/project_04.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;2-소스-코드-설명&#34;&gt;(2) 소스 코드 설명&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;인구수 데이터 가공: 0인 데이터는 NA로 처리한 뒤, 인구수가 인구수는 단위가 크기때문에, 백만명 단위로 처리했다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;색상, 범례에 사용할 것: 국가별 인구수에 색상의 차별화를 하려면 &lt;code&gt;mybins &amp;lt;- c(0,10,20,50,100,500,Inf)&lt;/code&gt;에 따라 차별화를 두었다. 만약 기준이 다르다면, 다른 기준점을 적용하면 된다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Leaflet Mapping: &lt;code&gt;Leaflet + Choropleths&lt;/code&gt; 검색을 하면 다양한 예제가 나오니 거기에서 응용하면 된다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://rstudio.github.io/leaflet/choropleths.html&#34;&gt;Choropleths&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;vi-apply-to-r-markdown&#34;&gt;VI. Apply To R Markdown.&lt;/h2&gt;
&lt;p&gt;이제 위 데이터를 활용해서 실제로 &lt;code&gt;flexdashboard&lt;/code&gt; 패키지에 적용되는지 확인해보자. 다행히 leaflet과 R Markdown은 연동이 매우 잘되서, Editor에서 작업한 소스 코드를 그대로 응용해도 무방하다. 단, &lt;code&gt;reactive 데이터 셋&lt;/code&gt;은 당연히 &lt;code&gt;renderLeaflet()&lt;/code&gt;을 활용한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;Row
-----------------------------------------------------------------------

&lt;span style=&#34;color:#75715e&#34;&gt;### World Population
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#e6db74&#34;&gt;```r
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Final Map&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;leaflet&lt;/span&gt;(countries) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;addTiles&lt;/span&gt;()  &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;setView&lt;/span&gt;( lat&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;, lng&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; , zoom&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;addPolygons&lt;/span&gt;( 
    fillColor &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mypalette&lt;/span&gt;(POP_EST), 
    weight &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,
    opacity &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,
    color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;white&amp;#34;&lt;/span&gt;,
    dashArray &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;3&amp;#34;&lt;/span&gt;,
    fillOpacity &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.7&lt;/span&gt;,
    highlight &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;highlightOptions&lt;/span&gt;(
      weight &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,
      color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#666&amp;#34;&lt;/span&gt;,
      dashArray &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;,
      fillOpacity &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.7&lt;/span&gt;,
      bringToFront &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;),
    label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mytext,
    labelOptions &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;labelOptions&lt;/span&gt;(
      style &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;font-weight&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;normal&amp;#34;&lt;/span&gt;, padding &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2px 7px&amp;#34;&lt;/span&gt;),
      textsize &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;13px&amp;#34;&lt;/span&gt;,
      direction &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;auto&amp;#34;&lt;/span&gt;
    )
  ) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  leaflet&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;addLegend&lt;/span&gt;(pal &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mypalette, values&lt;span style=&#34;color:#f92672&#34;&gt;=~&lt;/span&gt;POP_EST, opacity&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.9&lt;/span&gt;, title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Population (M)&amp;#34;&lt;/span&gt;, position &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bottomleft&amp;#34;&lt;/span&gt; )
&lt;span style=&#34;color:#e6db74&#34;&gt;```&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/coronaProject/project_04/project_05.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;vii-결론&#34;&gt;VII. 결론&lt;/h2&gt;
&lt;p&gt;이번 포스트에서는, &lt;code&gt;leaflet&lt;/code&gt; 패키지를 활용한 지도 시각화 실전에 준하는 과정을 만들었다. 지도 데이터를 다루는 것은 사실 쉬운 것은 아니다. 강사가 GIS 개념을 다루는 데 참조했던 원문 링크를 보고 참고하기를 바란다.&lt;/p&gt;
&lt;p&gt;이글을 읽는 사람들에게 작게나마 도움이 되기를 바란다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Pray for Victims of Covid_19. Contribution to them with this tutorial.&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;viii-reference&#34;&gt;VIII. Reference&lt;/h2&gt;
&lt;p&gt;Moraga, P. (n.d.). Geospatial Health Data: Modeling and Visualization with R-INLA and Shiny. from &lt;a href=&#34;http://www.paulamoraga.com/book-geospatial/index.html&#34;&gt;http://www.paulamoraga.com/book-geospatial/index.html&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Corona Shiny Project 3 - Visusalization (Bubble Chart)</title>
      <link>https://chloevan.github.io/r/shiny/project_03/</link>
      <pubDate>Wed, 08 Apr 2020 10:10:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/shiny/project_03/</guid>
      <description>&lt;h2 id=&#34;공지&#34;&gt;공지&lt;/h2&gt;
&lt;p&gt;이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다&lt;/p&gt;
&lt;p&gt;이번에 준비한 Tutorial 코로나 세계현황을 &lt;code&gt;Shiny Dashboard&lt;/code&gt;로 만들어 가는 과정을 담았다.&lt;/p&gt;
&lt;h2 id=&#34;i-shiny-tutorial-소개&#34;&gt;I. Shiny Tutorial 소개&lt;/h2&gt;
&lt;p&gt;처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_01/&#34;&gt;shiny tutorial 01 - get started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_02/&#34;&gt;shiny tutorial 02 - Shiny Structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_03/&#34;&gt;shiny tutorial 03 - HTML content&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_04/&#34;&gt;shiny tutorial 04 - Shiny Layouts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_05/&#34;&gt;shiny tutorial 05 - Sharing Apps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_06/&#34;&gt;shiny tutorial 06 - shinydashboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_07/&#34;&gt;shiny tutorial 07 - flexdashboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_08/&#34;&gt;shiny tutorial 08 - HTML, CSS 적용&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ii-shiny-project&#34;&gt;II. Shiny Project&lt;/h2&gt;
&lt;p&gt;현재 진행중인 프로젝트가 궁금하다면 아래를 확인해보자.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_01/&#34;&gt;Corona Shiny Project 1 - Get Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_02/&#34;&gt;Corona Shiny Project 2 - Visusalization (Time Series)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;iii-bubble-chart&#34;&gt;III. Bubble Chart&lt;/h2&gt;
&lt;p&gt;뉴스 기사를 접하면, 버블차트가 그려진 기사를 접하게 될 것이다. 아래 이미지가 말하는 것은 매우 선명하다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/coronaProject/project_03/project_01.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;이러한 버블차트가 산점도와 만나면 훨씬 더 분명하게 메시지를 던질 수 있다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/coronaProject/project_03/project_02.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;소득과 건강과 관련된 그래프를 인구수에 비례하여 어느정도 상관이 있는지를 보여준다. &lt;code&gt;Bubble Chart&lt;/code&gt;는 이렇게 기존의 2차원의 산점도에서 3차원까지 확장해서 보여준다는 큰 의미가 있다.&lt;/p&gt;
&lt;p&gt;이 그래프를 우선적으로 작성한 뒤, &lt;code&gt;Shiny App&lt;/code&gt;에 배포하도록 한다.&lt;/p&gt;
&lt;h2 id=&#34;1-그래프-작성의-목적&#34;&gt;(1) 그래프 작성의 목적&lt;/h2&gt;
&lt;p&gt;우선 확진자(&lt;code&gt;cases&lt;/code&gt;)와 사망자(&lt;code&gt;deaths&lt;/code&gt;)의 상관관계를 그리되, 인구수를 Bubble로 치환할 것이다. &lt;code&gt;Sample&lt;/code&gt;로 &lt;code&gt;2020-04-05&lt;/code&gt; 기준으로 우선 처리해서 시각화로 만들어 보자.&lt;/p&gt;
&lt;h2 id=&#34;iv-practice-in-r-editor&#34;&gt;IV. Practice in R Editor&lt;/h2&gt;
&lt;h2 id=&#34;1-패키지-로드&#34;&gt;(1) 패키지 로드&lt;/h2&gt;
&lt;p&gt;시각화에 필요한 패키지는 아래와 같다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(plotly)    &lt;span style=&#34;color:#75715e&#34;&gt;# 동적 시각화&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(viridis)   &lt;span style=&#34;color:#75715e&#34;&gt;# 색상 관련 패키지&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(readxl)    &lt;span style=&#34;color:#75715e&#34;&gt;# 엑셀파일 데이터 수집&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(tidyverse) &lt;span style=&#34;color:#75715e&#34;&gt;# 데이터 가공 및 ggplot2 시각화&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;2-데이터-가져오기&#34;&gt;(2) 데이터 가져오기&lt;/h2&gt;
&lt;p&gt;지난 시간에는 SQL DB를 통해서 소스코드를 가져왔다면, 이번에는 엑셀파일을 통해서 데이터를 가져오도록 하자.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_01/&#34;&gt;코로나 데이터셋 데이터 가져오기&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(readxl)

&lt;span style=&#34;color:#75715e&#34;&gt;# get covid data&lt;/span&gt;
corona &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;read_excel&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;your_corona_file_path&amp;#34;&lt;/span&gt;, sheet &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(dateRep &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.Date&lt;/span&gt;(dateRep)) 
  
Rows&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;905&lt;/span&gt;
Columns&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt; dateRep                 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;date&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2020-04-05&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2020-04-04&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2020-04-03&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2020&lt;/span&gt;…
&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt; day                     &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;dbl&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;31&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;29&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;28&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;26&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;…
&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt; month                   &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;dbl&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,…
&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt; year                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;dbl&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2020&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2020&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2020&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2020&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2020&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2020&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2020&lt;/span&gt;,…
&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt; cases                   &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;dbl&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;35&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;43&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;26&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;33&lt;/span&gt;, …
&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt; deaths                  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;dbl&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,…
&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt; countriesAndTerritories &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;chr&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Afghanistan&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Afghanistan&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Afghanista…
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;$ geoId                   &amp;lt;chr&amp;gt; &amp;#34;&lt;/span&gt;AF&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;AF&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;AF&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;AF&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;AF&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;AF&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;AF&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;,…
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;$ countryterritoryCode    &amp;lt;chr&amp;gt; &amp;#34;&lt;/span&gt;AFG&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;AFG&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;AFG&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;AFG&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;AFG&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;AFG&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,…&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt; popData2018             &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;dbl&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;37172386&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;37172386&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;37172386&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;37172386&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;…
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;위와 같은 형태의 데이터 셋이 출력되면 정상이다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;두번째로 작업해야 하는 것은 &lt;code&gt;Continent Code&lt;/code&gt;가 필요하다. &lt;code&gt;Continent Code&lt;/code&gt;를 통해서 &lt;code&gt;country&lt;/code&gt;를 그룹화 해야 하기 때문에 &lt;code&gt;Table Join&lt;/code&gt;도 필요하다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# get code data&lt;/span&gt;
url &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://pkgstore.datahub.io/JohnSnowLabs/country-and-continent-codes-list/country-and-continent-codes-list-csv_csv/data/b7876b7f496677669644f3d1069d3121/country-and-continent-codes-list-csv_csv.csv&amp;#39;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# Country Code 변수명 재정의&lt;/span&gt;
country_code &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;read.csv&lt;/span&gt;(url, stringsAsFactors &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;select&lt;/span&gt;(Continent_Name, Three_Letter_Country_Code) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;rename&lt;/span&gt;(continent_code &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Three_Letter_Country_Code)

&lt;span style=&#34;color:#75715e&#34;&gt;# Covid_19 변수명 재정의&lt;/span&gt;
corona &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;rename&lt;/span&gt;(date &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dateRep, 
         country &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; countriesAndTerritories, 
         continent_code &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; countryterritoryCode) &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; corona2 

&lt;span style=&#34;color:#75715e&#34;&gt;# continent_code 변수 기준으로 데이터 통합&lt;/span&gt;
corona3 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;left_join&lt;/span&gt;(corona2, country_code)

&lt;span style=&#34;color:#75715e&#34;&gt;# 결과 확인&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;glimpse&lt;/span&gt;(corona3)  

Rows&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;339&lt;/span&gt;
Columns&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt; date           &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;date&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2020-04-05&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2020-04-04&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2020-04-03&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2020-04-02&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;…
&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt; day            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;dbl&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;31&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;29&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;28&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;26&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt;,…
&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt; month          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;dbl&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,…
&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt; year           &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;dbl&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2020&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2020&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2020&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2020&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2020&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2020&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2020&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2020&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;…
&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt; cases          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;dbl&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;35&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;43&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;26&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;33&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;,…
&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt; deaths         &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;dbl&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,…
&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt; country        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;chr&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Afghanistan&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Afghanistan&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Afghanistan&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Afgh…
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;$ geoId          &amp;lt;chr&amp;gt; &amp;#34;&lt;/span&gt;AF&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;AF&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;AF&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;AF&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;AF&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;AF&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;AF&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;AF&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;A…
&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt; continent_code &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;chr&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AFG&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AFG&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AFG&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AFG&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AFG&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AFG&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AFG&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;…
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;$ popData2018    &amp;lt;dbl&amp;gt; 37172386, 37172386, 37172386, 37172386, 37172386, …
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;$ Continent_Name &amp;lt;chr&amp;gt; &amp;#34;&lt;/span&gt;Asia&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;Asia&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;Asia&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;Asia&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;Asia&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;Asia&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;A…
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;국가별 Code 데이터는 &lt;a href=&#34;https://datahub.io/JohnSnowLabs/country-and-continent-codes-list&#34;&gt;datahub.io&lt;/a&gt;에서 가져으니 참고하기를 바란다.
&lt;ul&gt;
&lt;li&gt;(만약, 위 주소에 문제가 생기면 강사에게 개별 컨택하면 데이터가 보관된 제 개인 &lt;code&gt;github url&lt;/code&gt;을 공유해주겠다.)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/coronaProject/project_03/project_03.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;3-데이터-요약&#34;&gt;(3) 데이터 요약&lt;/h2&gt;
&lt;p&gt;데이터 요약을 할 때, 고려할 사항 중의 하나는 &lt;code&gt;누적 데이터다.&lt;/code&gt; 날짜로 &lt;code&gt;filtering&lt;/code&gt;을 할 때 해당 기간까지의 누적 확진자수와 누적 사망자수도 같이 계산하는 소스코드를 진행했다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;data &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; corona3 &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 

  &lt;span style=&#34;color:#75715e&#34;&gt;# cty_code가 없는 데이터는 삭제했다. 원래는 찾아서 개별 국가와 통합하는게 맞기는 하지만.. (숙제로 남겨둔다!)&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;filter&lt;/span&gt;(date &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2020-04-05&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;is.na&lt;/span&gt;(cty_code)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;select&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(day, month, year, geoId)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# Reorder countries to having big bubbles on top&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;arrange&lt;/span&gt;(date) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  
  &lt;span style=&#34;color:#75715e&#34;&gt;# 아래 코드가 누적수치를 뽑을 때 쓰는 방법이니 참고한다. &lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;group_by&lt;/span&gt;(country) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(cum_cases &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;cumsum&lt;/span&gt;(cases), 
         cum_deaths &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;cumsum&lt;/span&gt;(deaths)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#75715e&#34;&gt;# plotly에서 표시 될 데이터 정보&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;paste&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Country: &amp;#34;&lt;/span&gt;, country, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\ncases (M): &amp;#34;&lt;/span&gt;, cases, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\ntoday_deaths: &amp;#34;&lt;/span&gt;, deaths, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\ntotal_cases: &amp;#34;&lt;/span&gt;, cum_cases, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\ntotal_deaths: &amp;#34;&lt;/span&gt;, cum_deaths, sep&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;filter&lt;/span&gt;(date &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2020-04-05&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  
  &lt;span style=&#34;color:#75715e&#34;&gt;# 같은 국가명인데, 다른 대륙으로 묶인 경우가 있었다. &lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# cases &amp;amp; deaths는 똑같아서, 중복값 처리 했다. &lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;distinct&lt;/span&gt;(date, cases, deaths, country, .keep_all &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;)

&lt;span style=&#34;color:#a6e22e&#34;&gt;glimpse&lt;/span&gt;(data)

Rows&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;198&lt;/span&gt;
Columns&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;
Groups&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; country [198]
&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt; date           &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;date&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2020-04-05&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2020-04-05&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2020-04-05&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2020-04-05&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;…
&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt; cases          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;dbl&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;35&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;29&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;314&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;186&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;34&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;139&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;241&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;78&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;…
&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt; deaths         &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;dbl&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;47&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, …
&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt; country        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;chr&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Afghanistan&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Albania&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Andorra&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Algeria&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A…
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;$ cty_code       &amp;lt;chr&amp;gt; &amp;#34;&lt;/span&gt;AFG&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;ALB&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;AND&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;DZA&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;AGO&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;ATG&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;ARG&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;…
&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt; popData2018    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;dbl&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;37172386&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2866376&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;77006&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;42228429&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;30809762&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;9628&lt;/span&gt;…
&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt; Continent_Name &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;chr&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Asia&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Europe&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Europe&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Africa&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Africa&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;N…
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;$ cum_cases      &amp;lt;dbl&amp;gt; 270, 333, 466, 1300, 10, 15, 1451, 1506, 64, 5687,…
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;$ cum_deaths     &amp;lt;dbl&amp;gt; 5, 19, 17, 130, 2, 0, 43, 14, 0, 34, 186, 10, 4, 4…
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;$ text           &amp;lt;chr&amp;gt; &amp;#34;&lt;/span&gt;Country&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; Afghanistan&lt;span style=&#34;color:#a6e22e&#34;&gt;\ncases &lt;/span&gt;(M)&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;35&lt;/span&gt;\ntoday_deaths…
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;이제 데이터 가공 및 요약이 끝이났다. 시각화만 남았다. 시각화는 &lt;code&gt;ggplot2&lt;/code&gt;로 개발한 뒤에, &lt;code&gt;ggplotly()&lt;/code&gt;에서 담아서 출력한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;p &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(data, &lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;cases, y&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;deaths, size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; popData2018, color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Continent_Name, text&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;text)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_point&lt;/span&gt;(alpha&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.7&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; 
  
  &lt;span style=&#34;color:#75715e&#34;&gt;# x값에 로그를 준 이유는? 극단적인 이상치가 발생되어 전체적인 흐름 확인하기가 어려웠다. &lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;scale_x_log10&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;scale_size&lt;/span&gt;(range &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1.4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;19&lt;/span&gt;), name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Population (M)&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;scale_color_viridis&lt;/span&gt;(discrete&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;, guide&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_minimal&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme&lt;/span&gt;(legend.position&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;none&amp;#34;&lt;/span&gt;)
  
pp &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ggplotly&lt;/span&gt;(p, tooltip&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;text&amp;#34;&lt;/span&gt;)
pp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/coronaProject/project_03/project_04.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;위 그림이 나오면 성공이다. 이제 R Markdown에서 응용하는 소스코드를 만들어보자.&lt;/p&gt;
&lt;h2 id=&#34;v-apply-to-r-markdown&#34;&gt;V. Apply to R Markdown&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Global Bubble Chart&lt;/code&gt; 탭에 해당하는 소스코드를 찾아서 아래와 같이 입력하고 실행한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Create data Reactive&lt;/span&gt;
corona_bubble_df &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;reactive&lt;/span&gt;({
  corona3 &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;filter&lt;/span&gt;(date &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2020-04-05&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;is.na&lt;/span&gt;(cty_code)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;select&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(day, month, year, geoId)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# Reorder countries to having big bubbles on top&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;arrange&lt;/span&gt;(date) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;group_by&lt;/span&gt;(country) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(cum_cases &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;cumsum&lt;/span&gt;(cases), 
         cum_deaths &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;cumsum&lt;/span&gt;(deaths)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#75715e&#34;&gt;# prepare text for tooltip&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;paste&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Country: &amp;#34;&lt;/span&gt;, country, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\ntoday cases: &amp;#34;&lt;/span&gt;, cases, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\ntoday_deaths: &amp;#34;&lt;/span&gt;, deaths, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\ntotal_cases: &amp;#34;&lt;/span&gt;, cum_cases, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\ntotal_deaths: &amp;#34;&lt;/span&gt;, cum_deaths, sep&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;filter&lt;/span&gt;(date &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2020-04-05&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;distinct&lt;/span&gt;(date, cases, deaths, country, .keep_all &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;)
})

&lt;span style=&#34;color:#a6e22e&#34;&gt;renderPlotly&lt;/span&gt;({
  &lt;span style=&#34;color:#75715e&#34;&gt;# Classic ggplot&lt;/span&gt;
  p &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;corona_bubble_df&lt;/span&gt;(), &lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;cases, y&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;deaths, size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; popData2018, color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Continent_Name, text&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;text)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_point&lt;/span&gt;(alpha&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.7&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; 
    &lt;span style=&#34;color:#a6e22e&#34;&gt;scale_x_log10&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; 
    &lt;span style=&#34;color:#a6e22e&#34;&gt;scale_size&lt;/span&gt;(range &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1.4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;19&lt;/span&gt;), name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Population (M)&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;scale_color_viridis&lt;/span&gt;(discrete&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;, guide&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_minimal&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;theme&lt;/span&gt;(legend.position&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;none&amp;#34;&lt;/span&gt;)
  
  &lt;span style=&#34;color:#a6e22e&#34;&gt;ggplotly&lt;/span&gt;(p, tooltip&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;text&amp;#34;&lt;/span&gt;)
})
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/coronaProject/project_03/project_05.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;vi-더-할-수-있는-것-과제로-남겨두기&#34;&gt;VI. 더 할 수 있는 것 (과제로 남겨두기)&lt;/h2&gt;
&lt;p&gt;위 통계는 단순히 확진자수와 사망자수의 통계를 나타나는 것이지만, 인구수 대비 확진자수, 사망자수, 또한 치사율 등을 추가로 구할 수 있을 것이다. 이러한 부분이 매우 중요하다면, &lt;code&gt;shiny&lt;/code&gt;의 &lt;code&gt;valueBox&lt;/code&gt; 같은 것을 활용하여 보여주는 것도 하나의 좋은 대시보드 자료가 될 수 있다. 이러한 내용들은 향후 코로나 대시보드를 제작할 때 참고 하여 강사가 만든 것 보다 더 좋은 대시보드를 만들어가는데 도움이 되었으면 좋겠다.&lt;/p&gt;
&lt;h2 id=&#34;vii-conclusion&#34;&gt;VII. Conclusion&lt;/h2&gt;
&lt;p&gt;오늘은 &lt;code&gt;Bubble Chart&lt;/code&gt;를 직접 연습해보고 &lt;code&gt;R Markdown&lt;/code&gt;에 응용하는 소스코드를 진행하였다. 시각화 강의 때도 언뜻 설명하였지만, 강사가 다른 그래프보다 plotly를 응용하는 이유는 ggplot2를 지원하기 때문이다. 익숙한 코드로 우선 작업후 &lt;code&gt;ggplotly()&lt;/code&gt; 함수 한줄이면 충분히 &lt;code&gt;Interactive&lt;/code&gt;하게 시각화를 해줄 수 있다. 지난 포스팅에서는 &lt;code&gt;dygraphs&lt;/code&gt; 패키지를 사용하면서 동적 시각화를 작성했고, 오늘은 &lt;code&gt;plotly&lt;/code&gt; 패키지를 구성하여 작업했다.&lt;/p&gt;
&lt;p&gt;이글을 읽는 사람들에게 작게나마 도움이 되기를 바란다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Pray for Victims of Covid_19. Contribution to them with this tutorial.&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;viii-reference&#34;&gt;VIII. Reference&lt;/h2&gt;
&lt;p&gt;Holtz Yan. (2019). Interactive bubble chart. Retrieved April 8, 2020, from &lt;a href=&#34;https://www.r-graph-gallery.com/bubble_chart_interactive_ggplotly.html&#34;&gt;https://www.r-graph-gallery.com/bubble_chart_interactive_ggplotly.html&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Corona Shiny Project 2 - Visusalization (Time Series)</title>
      <link>https://chloevan.github.io/r/shiny/project_02/</link>
      <pubDate>Tue, 07 Apr 2020 10:10:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/shiny/project_02/</guid>
      <description>&lt;h2 id=&#34;공지&#34;&gt;공지&lt;/h2&gt;
&lt;p&gt;이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다&lt;/p&gt;
&lt;p&gt;이번에 준비한 Tutorial 코로나 세계현황을 &lt;code&gt;Shiny Dashboard&lt;/code&gt;로 만들어 가는 과정을 담았다.&lt;/p&gt;
&lt;h2 id=&#34;i-shiny-tutorial-소개&#34;&gt;I. Shiny Tutorial 소개&lt;/h2&gt;
&lt;p&gt;처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_01/&#34;&gt;shiny tutorial 01 - get started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_02/&#34;&gt;shiny tutorial 02 - Shiny Structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_03/&#34;&gt;shiny tutorial 03 - HTML content&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_04/&#34;&gt;shiny tutorial 04 - Shiny Layouts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_05/&#34;&gt;shiny tutorial 05 - Sharing Apps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_06/&#34;&gt;shiny tutorial 06 - shinydashboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_07/&#34;&gt;shiny tutorial 07 - flexdashboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_08/&#34;&gt;shiny tutorial 08 - HTML, CSS 적용&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ii-shiny-project&#34;&gt;II. Shiny Project&lt;/h2&gt;
&lt;p&gt;이전 포스트에서는 &lt;code&gt;Corona 데이터셋&lt;/code&gt;을 구하는 방법에 대해 기술하였다. 그리고, 데이터셋을 &lt;code&gt;MongoDB&lt;/code&gt;에 저장하는 방법에 대해 서술하였다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/project_01/&#34;&gt;Corona Shiny Project I - Get Data&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;iii-shiny-project-with-flexdashboard-package&#34;&gt;III. Shiny Project with flexdashboard package.&lt;/h2&gt;
&lt;p&gt;강사는 &lt;code&gt;flexdashboard&lt;/code&gt; 패키지를 활용할 예정이기 때문에 어떻게 처음 시작하는지는 여기서 추가 설명은 하지 않는다. 다만, 처음 이 페이지를 방문한 사람을 위해 강사가 작성한 블로그 글 &lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_07/&#34;&gt;shiny tutorial 07 - flexdashboard&lt;/a&gt;에서 참조하기를 바란다.&lt;/p&gt;
&lt;h2 id=&#34;1-model-dashboard&#34;&gt;(1) Model Dashboard&lt;/h2&gt;
&lt;p&gt;강사가 참조하려는 대시보드는 아래와 같이 만들어갈 예정이다. &lt;code&gt;Heatmap&lt;/code&gt; 대신에 세계지도를 넣으려고 하며, 날짜에 따라 어떻게 시시각각 변하는지 만들 예정이다. 또한, &lt;code&gt;Time Series Chart&lt;/code&gt; 또는 &lt;code&gt;Bubble Chart&lt;/code&gt; 애니메이션을 활용하여 국가별로 누적 확진자수와 사망자수를 만들 예정이다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jjallaire.shinyapps.io/shiny-biclust/&#34;&gt;Gene Expression Biclustering&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/coronaProject/project_02/project_01.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;2-필수-패키지-불러오기&#34;&gt;(2) 필수 패키지 불러오기&lt;/h2&gt;
&lt;p&gt;강사가 사용하려는 패키지는 아래와 같다. (작업하다보면 추가가 될 수 있어서, 계속 업데이트 하려고 한다.)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;```r
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 데이터를 &amp;#39;global&amp;#39; chunk에 넣고, 대시보드의 모든 사용자가 데이터를 공유할 수 있도록 지원하는 소스 코드&lt;/span&gt;

&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(shiny)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(mongolite)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(tidyverse)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(leaflet)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(dygraphs)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(xts)
&lt;span style=&#34;color:#e6db74&#34;&gt;```&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;3-layout-기본-구성&#34;&gt;(3) Layout 기본 구성&lt;/h2&gt;
&lt;p&gt;강사는 아래와 같이 기본 구성도를 작성하였다.
&lt;img src=&#34;https://chloevan.github.io/img/shiny/coronaProject/project_02/project02.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;iii-get-data-from-mongodb&#34;&gt;III. Get Data From MongoDB&lt;/h2&gt;
&lt;p&gt;아래 소스코드를 통해서 데이터를 가져온다. MongoDB에 관련된 자료는 &lt;a href=&#34;https://rpubs.com/Evan_Jung/r_mongodb&#34;&gt;R MongoDB 접속 및 소개 자료&lt;/a&gt;에서 확인하기를 바란다. 사실 본 프로젝트에서는 꼭 이렇게 하지 않아도 된다. 그러나, 조금 더 깊은 내용을 원하면, 이렇게 해줘야 함을 명시한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(mongolite)
collection &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;covid_19&amp;#34;&lt;/span&gt; 
db &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;learningspoons&amp;#39;&lt;/span&gt;
mongo_id &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Sys.getenv&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MONGO_ID&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;# 보안 유지를 위해 가렸다.(실무에서는 이렇게 작업하라고 권유하는 것임!) &lt;/span&gt;
mongo_pw &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Sys.getenv&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MONGO_PW&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;# (실무에서는 이렇게 작업하라고 권유하는 것임!)  &lt;/span&gt;

mongo_url &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;paste0&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;mongodb+srv://&amp;#39;&lt;/span&gt;, mongo_id, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;:&amp;#39;&lt;/span&gt;,mongo_pw,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;@learningspoons-rhpei.gcp.mongodb.net/&amp;#39;&lt;/span&gt;)

conn &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;mongo&lt;/span&gt;(collection &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; collection, 
              db &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; db, 
              url &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mongo_url)

&lt;span style=&#34;color:#75715e&#34;&gt;# get data&lt;/span&gt;
corona &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; conn&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;find&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{}&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;위 소스코드는 &lt;code&gt;global&lt;/code&gt; chunk에 작성한다. 이유는 위 데이터를 우선 공동으로 사용되어야 하기 때문이다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Tip-1: 여기에서 &lt;code&gt;Sys.getenv(&amp;quot;MONGO_ID&amp;quot;)&lt;/code&gt;와 함께 &lt;code&gt;App Publishing&lt;/code&gt;을 진행하면, shinyapp.io에서 에러가 날 가능성이 크다. 이유는 &lt;code&gt;Sys.getenv(&amp;quot;&amp;quot;)&lt;/code&gt;은 환경설정 파일(&lt;code&gt;.Renviron&lt;/code&gt;)인데, 당연히 &lt;code&gt;github&lt;/code&gt; 등에는 공적으로 같이 올리지 않는다. 강사는 publishing 할 때, 명시적으로 ID와 PW를 같이 기재하여 배포하였지만, 보안상으로는 당연히 그렇게 하면 안된다. 이에 대한 적절한 해결책을 공유하니, 참고하기를 바란다.
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/39084284/how-to-pass-environment-variables-to-shinyapps&#34;&gt;How to pass environment variables to shinyapps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;iv-sidebar-구성&#34;&gt;IV. Sidebar 구성&lt;/h2&gt;
&lt;p&gt;이제 본격적으로 시각화를 구현하기에 앞서서 슬라이드형 날짜를 구성해보자.&lt;/p&gt;
&lt;h2 id=&#34;1-전역변수-지정&#34;&gt;(1) 전역변수 지정&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;global chunk&lt;/code&gt;에 아래와 같이 추가적으로 코드를 입력한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 날짜 지정&lt;/span&gt;
corona_date &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.Date&lt;/span&gt;(corona&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;dateRep)

&lt;span style=&#34;color:#75715e&#34;&gt;# 특정 Input값이 없을 경우 대비&lt;/span&gt;
variable &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; F
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;위 코드를 지정했다면, 아래와 같이 소스코드를 작업한 뒤 결과물을 빠르게 확인한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;Inputs {.sidebar data-width=300}
-----------------------------------------------------------------------
원하는 날짜에 놓고 &lt;span style=&#34;color:#e6db74&#34;&gt;`Button`&lt;/span&gt;을 누르세요. 

&lt;span style=&#34;color:#e6db74&#34;&gt;```r
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;uiOutput&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Slider&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#a6e22e&#34;&gt;sliderInput&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;day1&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Day&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;min&lt;/span&gt;(corona_date), &lt;span style=&#34;color:#a6e22e&#34;&gt;max&lt;/span&gt;(corona_date),
                    value &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;max&lt;/span&gt;(corona_date)), animate &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; T, step &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)

&lt;span style=&#34;color:#a6e22e&#34;&gt;renderUI&lt;/span&gt;({
    &lt;span style=&#34;color:#a6e22e&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;is.null&lt;/span&gt;(input&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;variable)){
    }else{
      &lt;span style=&#34;color:#a6e22e&#34;&gt;if&lt;/span&gt;(input&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;variable &lt;span style=&#34;color:#f92672&#34;&gt;%in%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cases&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;deaths&amp;#34;&lt;/span&gt;)){
        &lt;span style=&#34;color:#a6e22e&#34;&gt;sliderInput&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;day1&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Day&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;min&lt;/span&gt;(corona_date), &lt;span style=&#34;color:#a6e22e&#34;&gt;max&lt;/span&gt;(corona_date),
                    value &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;max&lt;/span&gt;(corona_date)), animate &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; T, step &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
        }else{
        &lt;span style=&#34;color:#a6e22e&#34;&gt;sliderInput&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;day2&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Day&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;min&lt;/span&gt;(corona_date), &lt;span style=&#34;color:#a6e22e&#34;&gt;max&lt;/span&gt;(corona_date),
                    value &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;max&lt;/span&gt;(corona_date)&lt;span style=&#34;color:#ae81ff&#34;&gt;-7&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;max&lt;/span&gt;(corona_date)), animate &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; T, step &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
        } &lt;span style=&#34;color:#75715e&#34;&gt;# else&lt;/span&gt;
    } &lt;span style=&#34;color:#75715e&#34;&gt;# is.null&lt;/span&gt;
  })
&lt;span style=&#34;color:#e6db74&#34;&gt;```&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/coronaProject/project_02/project_03.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;추가적으로 더 넣을 내용이 생기면 업데이트 하겠다.&lt;/p&gt;
&lt;h2 id=&#34;v-time-series-데이터-작성&#34;&gt;V. Time Series 데이터 작성&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Shiny App&lt;/code&gt;을 작성할 때, 특히 시각화와 데이터 처리와 관련해서 작업할 때는 &lt;code&gt;R Markdown&lt;/code&gt;에서 하는 것보다, 일반 &lt;code&gt;.R&lt;/code&gt;파일을 하나 생성해서 빠르게 구현하는 것을 추천한다.&lt;/p&gt;
&lt;p&gt;강사가 작업할 Time Series 시각화는 &lt;code&gt;dygraphs&lt;/code&gt; 패키지를 할용하려고 한다. 참고로 강사 역시, dygraphs 패키지를 이전에 사용해본적은 없다! 즉, 현재 듣는 수강생과 동일한 입장에서 작업하는 것임을 알고, 자신감 있게 작업하기를 바란다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.r-graph-gallery.com/317-time-series-with-the-dygraphs-library.html&#34;&gt;Time series visualization with the dygraphs package&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;강사가 R 에디터에서 빠르게 작업한 전체 소스코드는 아래와 같다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# load data in &amp;#39;global&amp;#39; chunk so it can be shared by all users of the dashboard&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(mongolite)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(tidyverse)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(dygraphs)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(xts)

collection &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;covid_19&amp;#34;&lt;/span&gt; 
db &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;learningspoons&amp;#39;&lt;/span&gt;
mongo_id &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Sys.getenv&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MONGO_ID&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;# 보안 유지를 위해 가렸다.(실무에서는 이렇게 작업하라고 권유하는 것임!) &lt;/span&gt;
mongo_pw &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Sys.getenv&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MONGO_PW&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;# (실무에서는 이렇게 작업하라고 권유하는 것임!)  &lt;/span&gt;

mongo_url &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;paste0&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;mongodb+srv://&amp;#39;&lt;/span&gt;, mongo_id, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;:&amp;#39;&lt;/span&gt;,mongo_pw,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;@learningspoons-rhpei.gcp.mongodb.net/&amp;#39;&lt;/span&gt;)

conn &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;mongo&lt;/span&gt;(collection &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; collection, 
              db &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; db, 
              url &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mongo_url)

&lt;span style=&#34;color:#75715e&#34;&gt;# get data&lt;/span&gt;
corona &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; conn&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;find&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{}&amp;#34;&lt;/span&gt;)

&lt;span style=&#34;color:#75715e&#34;&gt;# 날짜 변환&lt;/span&gt;
corona&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;dateRep &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.Date&lt;/span&gt;(corona&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;dateRep)

&lt;span style=&#34;color:#75715e&#34;&gt;# summarise&lt;/span&gt;
corona2 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; corona &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;group_by&lt;/span&gt;(dateRep) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;summarise&lt;/span&gt;(total_cases &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt;(cases), 
            total_deaths &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt;(deaths))

cases_data &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;xts&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; corona2[, &lt;span style=&#34;color:#ae81ff&#34;&gt;-1&lt;/span&gt;], order.by &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; corona2&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;dateRep)
p &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dygraph&lt;/span&gt;(cases_data) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;dyOptions&lt;/span&gt;(drawPoints &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;, pointSize &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, fillGraph&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;)
p
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/coronaProject/project_02/project_04.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;이제 &lt;code&gt;R Markdown&lt;/code&gt;에 응용만 하면 된다. 그런데, 여기서 주의점! &lt;code&gt;shiny tutorial&lt;/code&gt;에서 패키지 설명서를 잘 읽었다면, interactive graph package와 연동이 잘 된다는 걸 기억했으면 좋겠다. 즉, 생각보다 쉽게 작업할 수 있다는 뜻이다. &lt;code&gt;dygraphs&lt;/code&gt; 패키지 설명서를 다시 한번 읽어보자.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://rstudio.github.io/dygraphs/shiny.html&#34;&gt;Using in Shiny Applications&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ui.R&lt;/code&gt;코드에서 &lt;code&gt;dygraphOutput(&amp;quot;dygraph&amp;quot;)&lt;/code&gt;을 봤으면 좋겠다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;이런 형태로 소스코드를 응용할 것이다. 잘 따라와주기를 바란다.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;corona_xts &amp;lt;- reactive({
  temp &amp;lt;- corona %&amp;gt;% 
  mutate(dateRep = as.Date(dateRep)) %&amp;gt;% 
  group_by(dateRep) %&amp;gt;% 
  summarise(total_cases = sum(cases), 
            total_deaths = sum(deaths))
  xts::xts(x = temp[, -1], order.by = temp$dateRep)
})

renderDygraph({
  dygraph(corona_xts(), height = 400) %&amp;gt;% 
  dyHighlight(highlightCircleSize = 5, 
              highlightSeriesBackgroundAlpha = 0.2,
              hideOnMouseOut = FALSE) %&amp;gt;% 
  dyOptions(drawPoints = TRUE, 
            pointSize = 4, 
            fillGraph=TRUE, 
            axisLineWidth = 1.5)
})
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/coronaProject/project_02/project_05.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;위와 같은 형태로 나오면 완성이다. 아쉽지만, 아직은 &lt;code&gt;date&lt;/code&gt;와 연동된 것은 아니다. &lt;code&gt;date&lt;/code&gt;와 연동하려면, 보다 더 많은 작업을 해야 한다! 아직은 좀 더 기다리자.&lt;/p&gt;
&lt;p&gt;다음 시간에는 &lt;code&gt;Bubble Chart&lt;/code&gt;를 작성하는 코드를 실습해보자.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Pray for Victims of Covid_19. Contribution to them with this tutorial.&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Corona Shiny Project I - Get Data</title>
      <link>https://chloevan.github.io/r/shiny/project_01/</link>
      <pubDate>Mon, 06 Apr 2020 09:10:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/shiny/project_01/</guid>
      <description>&lt;h2 id=&#34;공지&#34;&gt;공지&lt;/h2&gt;
&lt;p&gt;이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다&lt;/p&gt;
&lt;p&gt;이번에 준비한 Tutorial 코로나 세계현황을 &lt;code&gt;Shiny Dashboard&lt;/code&gt;로 만들어 가는 과정을 담았다.&lt;/p&gt;
&lt;h2 id=&#34;i-shiny-tutorial-소개&#34;&gt;I. Shiny Tutorial 소개&lt;/h2&gt;
&lt;p&gt;처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_01/&#34;&gt;shiny tutorial 01 - get started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_02/&#34;&gt;shiny tutorial 02 - Shiny Structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_03/&#34;&gt;shiny tutorial 03 - HTML content&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_04/&#34;&gt;shiny tutorial 04 - Shiny Layouts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_05/&#34;&gt;shiny tutorial 05 - Sharing Apps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_06/&#34;&gt;shiny tutorial 06 - shinydashboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_07/&#34;&gt;shiny tutorial 07 - flexdashboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_08/&#34;&gt;shiny tutorial 08 - HTML, CSS 적용&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ii-코로나-바이러스-대시보드-개발-동기&#34;&gt;II. 코로나 바이러스 대시보드 개발 동기&lt;/h2&gt;
&lt;p&gt;강사가 처음 대시보드 강의를 기획할 때는, 이커머스 강의를 기획하고 준비했었다. 그러나, 3월부터 전세계적으로 코로나 바이러스가 확산되기 시작하면서, 코로나 바이러스 대시보드가 우후죽순처럼 생기기 시작했다.&lt;/p&gt;
&lt;p&gt;시간이 지나더라도, 최소 10년 가까이 회자될 코로나 바이러스 대시보드를 교육용으로 만들어 둘 필요는 있다고 생각을 했다.&lt;/p&gt;
&lt;p&gt;본 튜토리얼부터는 그동안에 익힌 &lt;code&gt;R의 주요 패키지&lt;/code&gt;들을 활용하여 데이터 수집 - 저장 - 시각화까지 순차적으로 개발하도록 한다.&lt;/p&gt;
&lt;h2 id=&#34;iii-코로나-바이러스&#34;&gt;III. 코로나 바이러스!!&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/coronaProject/project_01/project01.jpeg&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;2019년 12월부터 중국 우한에서 급속하게 퍼진 코로나 바이러스가 전세계를 강타하기 시작했고, 2020년 4월 6일 오전 9시 기준, 전세계 확진자수는 183개국 120만명을 돌파했고, 68,000명의 사망자 숫자를 돌파했다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/coronaProject/project_01/project02.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;이 기간 동안, (강사 포함) 많은 사람들의 경제적으로, 심리적으로, 육체적으로 어려움을 겪고 있는데, 반드시 꼭 빠른 시일안에 종식되기를 기원하며.. 데이터 분석가 본연의 업무인 시각화에 본격적으로 집중해보자.&lt;/p&gt;
&lt;h2 id=&#34;vi-다양한-대시보드-맛보기&#34;&gt;VI. 다양한 대시보드 맛보기&lt;/h2&gt;
&lt;p&gt;3월 중순에 읽은 글 하나를 소개한다. Shiny Project에 좋은 참고자료가 될 것 같다. &lt;a href=&#34;https://towardsdatascience.com/top-5-r-resources-on-covid-19-coronavirus-1d4c8df6d85f&#34;&gt;Top 35 R resources on Novel COVID-19 Coronavirus&lt;/a&gt;. 기회가 된다면 이 중에서 10개 정도는 소개하는 글을 번역하고 싶기는 하다.&lt;/p&gt;
&lt;h2 id=&#34;v-shiny-project---데이터-가져오기&#34;&gt;V. Shiny Project - 데이터 가져오기&lt;/h2&gt;
&lt;p&gt;가장 큰 문제는 역시나 데이터 수집이다. 이번 포스트에서는 데이터 수집 후 저장까지 작성하는 코드를 보여준다.&lt;/p&gt;
&lt;p&gt;코드에 대한 자세한 설명은 생략하며, 향후 웹 크롤링 Tutorial을 제작할 때 공유하도록 한다.&lt;/p&gt;
&lt;h2 id=&#34;1-데이터-소스-확인&#34;&gt;(1) 데이터 소스 확인&lt;/h2&gt;
&lt;p&gt;현재 코로나 관련 데이터의 원천은 모두 &lt;a href=&#34;https://github.com/CSSEGISandData/COVID-19&#34;&gt;2019 Novel Coronavirus COVID-19 (2019-nCoV) Data Repository by Johns Hopkins CSSE&lt;/a&gt; Repository에서 관리하고 있다.&lt;/p&gt;
&lt;p&gt;전세계에서 의료 통계에 대한 접근 권한이 일반 사용자에게는 당연히 제한된다. 즉, 주어진 데이터셋에서 다양한 대시보드를 작업해야 하는 것이 Data Scientist &amp;amp; Analyst에게는 기본적인 업무이다.&lt;/p&gt;
&lt;p&gt;데이터 분석업에 처음 입문하는 분들에게는 사실 &lt;code&gt;Johns Hopkins CSSE&lt;/code&gt;의 Repo는 굉장히 큰 배움의 장터가 될 것이다. 강사도 많이 배우고 있다. 꼭 전체적인 흐름 및 작성 요령 등을 익히기를 바란다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/coronaProject/project_01/project03.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/CSSEGISandData/COVID-19/tree/master/csse_covid_19_data/csse_covid_19_time_series&#34;&gt;여기, csse_covid_19_time_series&lt;/a&gt;에 있는 데이터를 가져와서 사용할 수 있지만, 본 포스트에서는 사용하지 않는다. 이유는 데이터 전처리를 조금 많이 해줘야 한다. 본인의 데이터 전처리 실력을 조금 뽐내고 싶다면, 여기에서 해도 좋다. 실제 강사가 처음 만들 때는 여기 데이터를 활용 하기는 했다. 단순 작업들이 많은데, 시간적으로 1-2일 시간을 들여 전처리를 진행하였다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;전처리 전의 데이터&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(RCurl)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(tidyverse)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.0 ──
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;## ✓ ggplot2 3.3.0     ✓ purrr   0.3.3
## ✓ tibble  3.0.0     ✓ dplyr   0.8.5
## ✓ tidyr   1.0.0     ✓ stringr 1.4.0
## ✓ readr   1.3.1     ✓ forcats 0.4.0
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
## x tidyr::complete() masks RCurl::complete()
## x dplyr::filter()   masks stats::filter()
## x dplyr::lag()      masks stats::lag()
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;URL &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getURL&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv&amp;#34;&lt;/span&gt;)

data &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;read.csv&lt;/span&gt;(text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; URL, check.names &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; F)
&lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt;(data[1&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;##   Province/State Country/Region      Lat    Long 1/22/20 1/23/20 1/24/20
## 1                   Afghanistan  33.0000 65.0000       0       0       0
## 2                       Albania  41.1533 20.1683       0       0       0
## 3                       Algeria  28.0339  1.6596       0       0       0
## 4                       Andorra  42.5063  1.5218       0       0       0
## 5                        Angola -11.2027 17.8739       0       0       0
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;위 데이터는 확진자와 사망자 모두를 포함하고 있지 않다. 다시 말하면, 위 데이터 모두를 가져와서 날짜별로 재정리하는 코드가 남았다. (무언가 복잡한 것 같다!! 실제로 그렇다!!) 데이터 전처리는 숙제로 과제로 남겨두겠다. 강사가 정리한 것이 있기는 하다! 그러나, 여기에서 보여주지는 않을 것이다!! (프로젝트 마지막날에 공유해주겠다!)&lt;/p&gt;
&lt;p&gt;그래서 수강생들이 조금 더 정제된 데이터를 웹에서 불러와서 사용할 만한 것을 찾았다!! Hooray!! &lt;a href=&#34;https://data.europa.eu/euodp/en/data/dataset/covid-19-coronavirus-data/resource/55e8f966-d5c8-438e-85bc-c7a5a26f4863&#34;&gt;Euro Open Data Portal&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/coronaProject/project_01/project04.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;이제 여기에서 데이터를 수집할 것이다! 다행히 Access URL이 있다. (강사는 백업으로 강사 데이터 github 저장소에 별도로 보관했다. 파일 다운로드가 안되면 강사의 깃허브 URL을 공유할테니 개별적으로 요청하시기를 바란다. )&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1차 백업: 2020-04-06&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;2-데이터-수집&#34;&gt;(2) 데이터 수집&lt;/h2&gt;
&lt;p&gt;이제 본격적으로 데이터 수집 및 간단한 데이터 처리를 진행한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(readxl)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(httr)

&lt;span style=&#34;color:#75715e&#34;&gt;# URL Copy&lt;/span&gt;
url &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://www.ecdc.europa.eu/sites/default/files/documents/COVID-19-geographic-disbtribution-worldwide.xlsx&amp;#39;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# 파일 이름만 가져오기&lt;/span&gt;
getFileName &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;basename&lt;/span&gt;(url)

&lt;span style=&#34;color:#75715e&#34;&gt;# 지정된 디렉토리에 파일 다운로드 받기&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;download.file&lt;/span&gt;(url &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; url, destfile &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; getFileName)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 현재 객체의 파일 리스트 확인&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;list.files&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;COVID-19-geographic-disbtribution-worldwide.xlsx&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 지정된 디렉토리에서 파일 업로드 하기&lt;/span&gt;
data &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;read_excel&lt;/span&gt;(getFileName)
&lt;span style=&#34;color:#a6e22e&#34;&gt;head&lt;/span&gt;(data)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 10
##   dateRep               day month  year cases deaths countriesAndTer… geoId
##   &amp;lt;dttm&amp;gt;              &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;            &amp;lt;chr&amp;gt;
## 1 2020-04-05 00:00:00     5     4  2020    35      1 Afghanistan      AF   
## 2 2020-04-04 00:00:00     4     4  2020     0      0 Afghanistan      AF   
## 3 2020-04-03 00:00:00     3     4  2020    43      0 Afghanistan      AF   
## 4 2020-04-02 00:00:00     2     4  2020    26      0 Afghanistan      AF   
## 5 2020-04-01 00:00:00     1     4  2020    25      0 Afghanistan      AF   
## 6 2020-03-31 00:00:00    31     3  2020    27      0 Afghanistan      AF   
## # … with 2 more variables: countryterritoryCode &amp;lt;chr&amp;gt;, popData2018 &amp;lt;dbl&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;국가별로 깔끔하게 정리된 데이터를 확인할 수 있다.&lt;/p&gt;
&lt;h2 id=&#34;vi-shiny-project---데이터-전처리&#34;&gt;VI. Shiny Project - 데이터 전처리&lt;/h2&gt;
&lt;p&gt;간단하게 데이터를 전처리를 해보자. 데이터를 수집한 뒤에 무조건 전처리를 해줘야 한다! (데이터 전처리 함수를 별도로 만드는 과정을 진행해야 한다!)&lt;/p&gt;
&lt;p&gt;혹시, R이 저용량에서만 사용하는 것 아니냐는 우문이 나올 것 같아서 링크 하나를 남겨둔다! 꼭 참고하기를 바란다 (입문자에게는 어려울 수 있다!).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://livefreeordichotomize.com/2019/06/04/using_awk_and_r_to_parse_25tb/&#34;&gt;Using AWK and R to parse 25tb&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;데이터 전처리를 할 작업은 한가지만 진행한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;dplyr&lt;/code&gt; 패키지의 &lt;code&gt;select()&lt;/code&gt;함수를 활용하여 &lt;code&gt;day&lt;/code&gt;, &lt;code&gt;month&lt;/code&gt;, &lt;code&gt;year&lt;/code&gt;, &lt;code&gt;geoId&lt;/code&gt;을 삭제한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;data2mongo &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; data &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;select&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(day, month, year, geoId))
&lt;span style=&#34;color:#a6e22e&#34;&gt;head&lt;/span&gt;(data2mongo)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 6
##   dateRep             cases deaths countriesAndTer… countryterritor… popData2018
##   &amp;lt;dttm&amp;gt;              &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;            &amp;lt;chr&amp;gt;                  &amp;lt;dbl&amp;gt;
## 1 2020-04-05 00:00:00    35      1 Afghanistan      AFG                 37172386
## 2 2020-04-04 00:00:00     0      0 Afghanistan      AFG                 37172386
## 3 2020-04-03 00:00:00    43      0 Afghanistan      AFG                 37172386
## 4 2020-04-02 00:00:00    26      0 Afghanistan      AFG                 37172386
## 5 2020-04-01 00:00:00    25      0 Afghanistan      AFG                 37172386
## 6 2020-03-31 00:00:00    27      0 Afghanistan      AFG                 37172386
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;vii-mongodb에-저장&#34;&gt;VII. MongoDB에 저장&lt;/h2&gt;
&lt;p&gt;데이터를 올린 것은 좋았지만, 아직 끝난 것은 아니다. 현재 사용중인 &lt;code&gt;Session&lt;/code&gt;을 종료하면 (또는 &lt;code&gt;RStudio&lt;/code&gt;)를 종료하면 전처리된 데이터는 당연히 사라진다.&lt;/p&gt;
&lt;p&gt;즉, 다시 전처리 코드를 실행해야 한다. (했던 것을 또하기는 싫다.) 이렇게 저장된 데이터를 &lt;code&gt;Database&lt;/code&gt;에 저장해야 하는데, 기존에 학습했던 &lt;code&gt;MongoDB&lt;/code&gt;에 저장한다. 여기서 저장된 데이터를 &lt;code&gt;Shiny Server&lt;/code&gt;에서 불러와서 대시보드로 작업하는 코드를 구현할 것이다!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://rpubs.com/Evan_Jung/r_mongodb&#34;&gt;R MongoDB 접속 및 소개 자료&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(mongolite)
collection &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;covid_19&amp;#34;&lt;/span&gt; 
db &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;learningspoons&amp;#39;&lt;/span&gt;
mongo_id &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Sys.getenv&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MONGO_ID&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;# 보안 유지를 위해 가렸다.(실무에서는 이렇게 작업하라고 권유하는 것임!) &lt;/span&gt;
mongo_pw &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Sys.getenv&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MONGO_PW&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;# (실무에서는 이렇게 작업하라고 권유하는 것임!)  &lt;/span&gt;

mongo_url &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;paste0&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;mongodb+srv://&amp;#39;&lt;/span&gt;, mongo_id, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;:&amp;#39;&lt;/span&gt;,mongo_pw,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;@learningspoons-rhpei.gcp.mongodb.net/&amp;#39;&lt;/span&gt;)

conn &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;mongo&lt;/span&gt;(collection &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; collection, 
              db &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; db, 
              url &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mongo_url)

&lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt;(conn)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## &amp;lt;Mongo collection&amp;gt; &#39;covid_19&#39; 
##  $aggregate(pipeline = &amp;quot;{}&amp;quot;, options = &amp;quot;{\&amp;quot;allowDiskUse\&amp;quot;:true}&amp;quot;, handler = NULL, pagesize = 1000, iterate = FALSE) 
##  $count(query = &amp;quot;{}&amp;quot;) 
##  $disconnect(gc = TRUE) 
##  $distinct(key, query = &amp;quot;{}&amp;quot;) 
##  $drop() 
##  $export(con = stdout(), bson = FALSE, query = &amp;quot;{}&amp;quot;, fields = &amp;quot;{}&amp;quot;, sort = &amp;quot;{\&amp;quot;_id\&amp;quot;:1}&amp;quot;) 
##  $find(query = &amp;quot;{}&amp;quot;, fields = &amp;quot;{\&amp;quot;_id\&amp;quot;:0}&amp;quot;, sort = &amp;quot;{}&amp;quot;, skip = 0, limit = 0, handler = NULL, pagesize = 1000) 
##  $import(con, bson = FALSE) 
##  $index(add = NULL, remove = NULL) 
##  $info() 
##  $insert(data, pagesize = 1000, stop_on_error = TRUE, ...) 
##  $iterate(query = &amp;quot;{}&amp;quot;, fields = &amp;quot;{\&amp;quot;_id\&amp;quot;:0}&amp;quot;, sort = &amp;quot;{}&amp;quot;, skip = 0, limit = 0) 
##  $mapreduce(map, reduce, query = &amp;quot;{}&amp;quot;, sort = &amp;quot;{}&amp;quot;, limit = 0, out = NULL, scope = NULL) 
##  $remove(query, just_one = FALSE) 
##  $rename(name, db = NULL) 
##  $replace(query, update = &amp;quot;{}&amp;quot;, upsert = FALSE) 
##  $run(command = &amp;quot;{\&amp;quot;ping\&amp;quot;: 1}&amp;quot;, simplify = TRUE) 
##  $update(query, update = &amp;quot;{\&amp;quot;$set\&amp;quot;:{}}&amp;quot;, filters = NULL, upsert = FALSE, multiple = FALSE)
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;연결이 완료된 후에는 이제 데이터를 그대로 저장시키면 된다.&lt;/li&gt;
&lt;li&gt;소스코드 자체가 어려운 것은 아니니 참고하기를 바란다.&lt;/li&gt;
&lt;li&gt;먼저 데이터가 있는지 확인한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;conn&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;count&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{}&amp;#39;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## [1] 0
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;0개인 것이 확인이 되었으면 이번에는 저장 후 다시 데이터를 확인해본다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;conn&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;insert&lt;/span&gt;(data2mongo)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## List of 5
##  $ nInserted  : num 8905
##  $ nMatched   : num 0
##  $ nRemoved   : num 0
##  $ nUpserted  : num 0
##  $ writeErrors: list()
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;conn&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;count&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{}&amp;#39;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## [1] 8905
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;데이터가 들어간 숫자만큼 나와면 정상이다. 이렇게 전처리에 들어간 데이터를 보통 실무에서는 Data Mart 분석 테이블이라고 부르기도 한다. 강사는 분석 테이블이라는 용어를 좋아하기는 하다. 무언가 더 전처리를 할 필요가 없는.. 이러한 일련의 과정을 보통 &lt;code&gt;ETL(Extract, Transformate, Load)&lt;/code&gt;이라고 하며. 보통은 반복적으로 일어날 것 같으면 &lt;code&gt;Function&lt;/code&gt;을 만들어서 실행시키기도 한다. (강사가 진행하는 강의에서 맛보기로 볼 수 있다!)&lt;/p&gt;
&lt;p&gt;이렇게 간단하게 코로나 데이터 수집부터 몽고DB에 저장하는 것 까지 실습했다.&lt;/p&gt;
&lt;p&gt;다음 장에서는 &lt;code&gt;flexdashboard + Shiny Source&lt;/code&gt; 코드를 직접 구현하도록 한다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Pray for Victims of Covid_19. Contribution to them with this tutorial.&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>shiny tutorial 08 - HTML, CSS 적용</title>
      <link>https://chloevan.github.io/r/shiny/tutorial_08/</link>
      <pubDate>Sun, 05 Apr 2020 11:30:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/shiny/tutorial_08/</guid>
      <description>&lt;h2 id=&#34;공지&#34;&gt;공지&lt;/h2&gt;
&lt;p&gt;이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다&lt;/p&gt;
&lt;p&gt;이번에 준비한 Tutorial 코로나 세계현황을 &lt;code&gt;Shiny Dashboard&lt;/code&gt;로 만들어 가는 과정을 담았다.&lt;/p&gt;
&lt;h2 id=&#34;i-이전-글-소개&#34;&gt;I. 이전 글 소개&lt;/h2&gt;
&lt;p&gt;처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_01/&#34;&gt;shiny tutorial 01 - get started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_02/&#34;&gt;shiny tutorial 02 - Shiny Structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_03/&#34;&gt;shiny tutorial 03 - HTML content&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_04/&#34;&gt;shiny tutorial 04 - Shiny Layouts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_05/&#34;&gt;shiny tutorial 05 - Sharing Apps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_06/&#34;&gt;shiny tutorial 06 - shinydashboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_07/&#34;&gt;shiny tutorial 07 - flexdashboard&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ii-html-css-jquery-소개&#34;&gt;II. HTML, CSS, JQuery 소개&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_03/&#34;&gt;shiny tutorial 03 - HTML content&lt;/a&gt;에서 &lt;code&gt;Shiny&lt;/code&gt;와 &lt;code&gt;HTML&lt;/code&gt; 문법 사이에는 여러 공통점이 있다는 것을 확인 했다. 여기에서는 &lt;code&gt;HTML&lt;/code&gt;의 내용보다는 &lt;code&gt;CSS&lt;/code&gt;, 그리고 &lt;code&gt;JQuery&lt;/code&gt;에 대해서 다루도록 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;우선, 처음 접하는 &lt;code&gt;CSS&lt;/code&gt;와 &lt;code&gt;JQuery&lt;/code&gt;에 대해 간단하게 정리하면 아래와 같을 것이다 (김진성, 2018, p.678).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;HTML&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;시맨틱 태그, 디자인 속성 비 권장&lt;/li&gt;
&lt;li&gt;CSS 대체 태그 중단(center, frame, font 등)&lt;/li&gt;
&lt;li&gt;웹 개발용 API 제공&lt;/li&gt;
&lt;li&gt;주요 기능: 문서 작성 기능&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;CSS&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HTML문서를 대상으로 디자인 적용&lt;/li&gt;
&lt;li&gt;디자인 소프트웨어(Photoshop) 일부 기능 제공&lt;/li&gt;
&lt;li&gt;주요 기능: 디자인 기능&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;JQuery&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;최신 자바스크립트&lt;/li&gt;
&lt;li&gt;문서 객체 처리, 이벤트 핸들링, 애니메이션&lt;/li&gt;
&lt;li&gt;ajax 등의 개발에 필요한 라이브러리 제공&lt;/li&gt;
&lt;li&gt;주요 기능: 동적 기능&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;읽고나면, 딱히 정리되는 건 아니다. 역시 직접 실행해보고 해봐야 안다. &lt;code&gt;CSS&lt;/code&gt;부터 적용한 &lt;code&gt;Shiny&lt;/code&gt;가 어떻게 달라지는지 확인해보자.&lt;/p&gt;
&lt;p&gt;이번 &lt;code&gt;Tutorial&lt;/code&gt; 부터는 &lt;code&gt;ui.R&lt;/code&gt; &amp;amp; &lt;code&gt;server.R&lt;/code&gt; 두 파일로 구분할 것이다. 실제 프로젝트에서도 그렇게 진행한다.&lt;/p&gt;
&lt;h2 id=&#34;iii-css-적용&#34;&gt;III. CSS 적용&lt;/h2&gt;
&lt;h2 id=&#34;1-css-파일-다운-받기&#34;&gt;(1) CSS 파일 다운 받기&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;빠르게 대시보드를 작성해야 하는 것이 선결과제이기 때문에, 처음부터 하나씩 만들 생각을 하면 곤란하다.&lt;/li&gt;
&lt;li&gt;CSS파일 부트스트랩: &lt;a href=&#34;https://bootswatch.com/&#34;&gt;https://bootswatch.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/tutorial_08/shiny01.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;위 싸이트에 들어가면 마음에 드는 테마를 클릭하여 &lt;code&gt;CSS&lt;/code&gt;파일을 다운로드 받는다. 강사는 &lt;code&gt;Darkly&lt;/code&gt;를 선택했다.&lt;/p&gt;
&lt;h2 id=&#34;2-r-shiny-project-시작&#34;&gt;(2) R Shiny Project 시작&lt;/h2&gt;
&lt;p&gt;새롭게 R Shiny Project를 시작해본다. [&lt;code&gt;File&lt;/code&gt;] - [&lt;code&gt;New File&lt;/code&gt;] - [&lt;code&gt;Shiny Web App&lt;/code&gt;]을 클릭하면 아래와 같은 팝업이 나오는데, 여기에서 반드시, &lt;code&gt;Multiple File (ui.R/server.R)&lt;/code&gt;을 클릭한다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/tutorial_08/shiny02.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;디렉토리 &lt;code&gt;tree&lt;/code&gt;구조를 살펴보면 아래와 같다. 특히 &lt;code&gt;css&lt;/code&gt;파일이 어떤 폴더 안에 있는지를 확인한다. 반드시, &lt;code&gt;www folder&lt;/code&gt;안에 &lt;code&gt;css&lt;/code&gt; 파일이 있어야 한다.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ tree
├── server.R
├── ui.R
└── www
    └── bootstrap.min.css
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;3-app-화면-비교&#34;&gt;(3) App 화면 비교&lt;/h2&gt;
&lt;p&gt;기본적으로 제공되는 &lt;code&gt;ui.R&lt;/code&gt;와 &lt;code&gt;server.R&lt;/code&gt; 소스코드를 그대로 활용했다. 실제로는 각자 준비한 소스코드가 있어야 하기 때문에, 실제 다운로드 받은 &lt;code&gt;css&lt;/code&gt; 파일 적용할 때에는 조금 달라질 수 있음을 유의한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;먼저 기본 &lt;code&gt;Shiny App&lt;/code&gt; 화면이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/tutorial_08/shiny03.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;기본 소스코드는 아래와 같다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# This is the user-interface definition of a Shiny web application. You can&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# run the application by clicking &amp;#39;Run App&amp;#39; above.&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# Find out more about building applications with Shiny here:&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#    http://shiny.rstudio.com/&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;

&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(shiny)

&lt;span style=&#34;color:#75715e&#34;&gt;# Define UI for application that draws a histogram&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;shinyUI&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;fluidPage&lt;/span&gt;(


    &lt;span style=&#34;color:#75715e&#34;&gt;# Application title&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;titlePanel&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Old Faithful Geyser Data&amp;#34;&lt;/span&gt;),

    &lt;span style=&#34;color:#75715e&#34;&gt;# Sidebar with a slider input for number of bins&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;sidebarLayout&lt;/span&gt;(
        &lt;span style=&#34;color:#a6e22e&#34;&gt;sidebarPanel&lt;/span&gt;(
            &lt;span style=&#34;color:#a6e22e&#34;&gt;sliderInput&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bins&amp;#34;&lt;/span&gt;,
                        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Number of bins:&amp;#34;&lt;/span&gt;,
                        min &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,
                        max &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;,
                        value &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;)
        ),

        &lt;span style=&#34;color:#75715e&#34;&gt;# Show a plot of the generated distribution&lt;/span&gt;
        &lt;span style=&#34;color:#a6e22e&#34;&gt;mainPanel&lt;/span&gt;(
            &lt;span style=&#34;color:#a6e22e&#34;&gt;plotOutput&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;distPlot&amp;#34;&lt;/span&gt;)
        )
    )
))

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;이번에는, &lt;code&gt;CSS&lt;/code&gt; 파일을 적용한 &lt;code&gt;Shiny App&lt;/code&gt; 화면이다. 여기에서 주의 깊게 봐야하는 것은 어떻게 &lt;code&gt;Shiny&lt;/code&gt;에서 &lt;code&gt;CSS File&lt;/code&gt;이 적용되는지의 여부다. 우선, 화면부터 확인해보자.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/tutorial_08/shiny04.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;배경색이 바뀐것을 확인할 수 있다. 여기에서 &lt;code&gt;css&lt;/code&gt;경로가 들어간 &lt;code&gt;코드 한줄&lt;/code&gt; 만 입력하면 된다. (# css 테마 적용, 코드 참조)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# This is the user-interface definition of a Shiny web application. You can&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# run the application by clicking &amp;#39;Run App&amp;#39; above.&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# Find out more about building applications with Shiny here:&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#    http://shiny.rstudio.com/&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;

&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(shiny)

&lt;span style=&#34;color:#75715e&#34;&gt;# Define UI for application that draws a histogram&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;shinyUI&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;fluidPage&lt;/span&gt;(

    &lt;span style=&#34;color:#75715e&#34;&gt;# css 테마 적용&lt;/span&gt;
    tags&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;head&lt;/span&gt;(
        tags&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;link&lt;/span&gt;(rel &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;stylesheet&amp;#34;&lt;/span&gt;, type&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;text/css&amp;#34;&lt;/span&gt;, href &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bootstrap.min.css&amp;#34;&lt;/span&gt;)
    ),
    
    &lt;span style=&#34;color:#75715e&#34;&gt;# Application title&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;titlePanel&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Old Faithful Geyser Data&amp;#34;&lt;/span&gt;),

    &lt;span style=&#34;color:#75715e&#34;&gt;# Sidebar with a slider input for number of bins&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;sidebarLayout&lt;/span&gt;(
        &lt;span style=&#34;color:#a6e22e&#34;&gt;sidebarPanel&lt;/span&gt;(
            &lt;span style=&#34;color:#a6e22e&#34;&gt;sliderInput&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bins&amp;#34;&lt;/span&gt;,
                        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Number of bins:&amp;#34;&lt;/span&gt;,
                        min &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,
                        max &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;,
                        value &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;)
        ),

        &lt;span style=&#34;color:#75715e&#34;&gt;# Show a plot of the generated distribution&lt;/span&gt;
        &lt;span style=&#34;color:#a6e22e&#34;&gt;mainPanel&lt;/span&gt;(
            &lt;span style=&#34;color:#a6e22e&#34;&gt;plotOutput&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;distPlot&amp;#34;&lt;/span&gt;)
        )
    )
))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;기본 화면으로만 구성하니, 약간 멋이 없다. 이럴 때는 shiny gallery에서 응용해보자. 마찬가지로, 강사는 소스코드를 그대로 사용할 것이다.&lt;/p&gt;
&lt;h2 id=&#34;4-다른-앱의-적용-실습&#34;&gt;(4) 다른 앱의 적용 (실습)&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Shiny Gallery&lt;/code&gt;에서 &lt;a href=&#34;https://shiny.rstudio.com/gallery/retirement-simulation.html&#34;&gt;Retirement: simulating wealth with random returns, inflation and withdrawals&lt;/a&gt; &lt;code&gt;소스코드(ui.R / server.R)&lt;/code&gt;를 전체 &lt;code&gt;Copy&lt;/code&gt;를 한다.&lt;/p&gt;
&lt;p&gt;그 후에, 아래 코드를&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;css&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;테마&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;적용&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;tags&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;tags&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;link&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;rel&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;stylesheet&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;text/css&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;href&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;slate.css&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;),&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;ui.R&lt;/code&gt; 적당한 곳에 놓고 적용해본다. 그러면, &lt;code&gt;shiny Gallery&lt;/code&gt;에서 보던 것과 다른 색상이 나타날 것이다. (&lt;code&gt;slate.css&lt;/code&gt; 적용)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/tutorial_08/shiny05.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;5-css-shiny에-직접-적용-제목-수정&#34;&gt;(5) CSS Shiny에 직접 적용 (제목 수정)&lt;/h2&gt;
&lt;p&gt;막상 전체를 해놓고 보니, 배경은 바뀌었으나, 특히 제목(&lt;code&gt;Retirement: simulating wealth with random returns, inflation and withdrawals&lt;/code&gt;)글씨크기가 작아졌다. 또한 폰트도 바꾸고 싶은 충동이 느껴졌다. 이럴 때는, 전체 수정이 아닌 부분 수정의 개념으로 접근해서 입력해야 한다. (역시 Web Design은 힘들다!)&lt;/p&gt;
&lt;p&gt;우선 아래 두개의 소스코드를 기억해두자. 아래 소스코드를 기존의 &lt;code&gt;css&lt;/code&gt;파일과 적용하면 된다.&lt;/p&gt;
&lt;p&gt;다른 소스코드는 만지지 않는다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;원 소스코드 (&lt;code&gt;ui.R&lt;/code&gt;)는 아래와 같다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;fluidPage&lt;/span&gt;(theme&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;simplex.min.css&amp;#34;&lt;/span&gt;,
  tags&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;style&lt;/span&gt;(type&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;text/css&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;label {font-size: 12px;}&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.recalculating {opacity: 1.0;}&amp;#34;&lt;/span&gt;
  ),

  &lt;span style=&#34;color:#75715e&#34;&gt;# Application title&lt;/span&gt;
  tags&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;h2&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Retirement: simulating wealth with random returns, inflation and withdrawals&amp;#34;&lt;/span&gt;),
&lt;span style=&#34;color:#66d9ef&#34;&gt;...&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;바뀐 소스코드는 아래와 같다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# css 테마 적용&lt;/span&gt;
    tags&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;head&lt;/span&gt;(
        tags&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;link&lt;/span&gt;(rel &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;stylesheet&amp;#34;&lt;/span&gt;, type&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;text/css&amp;#34;&lt;/span&gt;, href &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;slate.css&amp;#34;&lt;/span&gt;), 
        tags&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;style&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;HTML&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      @import url(&amp;#39;//fonts.googleapis.com/css?family=Lobster|Cabin:400,700&amp;#39;);
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;#34;&lt;/span&gt;)),
        tags&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;style&lt;/span&gt;(type&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;text/css&amp;#34;&lt;/span&gt;,
                   &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;label {font-size: 12px;}&amp;#34;&lt;/span&gt;,
                   &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.recalculating {opacity: 1.0;}&amp;#34;&lt;/span&gt;, 
        )
    ),
    &lt;span style=&#34;color:#75715e&#34;&gt;# Application title&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;# h1 폰트 수정하는 코드 &lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;h1&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Retirement: simulating wealth with random returns, inflation and withdrawals&amp;#34;&lt;/span&gt;, 
       style &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;font-family: &amp;#39;Lobster&amp;#39;, cursive;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        font-weight: 1000; line-height: 1.1; 
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        color: 	#FFFFFF;&amp;#34;&lt;/span&gt;),
&lt;span style=&#34;color:#66d9ef&#34;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/tutorial_08/shiny06.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;바뀐 폰트와 제목이 커진 것을 확인할 수 있다. 이와 같이 미세하게 적용하려면 해당 &lt;code&gt;tag&lt;/code&gt;, 이를테면, &lt;code&gt;h1&lt;/code&gt;에 적용한 예의 경우처럼 직접적으로 적용해야 한다. 다시 느끼시겠지만, shiny를 시각적으로 잘 구현하려면, &lt;code&gt;HTML&lt;/code&gt;과 &lt;code&gt;CSS&lt;/code&gt;을 잘 알고 있어야 함을 이해했을 것이다.&lt;/p&gt;
&lt;h2 id=&#34;iv-결론&#34;&gt;IV. 결론&lt;/h2&gt;
&lt;p&gt;지금까지 &lt;code&gt;shiny&lt;/code&gt;에 &lt;code&gt;css&lt;/code&gt;코드를 입력하는 방법을 배웠다. 어려운 내용은 아니지만, 처음에는 어떻게 적용을 해야할지 모르는 경우가 많다. 그러한 분들에게 도움이 되기를 바라며.. 특히 잊지 말아야 하는 것은 &lt;code&gt;css&lt;/code&gt; 파일을 생성 후 shiny에 적용하려면 &lt;code&gt;www&lt;/code&gt; 폴더의 위치 즉 트리구조를 지키는 것을 만드는 것을 잊지 말아야 한다.&lt;/p&gt;
&lt;h2 id=&#34;v-더-알아보기&#34;&gt;V. 더 알아보기&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;JQuery&lt;/code&gt;와 &lt;code&gt;JavaScript&lt;/code&gt;를 연동하는 예제는 수강생들의 개별적인 과제로 남겨두겠다. 어려운 내용은 아니지만, 역시 어떻게 적용되는지는 실제로 해봐야 안다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/53944084/shiny-with-jquery-ui&#34;&gt;JQuery 예제&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.listendata.com/2018/12/javascript-shiny-r.html&#34;&gt;JavaScript 예제&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;특히 &lt;code&gt;shiny&lt;/code&gt;는 다양한 &lt;code&gt;JavaScript&lt;/code&gt;를 쉽게 응용할 수 있도록 &lt;code&gt;shinyjs&lt;/code&gt;라는 패키지를 직접 만들었는데, 다양한 예제들이 있으니, 한번 확인해보면 좋다. 간단한 &lt;code&gt;JavaScript&lt;/code&gt;는 &lt;a href=&#34;https://deanattali.com/shinyjs/&#34;&gt;shinyjs&lt;/a&gt;에서 활용하라는 뜻이기도 하다.&lt;/p&gt;
&lt;h2 id=&#34;vi-reference&#34;&gt;VI. Reference&lt;/h2&gt;
&lt;p&gt;김진성. (2018). 빅데이터 분석을 위한 R 프로그래밍. 서울: 가메출판사.&lt;/p&gt;
&lt;p&gt;Grolemund, Garrett. and Cheng, Joe., (2014). Style your apps with CSS Retrieved April 5, 2020, from &lt;a href=&#34;https://shiny.rstudio.com/articles/css.html&#34;&gt;https://shiny.rstudio.com/articles/css.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Congratulation! You Mastered Application of CSS in Shiny&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>shiny tutorial 07 - flexdashboard package</title>
      <link>https://chloevan.github.io/r/shiny/tutorial_07/</link>
      <pubDate>Thu, 02 Apr 2020 21:10:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/shiny/tutorial_07/</guid>
      <description>&lt;h2 id=&#34;공지&#34;&gt;공지&lt;/h2&gt;
&lt;p&gt;이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다&lt;/p&gt;
&lt;p&gt;이번에 준비한 Tutorial 코로나 세계현황을 &lt;code&gt;Shiny Dashboard&lt;/code&gt;로 만들어 가는 과정을 담았다.&lt;/p&gt;
&lt;h2 id=&#34;i-이전-글-소개&#34;&gt;I. 이전 글 소개&lt;/h2&gt;
&lt;p&gt;처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_01/&#34;&gt;shiny tutorial 01 - get started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_02/&#34;&gt;shiny tutorial 02 - Shiny Structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_03/&#34;&gt;shiny tutorial 03 - HTML content&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_04/&#34;&gt;shiny tutorial 04 - Shiny Layouts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_05/&#34;&gt;shiny tutorial 05 - Sharing Apps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_06/&#34;&gt;shiny tutorial 06 - shinydashboard&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ii-flexdashboard-패키지의-개요&#34;&gt;II. flexdashboard 패키지의 개요&lt;/h2&gt;
&lt;p&gt;기존의 &lt;code&gt;shinydashboard&lt;/code&gt;와의 가장 큰 차이점은 &lt;code&gt;flexdashboard&lt;/code&gt;의 패키지는 &lt;code&gt;R Markdown&lt;/code&gt;&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; 형식을 지원한다는 것이다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;공식문서에 따르면, flexdashabord는 R에서 제공하는 다양한 형태의 &lt;code&gt;htmlwidgets&lt;/code&gt;, &lt;code&gt;base&lt;/code&gt;, &lt;code&gt;lattice&lt;/code&gt;, &lt;code&gt;grid graphics&lt;/code&gt;, &lt;code&gt;tabular data&lt;/code&gt;, &lt;code&gt;gauges and value boxes&lt;/code&gt;, and &lt;code&gt;text annotations&lt;/code&gt; 등을 지원한다 (거의 대부분 기능을 제공한다는 뜻으로 읽힘).&lt;/li&gt;
&lt;li&gt;기존의 &lt;code&gt;shiny tutorial&lt;/code&gt;를 잘 따라해왔다면, 대부분 느끼겠지만, 대시보드의 &lt;code&gt;열&lt;/code&gt;과 &lt;code&gt;행&lt;/code&gt;을 맞추는 건 쉽지가 않다. PC환경의 대시보드 형태로 구현이 되기 때문에, 모바일로 화면 전환이 쉽지가 않은데, &lt;code&gt;flexdashboard&lt;/code&gt;는 이러한 기능도 제공한다.&lt;/li&gt;
&lt;li&gt;기본적으로 &lt;code&gt;flexdashboard&lt;/code&gt; 패키지는 &lt;code&gt;static&lt;/code&gt;한 대시보드인데, &lt;code&gt;dynamic&lt;/code&gt;하게 앱을 작성할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;iii-get-started&#34;&gt;III. Get Started&lt;/h2&gt;
&lt;p&gt;다른 R의 패키지처럼, &lt;code&gt;flexdashboard&lt;/code&gt; 패키지를 설치한다.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;install.packages(&amp;quot;flexdashboard&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;패키지를 설치하고 나면, [&lt;code&gt;File&lt;/code&gt;] - [&lt;code&gt;New File&lt;/code&gt;] - [&lt;code&gt;R Markdown&lt;/code&gt;] - [&lt;code&gt;From Template&lt;/code&gt;] 순서대로 클릭하면 아래와 같이 &lt;code&gt;Flex Dashboard&lt;/code&gt; 파일이 활성화 되는데, 이 파일을 클릭한다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/tutorial_07/shiny01.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;클릭과 함께 아래와 같은 형태의 코드가 준비된 것을 확인할 수 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;```yaml
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;title&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Single Column (Scrolling)&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;output&lt;/span&gt;: 
  &lt;span style=&#34;color:#66d9ef&#34;&gt;flexdashboard::flex_dashboard&lt;/span&gt;:
    &lt;span style=&#34;color:#66d9ef&#34;&gt;vertical_layout&lt;/span&gt;: scroll
&lt;span style=&#34;color:#e6db74&#34;&gt;```&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;여기에서 &lt;code&gt;shiny dashboard&lt;/code&gt; 형태로 구현하려면 간단하게 &lt;code&gt;runtime: shiny&lt;/code&gt;를 &lt;code&gt;YAML header&lt;/code&gt;에 추가하면 된다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;```yaml
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;title&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Single Column (Scrolling)&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;output&lt;/span&gt;: 
  &lt;span style=&#34;color:#66d9ef&#34;&gt;flexdashboard::flex_dashboard&lt;/span&gt;:
    &lt;span style=&#34;color:#66d9ef&#34;&gt;vertical_layout&lt;/span&gt;: scroll
&lt;span style=&#34;color:#66d9ef&#34;&gt;runtime&lt;/span&gt;: shiny
&lt;span style=&#34;color:#e6db74&#34;&gt;```&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;1-sample&#34;&gt;(1) Sample&lt;/h2&gt;
&lt;p&gt;아래 샘플 소스코드를 작성하여 실행한다. 아래 소스 코드 실행의 주요 목적은 &lt;code&gt;R Markdown&lt;/code&gt;과 &lt;code&gt;R Shiny&lt;/code&gt;가 어떻게 조금씩 다른지 확인하는 차원의 소스 코드이다. Sample 코드는 &lt;a href=&#34;https://beta.rstudioconnect.com/jjallaire/shiny-embedding/&#34;&gt;flexdashboard: Shiny Embedding&lt;/a&gt; 에서 가져와서 응용 했다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;---
title: &amp;#34;flexdashboard: Shiny Embedding&amp;#34;
output: 
  flexdashboard::flex_dashboard:
    vertical_layout: scroll
runtime: shiny
---

```{r global, include=FALSE}
# 데이터를 &amp;#39;global&amp;#39; chunk에 넣고, 대시보드의 모든 사용자가 데이터를 공유할 수 있도록 지원하는 소스 코드
library(datasets)
data(WorldPhones)
&lt;span style=&#34;color:#e6db74&#34;&gt;```
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;
Module
=======================================================================

### Embedding a Shiny Module

```{r, include=FALSE}
# Shiny module definition (would typically be defined in a separate R script)

# UI function
worldPhonesUI &amp;lt;- function(id) {
  ns &amp;lt;- NS(id)
  fillCol(height = 600, flex = c(NA, 1), 
    inputPanel(
      selectInput(ns(&amp;#34;region&amp;#34;), &amp;#34;Region:&amp;#34;, choices = colnames(WorldPhones))
    ),
    plotOutput(ns(&amp;#34;phonePlot&amp;#34;), height = &amp;#34;100%&amp;#34;)
  )
}

# Server function
worldPhones &amp;lt;- function(input, output, session) {
  output$phonePlot &amp;lt;- renderPlot({
    barplot(WorldPhones[,input$region]*1000, 
            ylab = &amp;#34;Number of Telephones&amp;#34;, xlab = &amp;#34;Year&amp;#34;)
  })
}
&lt;span style=&#34;color:#e6db74&#34;&gt;```&lt;/span&gt;

```{r}
# Include the module
worldPhonesUI(&amp;#34;phones&amp;#34;)
callModule(worldPhones, &amp;#34;phones&amp;#34;)
```
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;위 파일을 실행하면 아래와 같이 화면이 구성되면 완성이다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/tutorial_07/shiny02.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;기본적으로 &lt;code&gt;flexdashabord&lt;/code&gt;의 구조는&lt;code&gt;R Markdown&lt;/code&gt;의 목차 및 내용을 구성하는 방식과 비슷하다. 차이점이 있다면, R chunk &lt;code&gt;{r, include=FALSE} &lt;/code&gt;안에 &lt;code&gt;shiny code&lt;/code&gt;를 진행할 수 있다는 장점이 있다.&lt;/p&gt;
&lt;p&gt;본 소스코드에서는 &lt;code&gt;Modularizing&lt;/code&gt;이 적용되었는데, 튜토리얼의 마지막 즈음에 복잡한 &lt;code&gt;shiny app&lt;/code&gt;을 만들기 위한 가이드라인의 차원에서 다루도록 한다.&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;이제 각각의 Layouts 대해 간단하게 설명하도록 해보자.&lt;/p&gt;
&lt;h2 id=&#34;iv-layouts&#34;&gt;IV. Layouts&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Layouts&lt;/code&gt;의 구성요소는 크게 3가지로 구분된다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Orientation&lt;/code&gt;: 행과 열로 구분한다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Scrolling Layout&lt;/code&gt;: 만약에 차트가 많다면 한 화면에 다 넣을 수 없기 때문에 이때에는 스크롤 기능을 추가해주는 것이 좋다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Tabsets&lt;/code&gt;: 강사가 제일 좋아하는 기능이다. 이유는 간단한다. 다양한 그래프와 정보를 한 화면에서 볼 수 있도록 넣을 수 있고, &lt;code&gt;Tab&lt;/code&gt; 클릭만으로 정보 제공이 가능하기 때문이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;본 포스트에서는 &lt;code&gt;Tabsets&lt;/code&gt; 기준으로 작성하였는데, 이 글을 보는 사람들도 가급적 아래와 같은 형식으로 기본 &lt;code&gt;Format&lt;/code&gt;을 설정하는 것을 권유한다. 여기에서 주의해야 할 점은 어떤 시점에 &lt;code&gt;{.tabset}&lt;/code&gt;을 코드 작성 하느냐에 따라 디자인이 달라지기 때문에 수시로 확인해서 점검한다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There is no free lunch, Open Source is free but hardworking is required. - ChloEvan -&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;1-column&#34;&gt;(1) Column&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;---
title: &amp;#34;name_of_your_project&amp;#34;
output: 
  flexdashboard::flex_dashboard:
    orientation: columns
    vertical_layout: fill
---

```{r setup, include=FALSE}
library(flexdashboard)
library(shiny)
&lt;span style=&#34;color:#e6db74&#34;&gt;```
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;
---
title: &amp;#34;Tabset Column&amp;#34;
output: flexdashboard::flex_dashboard
---
    
Column 
-------------------------------------
    
### Chart 1
    
```{r}
h1(&amp;#39;Chart 1&amp;#39;)
&lt;span style=&#34;color:#e6db74&#34;&gt;```&lt;/span&gt;
   
Column {.tabset}
-------------------------------------
   
&lt;span style=&#34;color:#75715e&#34;&gt;### Chart 2
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
```{r}
h1(&amp;#39;Chart 2&amp;#39;)
```   
 
&lt;span style=&#34;color:#75715e&#34;&gt;### Chart 3
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    
```{r}
h1(&amp;#39;Chart 3&amp;#39;)
```

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/tutorial_07/shiny03.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;실행된 화면에서 &lt;code&gt;Chart 2&lt;/code&gt;와 &lt;code&gt;Chart 3&lt;/code&gt;를 교대로 클릭하며 내용을 확인해본다. 이번에는 Rows를 기준으로 작업하는데, 사실상 달라지는 건 기존의 소스코드와 없다.&lt;/p&gt;
&lt;h2 id=&#34;2-rows&#34;&gt;(2) Rows&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;---
title: &amp;#34;name_of_your_project&amp;#34;
output: 
  flexdashboard::flex_dashboard:
    orientation: rows
    vertical_layout: fill
---

```{r setup, include=FALSE}
library(flexdashboard)
library(shiny)
&lt;span style=&#34;color:#e6db74&#34;&gt;```
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;
---
title: &amp;#34;Tabset Rows&amp;#34;
output: flexdashboard::flex_dashboard:
    orientation: rows
---
    
Row 
-------------------------------------
    
### Chart 1
    
```{r}
h1(&amp;#39;Chart 1&amp;#39;)
&lt;span style=&#34;color:#e6db74&#34;&gt;```&lt;/span&gt;
   
Row {.tabset .tabset-fade}
-------------------------------------
   
&lt;span style=&#34;color:#75715e&#34;&gt;### Chart 2
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
```{r}
h1(&amp;#39;Chart 2&amp;#39;)
```   
 
&lt;span style=&#34;color:#75715e&#34;&gt;### Chart 3
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    
```{r}
h1(&amp;#39;Chart 3&amp;#39;)
```

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;{.tabset-fade}&lt;/code&gt; 속성값은 탭이 변환될 때마다 Fade in/out 효과를 적용하여 준다. 실제로 아래와 같이 나오는지 코드 작성을 통해 확인해본다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/tutorial_07/shiny04.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;v-components&#34;&gt;V. Components&lt;/h2&gt;
&lt;p&gt;개요 페이지에서 언급했던 것처럼 &lt;code&gt;flexdashboard&lt;/code&gt;는 다양한 &lt;code&gt;Componets&lt;/code&gt;를 제공한다. &lt;code&gt;shiny&lt;/code&gt;와 &lt;code&gt;R Markdown&lt;/code&gt; 내용과 중복되는 예를 들면, &lt;code&gt;R graphics&lt;/code&gt;, &lt;code&gt;Tabular Data&lt;/code&gt; 등은 생략한다. 즉, 기존에 알고 있는 코드 문법과 차이가 없다는 뜻이기도 하다. 본 포스트에서는 &lt;code&gt;HTML Widgets&lt;/code&gt;(사실, 이것도 shiny &amp;amp; shinydashboard에서도 사용은 가능하다!) &lt;code&gt;Navigation Bar&lt;/code&gt;만 언급하도록 한다.&lt;/p&gt;
&lt;h2 id=&#34;1-html-widgets&#34;&gt;(1) HTML Widgets&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;CRAN&lt;/code&gt;에 등록되어 있는 &lt;code&gt;30&lt;/code&gt;개 이상의 패키지는 &lt;code&gt;HTML Widgets&lt;/code&gt;을 제공한다. 즉, 이러한 &lt;code&gt;Widgets&lt;/code&gt;들은 모두 본 패키지에서 작성이 가능하다. 향후 코로나 프로젝트를 위해 지도 패키지인 &lt;code&gt;leaflets&lt;/code&gt;의 간단 예제로 간단하게 소스 코드를 구현해본다. 소스코드보다는 어떻게 대시보드화가 되는지 결과 위주로 보기를 바란다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;---
title: &amp;#34;name_of_your_project&amp;#34;
output: 
  flexdashboard::flex_dashboard:
    orientation: rows
    vertical_layout: fill
---

```{r setup, include=FALSE}
library(flexdashboard)
library(shiny)
&lt;span style=&#34;color:#e6db74&#34;&gt;```
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;
---
title: &amp;#34;Tabset Rows&amp;#34;
output: flexdashboard::flex_dashboard:
    orientation: rows
---
    
Row 
-------------------------------------
    
### Chart 1
    
```{r}
h1(&amp;#39;Chart 1&amp;#39;)
&lt;span style=&#34;color:#e6db74&#34;&gt;```&lt;/span&gt;
   
Row {.tabset .tabset-fade}
-------------------------------------
   
&lt;span style=&#34;color:#75715e&#34;&gt;### Chart 2
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
```{r}
h1(&amp;#39;Chart 2&amp;#39;)

library(leaflet)
leaflet() %&amp;gt;%
  addTiles() %&amp;gt;%
  addMarkers(lng=174.768, lat=-36.852, popup=&amp;#34;The birthplace of R&amp;#34;)
```   

&lt;span style=&#34;color:#75715e&#34;&gt;### Chart 3
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    
```{r}
h1(&amp;#39;Chart 3&amp;#39;)
```

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/tutorial_07/shiny05.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Chart 2&lt;/code&gt; 섹션에 지도화면이 정상적으로 출력된다면 완성이다. &lt;code&gt;Chart 1&lt;/code&gt;에는 어떤 내용을 추가할지, &lt;code&gt;Chart 3&lt;/code&gt;에는 어떤 내용을 추가할지 보여줘야 할지 고민해야 하며, Dynamic하게 모든 차트가 동시에 적용되게 하려면, 결국엔 &lt;code&gt;데이터셋&lt;/code&gt;이 모듈화처럼 움직여야 한다 (일단, Pass!!, 본 프로젝트에 들어가면 자세히 소개하기로 한다!)&lt;/p&gt;
&lt;h2 id=&#34;2-navigation-bar&#34;&gt;(2) Navigation Bar&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Navigation Bar&lt;/code&gt;는 다중페이지가 만들어질 때 보통 사용된다. 대시 보드에 다중 페이지가 있으면 &lt;code&gt;Navigation Bar&lt;/code&gt;의 왼쪽에 다중 페이지와 링크로 연결되게 되며, 이 때에는 소셜 링크와 대시 보드의 소스 코드를 볼 수 있다는 장점이 있다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;leaflet&lt;/code&gt;을 활용하여 만들었던 기존 소스코드에 &lt;code&gt;Navigation Bar&lt;/code&gt;, &lt;code&gt;social&lt;/code&gt;, &lt;code&gt;source code&lt;/code&gt; 기능을 추가 하도록 하겠다. 어디에 어떻게 구현이 되는지 확인해보자.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;---
title: &amp;#34;name_of_your_project&amp;#34;
output: 
  flexdashboard::flex_dashboard:
    orientation: rows
    vertical_layout: fill
    navbar:
      &lt;span style=&#34;color:#66d9ef&#34;&gt;-&lt;/span&gt; { title: &amp;#34;About&amp;#34;, href: &amp;#34;https://chloevan.github.io/about/&amp;#34; }
    social: [ &amp;#34;twitter&amp;#34;, &amp;#34;facebook&amp;#34;, &amp;#34;menu&amp;#34;, &amp;#34;linkedin&amp;#34; ]
    source_code: embed
---

```{r setup, include=FALSE}
library(flexdashboard)
library(shiny)
&lt;span style=&#34;color:#e6db74&#34;&gt;```
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;
---
title: &amp;#34;Tabset Rows&amp;#34;
output: flexdashboard::flex_dashboard:
    orientation: rows
---
    
Row 
-------------------------------------
    
### Chart 1
    
```{r}
h1(&amp;#39;Chart 1&amp;#39;)
&lt;span style=&#34;color:#e6db74&#34;&gt;```&lt;/span&gt;
   
Row {.tabset .tabset-fade}
-------------------------------------
   
&lt;span style=&#34;color:#75715e&#34;&gt;### Chart 2
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
```{r}
h1(&amp;#39;Chart 2&amp;#39;)

library(leaflet)
leaflet() %&amp;gt;%
  addTiles() %&amp;gt;%
  addMarkers(lng=174.768, lat=-36.852, popup=&amp;#34;The birthplace of R&amp;#34;)
```   

&lt;span style=&#34;color:#75715e&#34;&gt;### Chart 3
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    
```{r}
h1(&amp;#39;Chart 3&amp;#39;)
```
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/tutorial_07/shiny06.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;우측 상단에 보면, &lt;code&gt;About&lt;/code&gt; 버튼, 각각의 &lt;code&gt;Social Network&lt;/code&gt; 기능, 특히 &lt;code&gt;Facebook&lt;/code&gt;, &lt;code&gt;Twitter&lt;/code&gt;, &lt;code&gt;Linkedin&lt;/code&gt;과 같이 대시보드를 공유할 수 있는 기능들이 있는 것을 볼 수 있다. 이러한 기능들은 현재  &lt;code&gt;Corona-19&lt;/code&gt; 대시보드와 같이 빅데이터를 활용하여 시각화로 &lt;code&gt;Insight&lt;/code&gt;를 줄 때, 매우 유용한 기능이다.&lt;/p&gt;
&lt;p&gt;마지막으로 &lt;code&gt;source code&lt;/code&gt;는 현재 보고 있는 화면에 대한 전체 &lt;code&gt;source code&lt;/code&gt;를 보여주는 기능인데, 이 부분 역시 소스코드 공유를 통해 커뮤니티에 기여하고 싶을 때 넣어주면 좋다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/tutorial_07/shiny07.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;vii-shinydashboard-vs-flexdashboard의-활용에-관한-개인적인-단상&#34;&gt;VII. shinydashboard Vs. flexdashboard의 활용에 관한 개인적인 단상&lt;/h2&gt;
&lt;p&gt;각 패키지마다 장단점이 있지만, 굳이 두가지 중에서 한 패키지를 먼저 배워야 한다면 강사는 &lt;code&gt;flexdashboard&lt;/code&gt;로 우선 작업하는 것을 권유한다.&lt;/p&gt;
&lt;p&gt;먼저, &lt;code&gt;shinydashboard Vs. flexdashboard&lt;/code&gt;에 대한 &lt;a href=&#34;https://shiny.rstudio.com/articles/dashboards.html&#34;&gt;비교 글&lt;/a&gt;에 대한 원문을 읽어보는 것을 권한다. (사실 그렇게 큰 내용은 없다.)&lt;/p&gt;
&lt;p&gt;일단 간단하게 요약하면, &lt;code&gt;shinydashboard&lt;/code&gt;는 입문자들이 접근하기에는 조금 어려운 점이 있다. 물론, 추후에 &lt;code&gt;HTML &amp;amp; CSS&lt;/code&gt;와 같은 기능에 대한 필요성이 느껴진다면, &lt;code&gt;shinydashboard&lt;/code&gt;에 자바스크립트 등 복잡성 있게 구현이 가능하겠지만.. 추천하지는 않는다 (왜 꼭 R로 그렇게 해야하는가? 복잡성 있게 구현한다면 나는 차라리 유료 BI Tool을 쓰자고 할 것 같다!) 하는 의문점이 늘 있어왔다. 다년간 R 커뮤니티를 관찰한 결과 &lt;code&gt;R&lt;/code&gt;을 활용하는 사람들의 대부분(특히 국내 R 유저의 특성상)의 사실상 프로그래밍에 익숙하지 않은 사람들이 대부분인 것을 추정하기 때문에 &lt;code&gt;R Shiny&lt;/code&gt;를 하는 사람들에게 &lt;code&gt;R Markdown&lt;/code&gt; 보고서를 빠르게 웹으로 구현하는 일련의 과정이 훨씬 빠르고 간결하기 때문에 추천한다. (지극히 개인적인 생각)&lt;/p&gt;
&lt;h2 id=&#34;viii-다루지-못한-것들&#34;&gt;VIII. 다루지 못한 것들&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;shinydashboard&lt;/code&gt;와 &lt;code&gt;flexdashboard&lt;/code&gt;에 다양한 기능들을 접해봤지만, 아직 다루지 못한 그러나 중요한 기능이 하나 있다. &lt;code&gt;Mobile&lt;/code&gt;의 접근성이다. 이 부분은 향후 프로젝트를 진행하면서 한번 짚고 넘어가도록 하겠다.&lt;/p&gt;
&lt;p&gt;이제 기본적인 이론 중 마지막 한가지가 남아있다. &lt;code&gt;shiny&lt;/code&gt;에서 &lt;code&gt;HTML&lt;/code&gt;, &lt;code&gt;CSS&lt;/code&gt;, 그리고 &lt;code&gt;Javascript&lt;/code&gt; 연동이다.&lt;/p&gt;
&lt;p&gt;이제 미니 프로젝트의 시작점이 얼마 남지 않았다. 고지를 향해 조금만 더 달려가보자!&lt;/p&gt;
&lt;h2 id=&#34;ix-reference&#34;&gt;IX. Reference&lt;/h2&gt;
&lt;p&gt;flexdashboard, (2020). flexdashboard Retrieved April 2, 2020, from &lt;a href=&#34;https://rmarkdown.rstudio.com/flexdashboard/index.html&#34;&gt;https://rmarkdown.rstudio.com/flexdashboard/index.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Congratulation! You Mastered flexdashboard in Shiny&lt;/p&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;ChloEvan. (2020, March 18). R Markdown Introduction. Retrieved April 2, 2020, from &lt;a href=&#34;https://chloevan.github.io/r/rmarkdown/rmarkdownintro/&#34;&gt;https://chloevan.github.io/r/rmarkdown/rmarkdownintro/&lt;/a&gt; &lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;웹개발 개발경력이 되신 분들은 shiny 홈페이지에 게재된 &lt;a href=&#34;https://shiny.rstudio.com/articles/modules.html&#34;&gt;Modularizing Shiny app code&lt;/a&gt;을 자세히 읽어보기를 권한다. &lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
    </item>
    
    <item>
      <title>shiny tutorial 06 - shinydashboard package</title>
      <link>https://chloevan.github.io/r/shiny/tutorial_06/</link>
      <pubDate>Wed, 01 Apr 2020 17:10:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/shiny/tutorial_06/</guid>
      <description>&lt;h2 id=&#34;공지&#34;&gt;공지&lt;/h2&gt;
&lt;p&gt;이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다&lt;/p&gt;
&lt;p&gt;이번에 준비한 Tutorial 코로나 세계현황을 &lt;code&gt;Shiny Dashboard&lt;/code&gt;로 만들어 가는 과정을 담았다.&lt;/p&gt;
&lt;h2 id=&#34;i-이전-글-소개&#34;&gt;I. 이전 글 소개&lt;/h2&gt;
&lt;p&gt;처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_01/&#34;&gt;shiny tutorial 01 - get started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_02/&#34;&gt;shiny tutorial 02 - Shiny Structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_03/&#34;&gt;shiny tutorial 03 - HTML content&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_04/&#34;&gt;shiny tutorial 04 - Shiny Layouts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_05/&#34;&gt;shiny tutorial 05 - Sharing Apps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ii-shinydashboard-패키지의-개요&#34;&gt;II. shinydashboard 패키지의 개요&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;HTML content&lt;/code&gt;와 &lt;code&gt;Layouts&lt;/code&gt; 조작하는 것이 편해지면 대시보드를 만들 수 있다. 그런데, 문제는 대시보드 개발을 처음부터 하는 것과 어느정도 정해진 포맷을 활용하여 작성하는 것은 다르다. 반복해서 말하지만, 데이터분석가가 처음부터 개발해서 &lt;code&gt;사내 내부용 보고서&lt;/code&gt;를 꼭 작성해서 만들어야 하는가?하는가? 글쎄. 개인적으로 동의하기 어렵다. 핵심적인 내용의 지표만 산출 및 작성 요약하여 보고하는 것이 데이터 분석가의 기본적인 업무이자 핵심적인 업무이기 때문에, 다양한 대시보드를 빠르게 그러나 가독성있게 만드는 것이 중요하다. 어차피, 이러한 대시보드 역시, 시간이 지나면 결국엔 보는 사람만 본다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shinydashboard&lt;/code&gt; 패키지와 그리고 다음 장에서 설명할 &lt;code&gt;flexdashboard&lt;/code&gt; 패키지를 활용하여 대시보드를 빠르게 만들어봄으로써 shiny 개발 &amp;amp; 배포를 빠르게 반복적으로 진행하며 학습하는 것을 권한다.&lt;/p&gt;
&lt;h2 id=&#34;iii-get-started&#34;&gt;III. Get Started&lt;/h2&gt;
&lt;p&gt;다른 R의 패키지처럼, &lt;code&gt;shinydashboard&lt;/code&gt; 패키지를 설치한다. &lt;code&gt;shiny&lt;/code&gt; 패키지가 설치가 되어 있지 않거나 &lt;code&gt;shiny Version (&amp;gt;=0.11)&lt;/code&gt;이 낮은 경우, 설치 에러가 날 수 있으니 주의 한다.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;install.packages(&amp;quot;shinydashboard&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;1-shinydashboard-구조&#34;&gt;(1) shinydashboard 구조&lt;/h2&gt;
&lt;p&gt;Shiny의 기본구조는 &lt;code&gt;ui&lt;/code&gt;, &lt;code&gt;server&lt;/code&gt;, &lt;code&gt;shinyApp&lt;/code&gt;으로 구성되어 있음을 알고 있다. shinydashboard 패키지를 사용시, 이 때의 &lt;code&gt;ui&lt;/code&gt; 문법이 조금 달라진다. 어렵지는 않다. 그냥 제공하는 함수가 다를 뿐이다.&lt;/p&gt;
&lt;p&gt;일단 간단하게 소스와 결과를 확인해 보자! 아래 소스코드를 따라하면서 연습할 때는 &lt;code&gt;app.R&lt;/code&gt; 파일을 생성한 뒤 아래 코드를 작성하도록 한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(shiny)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(shinydashboard)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &#39;shinydashboard&#39;
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;## The following object is masked from &#39;package:graphics&#39;:
## 
##     box
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;ui &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dashboardPage&lt;/span&gt;(
  &lt;span style=&#34;color:#a6e22e&#34;&gt;dashboardHeader&lt;/span&gt;(),
  &lt;span style=&#34;color:#a6e22e&#34;&gt;dashboardSidebar&lt;/span&gt;(),
  &lt;span style=&#34;color:#a6e22e&#34;&gt;dashboardBody&lt;/span&gt;()
)

server &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;function&lt;/span&gt;(input, output) { }

&lt;span style=&#34;color:#a6e22e&#34;&gt;shinyApp&lt;/span&gt;(ui, server)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## 
## Listening on http://127.0.0.1:3474
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;dashboardPage()&lt;/code&gt; 안에 &lt;code&gt;Header()&lt;/code&gt;, &lt;code&gt;Sidebar()&lt;/code&gt;, &lt;code&gt;Body()&lt;/code&gt;가 만들어진다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/tutorial_06/shiny01.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;위 대시보드는 &lt;code&gt;default&lt;/code&gt;로 만들어진 것이고, 여기에서 이제 각각의 구성품을 채워넣는 작업을 할 것이다.&lt;/p&gt;
&lt;h2 id=&#34;iv-basic-dashboard&#34;&gt;IV. Basic Dashboard&lt;/h2&gt;
&lt;h2 id=&#34;1-dashboardheader&#34;&gt;(1) dashboardHeader()&lt;/h2&gt;
&lt;p&gt;먼저 제목부터 달아보자.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(shiny)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(shinydashboard)

ui &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dashboardPage&lt;/span&gt;(
  &lt;span style=&#34;color:#a6e22e&#34;&gt;dashboardHeader&lt;/span&gt;(title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;첫번째 대시보드&amp;#34;&lt;/span&gt;),
  &lt;span style=&#34;color:#a6e22e&#34;&gt;dashboardSidebar&lt;/span&gt;(),
  &lt;span style=&#34;color:#a6e22e&#34;&gt;dashboardBody&lt;/span&gt;()
)

server &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;function&lt;/span&gt;(input, output) { }

&lt;span style=&#34;color:#a6e22e&#34;&gt;shinyApp&lt;/span&gt;(ui, server)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## 
## Listening on http://127.0.0.1:4095
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/tutorial_06/shiny02.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;왼쪽 상단에 &lt;code&gt;첫번째 대시보드&lt;/code&gt; 글자가 보일 것이다. 만약, &lt;code&gt;dashboardHeader(disable = TRUE)&lt;/code&gt;를 하게 되면 불필요해 보이는 &lt;code&gt;header&lt;/code&gt; 공간은 사라지고 &lt;code&gt;Sidebar&lt;/code&gt;와 &lt;code&gt;Body&lt;/code&gt; 공간만 남게 된다.&lt;/p&gt;
&lt;h2 id=&#34;2-dashboardsidebar&#34;&gt;(2) dashboardSidebar()&lt;/h2&gt;
&lt;p&gt;Sidebar의 주 활용 용도는 메뉴 구성과 같은 개념으로 파악하면 좋다. 아래 소스코드를 활용해서 실습하기를 바란다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(shiny)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(shinydashboard)

ui &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dashboardPage&lt;/span&gt;(
  &lt;span style=&#34;color:#a6e22e&#34;&gt;dashboardHeader&lt;/span&gt;(title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;첫번째 대시보드&amp;#34;&lt;/span&gt;),
  &lt;span style=&#34;color:#a6e22e&#34;&gt;dashboardSidebar&lt;/span&gt;(
    &lt;span style=&#34;color:#75715e&#34;&gt;# 사이드바 메뉴 구성&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;sidebarMenu&lt;/span&gt;(
      &lt;span style=&#34;color:#a6e22e&#34;&gt;menuItem&lt;/span&gt;(text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;대시보드&amp;#34;&lt;/span&gt;, tabName &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dashboard&amp;#34;&lt;/span&gt;, icon &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;icon&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dashboard&amp;#34;&lt;/span&gt;)),
      &lt;span style=&#34;color:#a6e22e&#34;&gt;menuItem&lt;/span&gt;(text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;위젯&amp;#34;&lt;/span&gt;, tabName &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;widgets&amp;#34;&lt;/span&gt;, icon &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;icon&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;th&amp;#34;&lt;/span&gt;))
    )
  ),
  &lt;span style=&#34;color:#a6e22e&#34;&gt;dashboardBody&lt;/span&gt;()
)

server &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;function&lt;/span&gt;(input, output) { }

&lt;span style=&#34;color:#a6e22e&#34;&gt;shinyApp&lt;/span&gt;(ui, server)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## 
## Listening on http://127.0.0.1:7315
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/tutorial_06/shiny03.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;dashboardSidebar()&lt;/code&gt; 안에 &lt;code&gt;sidebarMenu()&lt;/code&gt; 메뉴 구성을 만든다. 그 이후에 &lt;code&gt;menuItem()&lt;/code&gt;을 입력하는데, 다양한 &lt;code&gt;Arguments&lt;/code&gt;들이 있는 것을 확인할 수 있다. 각 &lt;code&gt;Arguments&lt;/code&gt; 사용 설명서는 &lt;code&gt;?menuItem&lt;/code&gt;를 실행한 후, 확인하는 것을 추천한다. 각각의 &lt;code&gt;Arguments&lt;/code&gt;들은 일종의 대시보드 화면을 좀 더 &lt;code&gt;Interactive&lt;/code&gt;하게 만들어주는 옵션이기 때문에, 다양한 방법으로 시도하는 것을 권유한다.&lt;/p&gt;
&lt;h2 id=&#34;3-dashboardbody&#34;&gt;(3) dashboardBody()&lt;/h2&gt;
&lt;p&gt;기존 shiny에서 작업했던 &lt;code&gt;inputId&lt;/code&gt;, &lt;code&gt;outputId&lt;/code&gt; 값이 일치한 것을 기억했으면 좋겠다. 마찬가지로 &lt;code&gt;menuItem() tabName&lt;/code&gt;값은 &lt;code&gt;Body() tabName&lt;/code&gt;값과 일치해야 한다.&lt;/p&gt;
&lt;p&gt;이유는 간단하다. &lt;code&gt;menuItem&lt;/code&gt;의 각 메뉴들을 클릭할 때마다, 다른 화면이 나타나게끔 하려고 하는 것이 &lt;code&gt;menuItem&lt;/code&gt;을 사용하는 목적이기 때문이다. 일종의 &lt;code&gt;Key&lt;/code&gt;값이라고 하면 적정한 표현일까?&lt;/p&gt;
&lt;p&gt;아래 소스를 통해서 한번 더 확인해본다. &lt;code&gt;Body&lt;/code&gt; 안에 들어가는 소스코드도 중요하지만, 여기에서는 &lt;code&gt;tabName&lt;/code&gt;을 유심히 관찰할 필요가 있다. 처음에 발생하는 에러의 대부분은 &lt;code&gt;ID&lt;/code&gt;가 일치하지 않아 발생하는 경우가 대부분이다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(shiny)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(shinydashboard)

ui &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dashboardPage&lt;/span&gt;(
  &lt;span style=&#34;color:#a6e22e&#34;&gt;dashboardHeader&lt;/span&gt;(title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;첫번째 대시보드&amp;#34;&lt;/span&gt;),
  &lt;span style=&#34;color:#a6e22e&#34;&gt;dashboardSidebar&lt;/span&gt;(
    &lt;span style=&#34;color:#75715e&#34;&gt;# 사이드바 메뉴 구성&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;sidebarMenu&lt;/span&gt;(
      &lt;span style=&#34;color:#a6e22e&#34;&gt;menuItem&lt;/span&gt;(text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;대시보드&amp;#34;&lt;/span&gt;, tabName &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dashboard&amp;#34;&lt;/span&gt;, icon &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;icon&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dashboard&amp;#34;&lt;/span&gt;)),
      &lt;span style=&#34;color:#a6e22e&#34;&gt;menuItem&lt;/span&gt;(text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;위젯&amp;#34;&lt;/span&gt;, tabName &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;widgets&amp;#34;&lt;/span&gt;, icon &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;icon&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;th&amp;#34;&lt;/span&gt;))
    ) &lt;span style=&#34;color:#75715e&#34;&gt;# sidebarMenu&lt;/span&gt;
  ), &lt;span style=&#34;color:#75715e&#34;&gt;# dashboardSidebar&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;dashboardBody&lt;/span&gt;(
    &lt;span style=&#34;color:#a6e22e&#34;&gt;tabItems&lt;/span&gt;(
      &lt;span style=&#34;color:#75715e&#34;&gt;# First tab content&lt;/span&gt;
      &lt;span style=&#34;color:#a6e22e&#34;&gt;tabItem&lt;/span&gt;(tabName &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dashboard&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#a6e22e&#34;&gt;h2&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;대시보드 탭 내용&amp;#34;&lt;/span&gt;), 
        &lt;span style=&#34;color:#a6e22e&#34;&gt;fluidRow&lt;/span&gt;(
          &lt;span style=&#34;color:#a6e22e&#34;&gt;box&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;plotOutput&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;plot1&amp;#34;&lt;/span&gt;, height &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;250&lt;/span&gt;)),

          &lt;span style=&#34;color:#a6e22e&#34;&gt;box&lt;/span&gt;(
            title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Controls&amp;#34;&lt;/span&gt;,
            &lt;span style=&#34;color:#a6e22e&#34;&gt;sliderInput&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;slider&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Number of observations:&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;)
          ) &lt;span style=&#34;color:#75715e&#34;&gt;# box&lt;/span&gt;
        ) &lt;span style=&#34;color:#75715e&#34;&gt;# fluidRow&lt;/span&gt;
      ), &lt;span style=&#34;color:#75715e&#34;&gt;# tabItem(tabName = &amp;#34;dashboard&amp;#34;)&lt;/span&gt;

      &lt;span style=&#34;color:#75715e&#34;&gt;# Second tab content&lt;/span&gt;
      &lt;span style=&#34;color:#a6e22e&#34;&gt;tabItem&lt;/span&gt;(tabName &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;widgets&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#a6e22e&#34;&gt;h2&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;위젯 탭 내용&amp;#34;&lt;/span&gt;)
      ) &lt;span style=&#34;color:#75715e&#34;&gt;# tabItem&lt;/span&gt;
    ) &lt;span style=&#34;color:#75715e&#34;&gt;# tabItems&lt;/span&gt;
  ) &lt;span style=&#34;color:#75715e&#34;&gt;# dashboardBody&lt;/span&gt;
)

server &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;function&lt;/span&gt;(input, output) { 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;set.seed&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;122&lt;/span&gt;)
  histdata &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rnorm&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;500&lt;/span&gt;)

  output&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;plot1 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;renderPlot&lt;/span&gt;({
    data &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; histdata&lt;span style=&#34;color:#a6e22e&#34;&gt;[seq_len&lt;/span&gt;(input&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;slider)]
    &lt;span style=&#34;color:#a6e22e&#34;&gt;hist&lt;/span&gt;(data)
  })
}

&lt;span style=&#34;color:#a6e22e&#34;&gt;shinyApp&lt;/span&gt;(ui, server)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## 
## Listening on http://127.0.0.1:8129
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;dashboardBody()&lt;/code&gt; &amp;ndash; &lt;code&gt;tabItems&lt;/code&gt; &amp;ndash; &lt;code&gt;tabItem&lt;/code&gt; 순서대로 코드를 작성하는데, 가장 많이 실수하는 곳은 예상할 수 있겠지만 &lt;code&gt;tabItems&lt;/code&gt;와 &lt;code&gt;tabItem&lt;/code&gt; 오기하는 것이 많기 때문에 주의 하기 바란다.&lt;/p&gt;
&lt;p&gt;아래 그림은 &lt;code&gt;대시보드 탭&lt;/code&gt;을 클릭했을 때 나타나는 화면이다.
&lt;img src=&#34;https://chloevan.github.io/img/shiny/tutorial_06/shiny04.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;아래 그림은 &lt;code&gt;위젯 탭&lt;/code&gt;을 클릭했을 때 나타나는 화면이다.
&lt;img src=&#34;https://chloevan.github.io/img/shiny/tutorial_06/shiny05.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;v-더-알아보기&#34;&gt;V. 더 알아보기&lt;/h2&gt;
&lt;p&gt;지금까지 작성한 내용은 매우 기초적인 부분에서만 접근을 한 것이기 때문에, 더 많은 기능은 직접 해봐야 알 수 있다. shinydashboard 패키지에 대한 구체적인 내용들은  &lt;a href=&#34;https://rstudio.github.io/shinydashboard/structure.html&#34;&gt;Structure&lt;/a&gt;, &lt;a href=&#34;https://rstudio.github.io/shinydashboard/appearance.html&#34;&gt;Apperance&lt;/a&gt; 등을 참조하기를 바란다.&lt;/p&gt;
&lt;h2 id=&#34;vi-sample&#34;&gt;VI. Sample&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;shinydashboard&lt;/code&gt;를 활용한 예제코드를 보면서 &lt;code&gt;필사&lt;/code&gt; 하는 것을 추천한다. 그리고 전반적인 과정을 이해하면, 그 후에 약간의 코드 수정으로 응용하여 배포하는 것을 권유한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gallery.shinyapps.io/086-bus-dashboard/&#34;&gt;Twin Cities Buses&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gallery.shinyapps.io/087-crandash/&#34;&gt;crandash&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;vi-reference&#34;&gt;VI. Reference&lt;/h2&gt;
&lt;p&gt;shinydashboard., (2020). shinydashboard. Retrieved April 1, 2020, from &lt;a href=&#34;https://rstudio.github.io/shinydashboard/index.html/&#34;&gt;https://rstudio.github.io/shinydashboard/index.html/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Congratulation! You Mastered shinydashboard in Shiny&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>shiny tutorial 05 - Sharing Apps</title>
      <link>https://chloevan.github.io/r/shiny/tutorial_05/</link>
      <pubDate>Tue, 31 Mar 2020 01:10:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/shiny/tutorial_05/</guid>
      <description>&lt;h2 id=&#34;공지&#34;&gt;공지&lt;/h2&gt;
&lt;p&gt;이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다&lt;/p&gt;
&lt;p&gt;이번에 준비한 Tutorial 코로나 세계현황을 &lt;code&gt;Shiny Dashboard&lt;/code&gt;로 만들어 가는 과정을 담았다.&lt;/p&gt;
&lt;h2 id=&#34;i-이전-글-소개&#34;&gt;I. 이전 글 소개&lt;/h2&gt;
&lt;p&gt;처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_01/&#34;&gt;shiny tutorial 01 - get started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_02/&#34;&gt;shiny tutorial 02 - Shiny Structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_03/&#34;&gt;shiny tutorial 03 - HTML content&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_04/&#34;&gt;shiny tutorial 04 - Shiny Layouts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ii-shiny-deployment의-개요&#34;&gt;II. Shiny Deployment의 개요&lt;/h2&gt;
&lt;p&gt;이 영역은 웹개발자에게는 매우 쉬운 영역일 수도 있다. 그러나, 웹 환경에 익숙하지 않은 R 유저에게는 조금 버거울 수도 있다. 2-3번 정도만 반복하면 쉽게 작업하게 될 것이고, Shiny를 클라우드 서버를 통해 배포하는 방법도 익힐 수 있다.&lt;/p&gt;
&lt;p&gt;운이 좋게도, RStudio 에서는 무료로 매우 쉽게 배포를 할 수 있도록 하고 있다. 또한 On-Premise(사내 전용) 환경에서 배포할 수 있도록 오픈 소스도 제공하고 있다. 서버는 사실 경제적 비용이 발생하기 때문에, 클라우드로 배포할지, 도커(Docker) 및 오픈소스로 구현하여 배포할지, 고민할 필요는 있다. 배포에 관한 자세한 내용은 &lt;a href=&#34;https://shiny.rstudio.com/deploy/&#34;&gt;Hosting and Deployment&lt;/a&gt;에서 확인하기를 바란다.&lt;/p&gt;
&lt;h2 id=&#34;iii-shinyappsio&#34;&gt;III. Shinyapps.io&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_01/&#34;&gt;shiny tutorial 01 - get started&lt;/a&gt;에서 소개한 Sample Dashboard는 모두 &lt;code&gt;Shinyapps.io&lt;/code&gt;에서 배포를 하는 중이다. 배포 하는 과정은 어렵지 않으니 간단히 그 과정만 소개한다.&lt;/p&gt;
&lt;h2 id=&#34;1-회원가입&#34;&gt;(1) 회원가입&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.shinyapps.io/admin/#/login&#34;&gt;shinyapps.io&lt;/a&gt;에서 회원가입을 진행한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;위 싸이트에서 회원가입을 진행하고 RStudio로 돌아온다.&lt;/p&gt;
&lt;h2 id=&#34;2-shiny-app-실행&#34;&gt;(2) Shiny App 실행&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;간단한 소스코드로 ShinyApp을 실행한다.&lt;/li&gt;
&lt;li&gt;소스코드는 Shiny User Case에 있는 &lt;a href=&#34;https://shiny.rstudio.com/gallery/kmeans-example.html&#34;&gt;Iris K-Means Clustering&lt;/a&gt;에서 가져왔다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;app.R&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(shiny)
iris &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; iris
vars &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setdiff&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;names&lt;/span&gt;(iris), &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Species&amp;#34;&lt;/span&gt;)

ui &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;pageWithSidebar&lt;/span&gt;(
  &lt;span style=&#34;color:#a6e22e&#34;&gt;headerPanel&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Iris k-means clustering&amp;#39;&lt;/span&gt;),
  &lt;span style=&#34;color:#a6e22e&#34;&gt;sidebarPanel&lt;/span&gt;(
    &lt;span style=&#34;color:#a6e22e&#34;&gt;selectInput&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;xcol&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;X Variable&amp;#39;&lt;/span&gt;, vars),
    &lt;span style=&#34;color:#a6e22e&#34;&gt;selectInput&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ycol&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Y Variable&amp;#39;&lt;/span&gt;, vars, selected &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; vars[[2]]),
    &lt;span style=&#34;color:#a6e22e&#34;&gt;numericInput&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;clusters&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Cluster count&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, min &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, max &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;)
    ),
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mainPanel&lt;/span&gt;(
    &lt;span style=&#34;color:#a6e22e&#34;&gt;plotOutput&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;plot1&amp;#39;&lt;/span&gt;)
  )
)

server &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;function&lt;/span&gt;(input, output, session) {

  &lt;span style=&#34;color:#75715e&#34;&gt;# Combine the selected variables into a new data frame&lt;/span&gt;
  selectedData &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;reactive&lt;/span&gt;({
    iris[, &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(input&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;xcol, input&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;ycol)]
  })

  clusters &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;reactive&lt;/span&gt;({
    &lt;span style=&#34;color:#a6e22e&#34;&gt;kmeans&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;selectedData&lt;/span&gt;(), input&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;clusters)
  })

  output&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;plot1 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;renderPlot&lt;/span&gt;({
    &lt;span style=&#34;color:#a6e22e&#34;&gt;palette&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#E41A1C&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#377EB8&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#4DAF4A&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#984EA3&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#FF7F00&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#FFFF33&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#A65628&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#F781BF&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#999999&amp;#34;&lt;/span&gt;))

    &lt;span style=&#34;color:#a6e22e&#34;&gt;par&lt;/span&gt;(mar &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;5.1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4.1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;))
    &lt;span style=&#34;color:#a6e22e&#34;&gt;plot&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;selectedData&lt;/span&gt;(),
         col &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;clusters&lt;/span&gt;()&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;cluster,
         pch &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;, cex &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)
    &lt;span style=&#34;color:#a6e22e&#34;&gt;points&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;clusters&lt;/span&gt;()&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;centers, pch &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, cex &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, lwd &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;)
  })

}

&lt;span style=&#34;color:#75715e&#34;&gt;# Run the application &lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;shinyApp&lt;/span&gt;(ui &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ui, server &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; server)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## 
## Listening on http://127.0.0.1:8977
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Shiny App&lt;/code&gt;을 실행하고 난 후에 우측 상단의 &lt;code&gt;Publish&lt;/code&gt; 버튼을 클릭한다.&lt;/li&gt;
&lt;li&gt;아래 그림 참조&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/tutorial_05/shiny01.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;3-shinyappsio-연동&#34;&gt;(3) ShinyApps.io 연동&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Publish&lt;/code&gt; 버튼을 클릭하면 아래와 같은 팝업창이 활성화 될 것이다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/tutorial_05/shiny02.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;다음 메뉴에서 &lt;code&gt;ShinyApps.io&lt;/code&gt; 또는 &lt;code&gt;RStudio Connect&lt;/code&gt;를 선택하라는 팝업이 활성화 될 것이다. 여기에서 &lt;code&gt;ShinyApps.io&lt;/code&gt;를 선택한다. &lt;a href=&#34;https://rstudio.com/products/connect/&#34;&gt;RStudio Connect&lt;/a&gt;는 일종의 유료 버전이기 때문에 여기에서는 다루지 않는다. 자세히 알아보고 싶다면 &lt;a href=&#34;https://rstudio.com/products/connect/&#34;&gt;RStudio Connect&lt;/a&gt;에서 확인하기를 바란다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/tutorial_05/shiny03.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;마지막 하단의 이미지에서 드디어 &lt;code&gt;Token&lt;/code&gt;값을 받아야 하는데, 이 &lt;code&gt;Token&lt;/code&gt;값은 &lt;code&gt;ShinyApps.io&lt;/code&gt; 싸이트에서 확인해야 한다. 아래 팝업창을 유지한채로 웹사이트로 이동한다. 이동할 웹사이트는 친절하게 &lt;code&gt;Go to&lt;/code&gt; &lt;a href=&#34;http://www.shinyapps.io/&#34;&gt;&lt;code&gt;your account on Shiny Apps&lt;/code&gt;&lt;/a&gt;로 클릭할 수 연동되어 있으니 클릭해주면 된다. 클릭 후 우측 상단의 Dashboard 메뉴를 클릭한다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/tutorial_05/shiny04.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;이제 &lt;code&gt;Tokens&lt;/code&gt;을 찾아야 하는데, &lt;code&gt;Tokens&lt;/code&gt;는 왼쪽 메뉴에 &lt;code&gt;[Account]&lt;/code&gt;-&lt;code&gt;[Tokens]&lt;/code&gt;-&lt;code&gt;[Add Token]&lt;/code&gt;를 순서대로 클릭한다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/tutorial_05/shiny05.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;그러면 Token &amp;amp; Secret에 값이 생성 될 것인데, 이 때 [&lt;code&gt;show&lt;/code&gt;] 버튼을 클릭하면 다음과 같은 이미지에서 [&lt;code&gt;Show Secret&lt;/code&gt;] 버튼을 클릭한 후 전체 소스코드를 복사한다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/tutorial_05/shiny06.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;복사한 소스코드는 &lt;code&gt;Connect ShinyApps.io Account&lt;/code&gt;에 붙여넣기 한후 &lt;code&gt;Connect Account&lt;/code&gt;를 실행한뒤 &lt;code&gt;Publish to Server&lt;/code&gt; 팝업창에서 &lt;code&gt;Publish&lt;/code&gt; 버튼을 클릭하면 연동이 완료된다. 이 때 &lt;code&gt;Shiny Project Title&lt;/code&gt;은 URL에 적용되므로 참고하기를 바란다. 강사는 &lt;code&gt;shinyProject_Test&lt;/code&gt; 이름으로 &lt;code&gt;Title&lt;/code&gt;을 적용했다.&lt;/p&gt;
&lt;p&gt;Publishing을 진행하면 Deploy창이 활성화되면서 아래와 같은 메시지가 출력이 되기 시작할 것이다. App이 무거우면 배포하는데도 시간이 소요되므로 이 부분은 참고하기를 바란다.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Preparing to deploy application...DONE
Uploading bundle for application: 2027237...DONE
Deploying bundle: 2948176 for application: 2027237 ...
Waiting for task: 709961221
  building: Building image: 3271985
  building: Installing packages
  building: Installing files
  building: Pushing image: 3271985
  deploying: Starting instances
  success: Stopping old instances
Application successfully deployed to https://chloevan.shinyapps.io/shinyProject_Test/
Deployment completed: https://chloevan.shinyapps.io/shinyProject_Test/
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;참고로 이왕 배포하는 시간에 대해 굳이 비교하자면, 확실히 &lt;code&gt;RStudio&lt;/code&gt;에서 배포하는 속도는 강사가 블로그를 작성하는 &lt;code&gt;go&lt;/code&gt;언어 기반으로 작성된 &lt;code&gt;hugo + github.io&lt;/code&gt;보다 속도는 체감적으로 많이 느린감이 있다.&lt;/p&gt;
&lt;h2 id=&#34;iv-배포-확인&#34;&gt;IV. 배포 확인&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;방금 전에 구현한 &lt;code&gt;App&lt;/code&gt;이 다음 URL에서 확인 할 수 있을 것이다.   &lt;a href=&#34;https://chloevan.shinyapps.io/shinyProject_Test/&#34;&gt;https://chloevan.shinyapps.io/shinyProject_Test/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;v-결론&#34;&gt;V. 결론&lt;/h2&gt;
&lt;p&gt;RStudio를 활용하면 무료로 배포를 하는데, 간단한 클릭만으로도 배포를 할 수 있음을 확인할 수 있다.&lt;/p&gt;
&lt;p&gt;어떤 수강생들이 이런 질문을 한적이 있다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Linux에서 배포를 하고 싶어요, 클라우드에서 배포를 하고 싶어요, 도커에서 배포를 하고 싶어요,&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;결론부터 말하면 모두 가능하다. Shiny를 개발단에서 확인하고 싶다면, 정식문서를 참고하기를 바란다. &lt;a href=&#34;https://docs.rstudio.com/shiny-server/&#34;&gt;공식문서: Shiny Server Professional v1.5.13 Administrator&amp;rsquo;s Guide&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;도커에서 배포 예제: &lt;a href=&#34;https://www.bjoern-bos.de/post/learn-how-to-dockerize-a-shinyapp-in-7-steps/&#34;&gt;Learn How to Dockerize a ShinyApp in 7 Steps&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;AWS 배포 예제: &lt;a href=&#34;https://abndistro.com/post/2019/07/06/deploying-a-shiny-app-with-shiny-server-on-an-aws-ec2-instance/&#34;&gt;Deploying a Shiny App with Shiny Server on an AWS EC2 Instance&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;참고로, 강사는 GCP를 사랑한 나머지, GCP에 배포를 한적이 있다. 관련해서 배포 예제 글도 작성한 글이 있었는데, Tutorial 마지막에 정리해서 공유를 할 수 있을까? 하도록 노력하겠다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;vi-reference&#34;&gt;VI. Reference&lt;/h2&gt;
&lt;p&gt;shinyapps.io team., (2020, March 5). shinyapps.io user guide. Retrieved March 31, 2020, from &lt;a href=&#34;https://docs.rstudio.com/shinyapps.io/&#34;&gt;https://docs.rstudio.com/shinyapps.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Congratulation! You Mastered Deployment in Shiny&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>shiny tutorial 04 - Layouts</title>
      <link>https://chloevan.github.io/r/shiny/tutorial_04/</link>
      <pubDate>Sun, 29 Mar 2020 23:50:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/shiny/tutorial_04/</guid>
      <description>&lt;h2 id=&#34;공지&#34;&gt;공지&lt;/h2&gt;
&lt;p&gt;이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다&lt;/p&gt;
&lt;p&gt;이번에 준비한 Tutorial 코로나 세계현황을 &lt;code&gt;Shiny Dashboard&lt;/code&gt;로 만들어 가는 과정을 담았다.&lt;/p&gt;
&lt;h2 id=&#34;i-이전-글-소개&#34;&gt;I. 이전 글 소개&lt;/h2&gt;
&lt;p&gt;처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_01/&#34;&gt;shiny tutorial 01 - get started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_02/&#34;&gt;shiny tutorial 02 - Shiny Structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_03/&#34;&gt;shiny tutorial 03 - HTML content&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ii-layouts의-개요&#34;&gt;II. Layouts의 개요&lt;/h2&gt;
&lt;p&gt;이번 시간에는 &lt;code&gt;Shiny Layouts&lt;/code&gt; 개요에 대한 간략적인 소개를 하려고 한다. 영어가 편하거나 중고급 개발자 분들은 &lt;a href=&#34;https://shiny.rstudio.com/articles/layout-guide.html&#34;&gt;Application layout guide&lt;/a&gt;를 참고하기를 바란다.&lt;/p&gt;
&lt;p&gt;사실, 이 부분은 자세하게 다루기에는 부담이 존재한다. &lt;code&gt;Layouts&lt;/code&gt;에 대한 디자인은 굉장히 주관적일 뿐더러, 처음부터 만들어가려면 그만큼 시간도 오래 걸리기 때문이다. 우리가 잊지말아야 하는 것 중의 하나는 &lt;code&gt;Data Scientist&lt;/code&gt;는 &lt;code&gt;Web Developer&lt;/code&gt;는 아니다. 기존의 &lt;code&gt;Web Developer&lt;/code&gt;보다 대시보드를 시각적으로 더 잘 만들수는 없다. 그러나, 어떤 수집딘 데이터에서 어떤 &lt;code&gt;Insight&lt;/code&gt;를 클라이언트에게 전달하지는 &lt;code&gt;Web Developer&lt;/code&gt;보다는 더 나은 포지션에 있다.&lt;/p&gt;
&lt;p&gt;따라서, &lt;code&gt;Layout&lt;/code&gt;의 큰 개념만 잡는다면 다음부터는 &lt;code&gt;R&lt;/code&gt;에서 제공하는 주요 &lt;code&gt;Dashboard&lt;/code&gt; 패키지를 사용하는 것을 적극 권장한다.&lt;/p&gt;
&lt;h2 id=&#34;iii-main-functions&#34;&gt;III. Main Functions&lt;/h2&gt;
&lt;h2 id=&#34;예시-1-sidebar-layout&#34;&gt;예시 1. Sidebar Layout&lt;/h2&gt;
&lt;p&gt;이러한 &lt;code&gt;Layout&lt;/code&gt;은 보통 화면 왼쪽에는 (단, Mobile 화면 위쪽) &lt;code&gt;input&lt;/code&gt;에 관한 기능이 나온다면, 화면 오른쪽에는 &lt;code&gt;input&lt;/code&gt;에 따라 결과값이 나타나는 &lt;code&gt;output&lt;/code&gt;의 그래프, 표 등이 출력된다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 패키지&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(shiny)

&lt;span style=&#34;color:#75715e&#34;&gt;# ui 정의&lt;/span&gt;
ui &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fluidPage&lt;/span&gt;(
  &lt;span style=&#34;color:#a6e22e&#34;&gt;titlePanel&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Sidebar Layout 예시&amp;#34;&lt;/span&gt;), &lt;span style=&#34;color:#75715e&#34;&gt;# 제목 Panel&lt;/span&gt;

  &lt;span style=&#34;color:#a6e22e&#34;&gt;sidebarLayout&lt;/span&gt;(
    &lt;span style=&#34;color:#a6e22e&#34;&gt;sidebarPanel&lt;/span&gt;(
      &lt;span style=&#34;color:#a6e22e&#34;&gt;numericInput&lt;/span&gt;(
        inputId &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;n&amp;#34;&lt;/span&gt;, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;샘플사이즈&amp;#34;&lt;/span&gt;,
        value &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;
      )
    ),

    &lt;span style=&#34;color:#a6e22e&#34;&gt;mainPanel&lt;/span&gt;(
      &lt;span style=&#34;color:#a6e22e&#34;&gt;plotOutput&lt;/span&gt;(outputId &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hist&amp;#34;&lt;/span&gt;)
    )
  )
)

&lt;span style=&#34;color:#75715e&#34;&gt;# server 정의&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# output will be displayed&lt;/span&gt;
server &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;function&lt;/span&gt;(input, output) {
  output&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;hist &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;renderPlot&lt;/span&gt;({
    &lt;span style=&#34;color:#a6e22e&#34;&gt;hist&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;rnorm&lt;/span&gt;(input&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;n))
  })
}

&lt;span style=&#34;color:#75715e&#34;&gt;# shinyApp 실행&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;shinyApp&lt;/span&gt;(ui &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ui, server &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; server)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## 
## Listening on http://127.0.0.1:6286
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/tutorial_04/shiny01.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;예시-2-grid-layout&#34;&gt;예시 2. Grid Layout&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;sidebarLayout()&lt;/code&gt;은 가장 낮은 수준의 grid layout을 제공하고 있는데, 본 예시에서는 조금 더 구체적으로 &lt;code&gt;Grid Layout&lt;/code&gt;을 지정하도록 한다. 여기서 알아두어야 할 핵심 함수는 아래와 같다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;fluidRow()&lt;/code&gt;: 행과 관련이 있다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;column()&lt;/code&gt;: 열과 관련이 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Column의 너비는 은 &lt;a href=&#34;https://getbootstrap.com/docs/4.0/layout/grid/&#34;&gt;Bootstrp 12-wide grid system&lt;/a&gt;에 기초하며, 하나의 &lt;code&gt;fluidRow()&lt;/code&gt;안에는 12개의 &lt;code&gt;column()&lt;/code&gt;이 존재한다. (다시한번 느끼지만, Shiny를 잘할려면 HTML/CSS/JS를 잘해야 한다!)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(shiny)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(ggplot2)

dataset &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; diamonds

ui &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fluidPage&lt;/span&gt;(

  title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;다이아몬드 데이터 탐색&amp;#34;&lt;/span&gt;,
  
  &lt;span style=&#34;color:#a6e22e&#34;&gt;plotOutput&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;plot&amp;#39;&lt;/span&gt;),
  
  &lt;span style=&#34;color:#a6e22e&#34;&gt;hr&lt;/span&gt;(),

  &lt;span style=&#34;color:#a6e22e&#34;&gt;fluidRow&lt;/span&gt;(
    &lt;span style=&#34;color:#a6e22e&#34;&gt;column&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,
      &lt;span style=&#34;color:#a6e22e&#34;&gt;h4&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;다이아몬드 데이터 탐색&amp;#34;&lt;/span&gt;),
      &lt;span style=&#34;color:#a6e22e&#34;&gt;sliderInput&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sampleSize&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Sample Size&amp;#39;&lt;/span&gt;, 
                  min&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, max&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;nrow&lt;/span&gt;(dataset), value&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;min&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;nrow&lt;/span&gt;(dataset)), 
                  step&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;500&lt;/span&gt;, round&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;),
      &lt;span style=&#34;color:#a6e22e&#34;&gt;br&lt;/span&gt;(),
      &lt;span style=&#34;color:#a6e22e&#34;&gt;checkboxInput&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;jitter&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Jitter&amp;#39;&lt;/span&gt;),
      &lt;span style=&#34;color:#a6e22e&#34;&gt;checkboxInput&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;smooth&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Smooth&amp;#39;&lt;/span&gt;)
    ),
    &lt;span style=&#34;color:#a6e22e&#34;&gt;column&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, offset &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,
      &lt;span style=&#34;color:#a6e22e&#34;&gt;selectInput&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;x&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;X&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;names&lt;/span&gt;(dataset)),
      &lt;span style=&#34;color:#a6e22e&#34;&gt;selectInput&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;y&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Y&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;names&lt;/span&gt;(dataset), &lt;span style=&#34;color:#a6e22e&#34;&gt;names&lt;/span&gt;(dataset)[[2]]),
      &lt;span style=&#34;color:#a6e22e&#34;&gt;selectInput&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;color&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Color&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;None&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;names&lt;/span&gt;(dataset)))
    ),
    &lt;span style=&#34;color:#a6e22e&#34;&gt;column&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;,
      &lt;span style=&#34;color:#a6e22e&#34;&gt;selectInput&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;facet_row&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Facet Row&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(None&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;names&lt;/span&gt;(dataset))),
      &lt;span style=&#34;color:#a6e22e&#34;&gt;selectInput&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;facet_col&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Facet Column&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(None&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;names&lt;/span&gt;(dataset)))
    )
  )
)

server &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;function&lt;/span&gt;(input, output){    

  dataset &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;reactive&lt;/span&gt;({
    diamonds&lt;span style=&#34;color:#a6e22e&#34;&gt;[sample&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;nrow&lt;/span&gt;(diamonds), input&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;sampleSize),]
  })

  output&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;plot &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;renderPlot&lt;/span&gt;({
    
    p &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;dataset&lt;/span&gt;(), &lt;span style=&#34;color:#a6e22e&#34;&gt;aes_string&lt;/span&gt;(x&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;input&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;x, y&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;input&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;y)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_point&lt;/span&gt;()
    
    &lt;span style=&#34;color:#a6e22e&#34;&gt;if &lt;/span&gt;(input&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;color &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;None&amp;#39;&lt;/span&gt;)
      p &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; p &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;aes_string&lt;/span&gt;(color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;input&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;color)
    
    facets &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;paste&lt;/span&gt;(input&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;facet_row, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;~&amp;#39;&lt;/span&gt;, input&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;facet_col)
    &lt;span style=&#34;color:#a6e22e&#34;&gt;if &lt;/span&gt;(facets &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;. ~ .&amp;#39;&lt;/span&gt;)
      p &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; p &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;facet_grid&lt;/span&gt;(facets)
    
    &lt;span style=&#34;color:#a6e22e&#34;&gt;if &lt;/span&gt;(input&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;jitter)
      p &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; p &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_jitter&lt;/span&gt;()
    &lt;span style=&#34;color:#a6e22e&#34;&gt;if &lt;/span&gt;(input&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;smooth)
      p &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; p &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_smooth&lt;/span&gt;()
    
    &lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt;(p)
    
  }, height&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;400&lt;/span&gt;, width &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;700&lt;/span&gt;)
}

&lt;span style=&#34;color:#a6e22e&#34;&gt;shinyApp&lt;/span&gt;(ui &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ui, server &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; server)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## 
## Listening on http://127.0.0.1:4447
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/tutorial_04/shiny02.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;예시-3-navbar-pages&#34;&gt;예시 3. Navbar Pages&lt;/h2&gt;
&lt;p&gt;일반적인 웹사이트 메뉴 구성도와 큰 차이가 없다. 메뉴를 구성하는데, Top 메뉴와 Secondary Navigation까지 지원이 가능하다.&lt;/p&gt;
&lt;p&gt;이 기능을 구현할 때는 사실상의 &lt;code&gt;Shiny Project&lt;/code&gt; 단계로 진입하기 때문에, 이 때에는 메뉴 구성도와 같은 &lt;code&gt;웹사이트 개발 지식&lt;/code&gt;이 수반되어야 한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(shiny)

ui &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;navbarPage&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;My Application&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#a6e22e&#34;&gt;tabPanel&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Component 1&amp;#34;&lt;/span&gt;),
  &lt;span style=&#34;color:#a6e22e&#34;&gt;tabPanel&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Component 2&amp;#34;&lt;/span&gt;),
  &lt;span style=&#34;color:#a6e22e&#34;&gt;navbarMenu&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;More&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#a6e22e&#34;&gt;tabPanel&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Sub-Component A&amp;#34;&lt;/span&gt;),
    &lt;span style=&#34;color:#a6e22e&#34;&gt;tabPanel&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Sub-Component B&amp;#34;&lt;/span&gt;))
)

server &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;function&lt;/span&gt;(input, output) {
  
}

&lt;span style=&#34;color:#a6e22e&#34;&gt;shinyApp&lt;/span&gt;(ui &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ui, server &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; server)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## 
## Listening on http://127.0.0.1:7782
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/tutorial_04/shiny03.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;지금까지 &lt;code&gt;Layouts&lt;/code&gt;의 기본 개요와 함께 주요 &lt;code&gt;Functions&lt;/code&gt;에 대해 간단하게 학습하는 시간을 가졌다. 여기에서는 &lt;code&gt;Layouts&lt;/code&gt;의 기본 개념만 알고 있으면 추후에 &lt;code&gt;Shiny&lt;/code&gt; 대시보드 디자인을 할 때, 보다 쉽게 구현이 가능하다.&lt;/p&gt;
&lt;p&gt;특히, Grid System에 대한 개념이 매우 중요하므로 &lt;a href=&#34;https://shiny.rstudio.com/articles/layout-guide.html&#34;&gt;Application layout guide&lt;/a&gt;에서 추가 학습을 진행하는 것을 권장한다.&lt;/p&gt;
&lt;p&gt;다음 시간에는 Shiny App의 배포에 대해 작성하도록 한다.&lt;/p&gt;
&lt;h2 id=&#34;iv-reference&#34;&gt;IV. Reference&lt;/h2&gt;
&lt;p&gt;Allaire. (2014, January 24). Application layout guide. Retrieved March 30, 2020, from &lt;a href=&#34;https://shiny.rstudio.com/articles/layout-guide.html&#34;&gt;https://shiny.rstudio.com/articles/layout-guide.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Congratulation! You Mastered Layouts in Shiny&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>shiny tutorial 03 - HTML content</title>
      <link>https://chloevan.github.io/r/shiny/tutorial_03/</link>
      <pubDate>Fri, 27 Mar 2020 23:50:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/shiny/tutorial_03/</guid>
      <description>&lt;h2 id=&#34;공지&#34;&gt;공지&lt;/h2&gt;
&lt;p&gt;이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다&lt;/p&gt;
&lt;p&gt;이번에 준비한 Tutorial 코로나 세계현황을 &lt;code&gt;Shiny Dashboard&lt;/code&gt;로 만들어 가는 과정을 담았다.&lt;/p&gt;
&lt;h2 id=&#34;i-이전-글-소개&#34;&gt;I. 이전 글 소개&lt;/h2&gt;
&lt;p&gt;처음 shiny를 접하거나 shiny의 전체 튜토리얼이 궁금한 사람들을 위해 이전 글을 소개한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_01/&#34;&gt;shiny tutorial 01 - get started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_02/&#34;&gt;shiny tutorial 02 - Shiny Structure&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ii-html-content-개요&#34;&gt;II. HTML Content 개요&lt;/h2&gt;
&lt;p&gt;이번 시간에는 HTML Content 개요에 대한 간략적인 소개를 하려고 한다. 영어가 편하거나 중고급 개발자 분들은 &lt;a href=&#34;https://shiny.rstudio.com/articles/html-tags.html&#34;&gt;Customize your UI with HTML&lt;/a&gt;를 참고하기를 바란다.&lt;/p&gt;
&lt;p&gt;텍스트 및 이미지와 같은 HTML 콘텐츠를 사용하여 Shiny 앱의 모양을 사용자 지정할 수 있다. HTML은 다양한 태그의 조합으로 UI를 꾸미는 역할을 하며, Shiny의 문법역시 HTML 태그와 거의 유사하다. 예를 들면 아래와 같다. (Shiny: HTML)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;h1(): &lt;!-- raw HTML omitted --&gt; first level header,&lt;/li&gt;
&lt;li&gt;strong(): &lt;!-- raw HTML omitted --&gt; 글씨 굵게,&lt;/li&gt;
&lt;li&gt;em(): &lt;!-- raw HTML omitted --&gt; 글씨 이탤릭체,&lt;/li&gt;
&lt;li&gt;a(): &lt;!-- raw HTML omitted --&gt; web 페이지 연결,&lt;/li&gt;
&lt;li&gt;img(): &lt;!-- raw HTML omitted --&gt; 이미지 삽입,&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Shiny는 굉장히 HTML 지향적으로 구성되어 있다. 만약 더 많은 태그가 궁금한 사람들은 아래에서 다음과 같이 소스코드를 실행한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(shiny)
&lt;span style=&#34;color:#a6e22e&#34;&gt;names&lt;/span&gt;(tags)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;##   [1] &amp;quot;a&amp;quot;           &amp;quot;abbr&amp;quot;        &amp;quot;address&amp;quot;     &amp;quot;area&amp;quot;        &amp;quot;article&amp;quot;    
##   [6] &amp;quot;aside&amp;quot;       &amp;quot;audio&amp;quot;       &amp;quot;b&amp;quot;           &amp;quot;base&amp;quot;        &amp;quot;bdi&amp;quot;        
##  [11] &amp;quot;bdo&amp;quot;         &amp;quot;blockquote&amp;quot;  &amp;quot;body&amp;quot;        &amp;quot;br&amp;quot;          &amp;quot;button&amp;quot;     
##  [16] &amp;quot;canvas&amp;quot;      &amp;quot;caption&amp;quot;     &amp;quot;cite&amp;quot;        &amp;quot;code&amp;quot;        &amp;quot;col&amp;quot;        
##  [21] &amp;quot;colgroup&amp;quot;    &amp;quot;command&amp;quot;     &amp;quot;data&amp;quot;        &amp;quot;datalist&amp;quot;    &amp;quot;dd&amp;quot;         
##  [26] &amp;quot;del&amp;quot;         &amp;quot;details&amp;quot;     &amp;quot;dfn&amp;quot;         &amp;quot;dialog&amp;quot;      &amp;quot;div&amp;quot;        
##  [31] &amp;quot;dl&amp;quot;          &amp;quot;dt&amp;quot;          &amp;quot;em&amp;quot;          &amp;quot;embed&amp;quot;       &amp;quot;eventsource&amp;quot;
##  [36] &amp;quot;fieldset&amp;quot;    &amp;quot;figcaption&amp;quot;  &amp;quot;figure&amp;quot;      &amp;quot;footer&amp;quot;      &amp;quot;form&amp;quot;       
##  [41] &amp;quot;h1&amp;quot;          &amp;quot;h2&amp;quot;          &amp;quot;h3&amp;quot;          &amp;quot;h4&amp;quot;          &amp;quot;h5&amp;quot;         
##  [46] &amp;quot;h6&amp;quot;          &amp;quot;head&amp;quot;        &amp;quot;header&amp;quot;      &amp;quot;hgroup&amp;quot;      &amp;quot;hr&amp;quot;         
##  [51] &amp;quot;html&amp;quot;        &amp;quot;i&amp;quot;           &amp;quot;iframe&amp;quot;      &amp;quot;img&amp;quot;         &amp;quot;input&amp;quot;      
##  [56] &amp;quot;ins&amp;quot;         &amp;quot;kbd&amp;quot;         &amp;quot;keygen&amp;quot;      &amp;quot;label&amp;quot;       &amp;quot;legend&amp;quot;     
##  [61] &amp;quot;li&amp;quot;          &amp;quot;link&amp;quot;        &amp;quot;main&amp;quot;        &amp;quot;mark&amp;quot;        &amp;quot;map&amp;quot;        
##  [66] &amp;quot;menu&amp;quot;        &amp;quot;meta&amp;quot;        &amp;quot;meter&amp;quot;       &amp;quot;nav&amp;quot;         &amp;quot;noscript&amp;quot;   
##  [71] &amp;quot;object&amp;quot;      &amp;quot;ol&amp;quot;          &amp;quot;optgroup&amp;quot;    &amp;quot;option&amp;quot;      &amp;quot;output&amp;quot;     
##  [76] &amp;quot;p&amp;quot;           &amp;quot;param&amp;quot;       &amp;quot;picture&amp;quot;     &amp;quot;pre&amp;quot;         &amp;quot;progress&amp;quot;   
##  [81] &amp;quot;q&amp;quot;           &amp;quot;rp&amp;quot;          &amp;quot;rt&amp;quot;          &amp;quot;ruby&amp;quot;        &amp;quot;s&amp;quot;          
##  [86] &amp;quot;samp&amp;quot;        &amp;quot;script&amp;quot;      &amp;quot;section&amp;quot;     &amp;quot;select&amp;quot;      &amp;quot;small&amp;quot;      
##  [91] &amp;quot;source&amp;quot;      &amp;quot;span&amp;quot;        &amp;quot;strong&amp;quot;      &amp;quot;style&amp;quot;       &amp;quot;sub&amp;quot;        
##  [96] &amp;quot;summary&amp;quot;     &amp;quot;sup&amp;quot;         &amp;quot;table&amp;quot;       &amp;quot;tbody&amp;quot;       &amp;quot;td&amp;quot;         
## [101] &amp;quot;template&amp;quot;    &amp;quot;textarea&amp;quot;    &amp;quot;tfoot&amp;quot;       &amp;quot;th&amp;quot;          &amp;quot;thead&amp;quot;      
## [106] &amp;quot;time&amp;quot;        &amp;quot;title&amp;quot;       &amp;quot;tr&amp;quot;          &amp;quot;track&amp;quot;       &amp;quot;u&amp;quot;          
## [111] &amp;quot;ul&amp;quot;          &amp;quot;var&amp;quot;         &amp;quot;video&amp;quot;       &amp;quot;wbr&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;names(tags)&lt;/code&gt;는 총 114개의 함수로 구성되어 있고, 이 숫자 역시 shiny 패키지가 업데이트 될수록 함수가 늘어나는 양상을 띄고 있다. (예: Shiny 홈페이지에는 110개의 함수만 소개됨)&lt;/p&gt;
&lt;h2 id=&#34;iii-shiny-안에-tag-생성&#34;&gt;III. Shiny 안에 Tag 생성&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;ui&lt;/code&gt; 내부에 별도로 &lt;code&gt;HTML tag&lt;/code&gt;를 생성하고 싶다면 아래와 같이 &lt;code&gt;tags&lt;/code&gt;를 활용하여 HTML 태그를 생성하면 된다.&lt;/p&gt;
&lt;h2 id=&#34;예시-1-h1-tag&#34;&gt;예시 1. &lt;code&gt;h1 tag&lt;/code&gt;&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;tags&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;h1&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;h1 tag&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;!-- raw HTML omitted --&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# &amp;lt;h1&amp;gt;h1 tag&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;예시-2-div-tag-속성값-입력&#34;&gt;예시 2. &lt;code&gt;div tag 속성값 입력&lt;/code&gt;&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;tags&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;div&lt;/span&gt;(class &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;header&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;!-- raw HTML omitted --&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# &amp;lt;div class=&amp;#34;header&amp;#34;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;예시-3-div-태그-안에-p-태그-넣기&#34;&gt;예시 3. &lt;code&gt;div&lt;/code&gt; 태그 안에 &lt;code&gt;p&lt;/code&gt; 태그 넣기&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;tags&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;div&lt;/span&gt;(class &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;p&amp;#34;&lt;/span&gt;, checked &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NA&lt;/span&gt;,
  tags&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;p&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Is Shiny Tutorial easy to learn? If so&amp;#34;&lt;/span&gt;),
)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# &amp;lt;div class=&amp;#34;p&amp;#34; checked&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#   &amp;lt;p&amp;gt;Is Shiny Tutorial easy to learn? If so&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# &amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;예시-4-div-태그-안에-p--a-태그-같이-넣기&#34;&gt;예시 4. &lt;code&gt;div&lt;/code&gt; 태그 안에 &lt;code&gt;p&lt;/code&gt; &amp;amp; &lt;code&gt;a&lt;/code&gt; 태그 같이 넣기&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;tags&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;div&lt;/span&gt;(class &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;header&amp;#34;&lt;/span&gt;, checked &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NA&lt;/span&gt;,
  tags&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;p&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Is Shiny Tutorial easy to learn? If so&amp;#34;&lt;/span&gt;),
  tags&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;(href &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;shiny.rstudio.com/tutorial&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Let&amp;#39;s Do it. Click Here!&amp;#34;&lt;/span&gt;)
)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# &amp;lt;div class=&amp;#34;header&amp;#34; checked&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#  &amp;lt;p&amp;gt;Is Shiny Tutorial easy to learn? If so&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#  &amp;lt;a href=&amp;#34;shiny.rstudio.com/tutorial&amp;#34;&amp;gt;Let&amp;#39;s Do it. # Click Here!&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# &amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;예시-5-withtags-활용법&#34;&gt;예시 5. withTags 활용법&lt;/h2&gt;
&lt;p&gt;HTML tags를 활용하려면 지속적으로 &lt;code&gt;tags&lt;/code&gt;를 입력해야 하는 불편함이 있다. 그런데, &lt;code&gt;withTags&lt;/code&gt;를 활용하면 &lt;code&gt;tags&lt;/code&gt;를 중복적으로 사용하지 않아도 되는 장점이 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;withTags&lt;/span&gt;({
  &lt;span style=&#34;color:#a6e22e&#34;&gt;div&lt;/span&gt;(class&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;header&amp;#34;&lt;/span&gt;, checked&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;NA&lt;/span&gt;,
    &lt;span style=&#34;color:#a6e22e&#34;&gt;p&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Is Shiny Tutorial easy to learn? If so&amp;#34;&lt;/span&gt;),
    &lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;(href&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;shiny.rstudio.com/tutorial&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Let&amp;#39;s Do it. Click Here!&amp;#34;&lt;/span&gt;)
  )
})
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# &amp;lt;div class=&amp;#34;header&amp;#34; checked&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#   &amp;lt;p&amp;gt;Is Shiny Tutorial easy to learn? If so&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#  &amp;lt;a href=&amp;#34;shiny.rstudio.com/tutorial&amp;#34;&amp;gt;Let&amp;#39;s Do it.  Click Here!&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# &amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;웹프로그래머에게는 사실 매우 간단한 작업일 수도 있지만, Web 환경에 익숙하지 않은 데이터 분석가에게는 조금은 어려울 수 있다. 그러나, 오픈소스로 대시보드를 작업해야 한다면, HTML은 매우 중요한 작업이 될 가능성이 크다. 시각적으로 좋은 디자인일 수록, 가독성이 높은 대시보드일수록 클라이언트 또는 상급자가 쉽게 의사결정을 할 수 있도록 도와줄 수 있기 때문이다.&lt;/p&gt;
&lt;h2 id=&#34;iv-reference&#34;&gt;IV. Reference&lt;/h2&gt;
&lt;p&gt;Grolemund, G., Cheng, J., &amp;amp; Cetinkaya-Rundel, M. (2017, August 9). Customize your UI with HTML. Retrieved from &lt;a href=&#34;https://shiny.rstudio.com/articles/html-tags.html&#34;&gt;https://shiny.rstudio.com/articles/html-tags.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Congratulation! You Mastered HTML content in Shiny&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>shiny tutorial 02 - Shiny Structure</title>
      <link>https://chloevan.github.io/r/shiny/tutorial_02/</link>
      <pubDate>Sun, 22 Mar 2020 12:33:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/shiny/tutorial_02/</guid>
      <description>&lt;h2 id=&#34;공지&#34;&gt;공지&lt;/h2&gt;
&lt;p&gt;이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다&lt;/p&gt;
&lt;p&gt;이번에 준비한 Tutorial 코로나 세계현황을 &lt;code&gt;Shiny Dashboard&lt;/code&gt;로 만들어 가는 과정을 담았다.&lt;/p&gt;
&lt;h2 id=&#34;i-shiny-소개&#34;&gt;I. Shiny 소개&lt;/h2&gt;
&lt;p&gt;지난시간에 Shiny에 관한 대략적인 소개를 했다. 처음 이 페이지를 방문한 사람들 위해 &lt;a href=&#34;https://chloevan.github.io/r/shiny/tutorial_01/&#34;&gt;shiny tutorial 01 - get started&lt;/a&gt; 에서 짧게 확인하기를 바란다.&lt;/p&gt;
&lt;h2 id=&#34;ii-shiny-app-structure&#34;&gt;II. Shiny App Structure&lt;/h2&gt;
&lt;p&gt;아래 샘플 코드를 확인하자.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# load the shiny package&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(shiny)

&lt;span style=&#34;color:#75715e&#34;&gt;# 화면 구성 (UI) - 프론트엔드&lt;/span&gt;
ui &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fluidPage&lt;/span&gt;(
  &lt;span style=&#34;color:#a6e22e&#34;&gt;numericInput&lt;/span&gt;(inputId &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;n&amp;#34;&lt;/span&gt;, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Sample size&amp;#34;&lt;/span&gt;, value &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;),
  &lt;span style=&#34;color:#a6e22e&#34;&gt;plotOutput&lt;/span&gt;(outputId &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hist&amp;#34;&lt;/span&gt;)
)

&lt;span style=&#34;color:#75715e&#34;&gt;# 서버 구성 - 벡엔드&lt;/span&gt;
server &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;function&lt;/span&gt;(input, output) {
  output&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;hist &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;renderPlot&lt;/span&gt;({
    &lt;span style=&#34;color:#a6e22e&#34;&gt;hist&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;rnorm&lt;/span&gt;(input&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;n))
 
    &lt;span style=&#34;color:#75715e&#34;&gt;# 결과물을 만들어내는 코드 작성&lt;/span&gt;
    
  })
}

&lt;span style=&#34;color:#75715e&#34;&gt;# shiny app 호출&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# 프로젝트 진행 시, 폴더 안에&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# 파일명은 app.R 형태로 저장한다. &lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;shinyApp&lt;/span&gt;(ui &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ui, server &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; server)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## 
## Listening on http://127.0.0.1:7908
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/tutorial_02/shiny01.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Shiny&lt;/code&gt;의 기본 구조는 &lt;code&gt;UI&lt;/code&gt;, &lt;code&gt;Server&lt;/code&gt;, &lt;code&gt;shinyApp&lt;/code&gt; 형태로 구성이 된다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;UI&lt;/code&gt;: 사용자 인터페이스, 즉 화면단을 만드는 작업을 진행한다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Server&lt;/code&gt;: 사용자 인터페이스가 제대로 기능할 수 있도록 지원하며, &lt;code&gt;Server&lt;/code&gt;단에서, 데이터 전처리, 수집, 시각화 작업이 이루어진다. 즉, 이 때에는 R의 문법이 사용되는 것이다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;shinyApp&lt;/code&gt;: &lt;code&gt;UI&lt;/code&gt;와 &lt;code&gt;Server&lt;/code&gt;객체별로 저장이 되면, &lt;code&gt;shinyApp&lt;/code&gt;을 통해 호출하면서 실행이 된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;각각의 App이 복잡하면 복잡해질 수록 &lt;code&gt;UI&lt;/code&gt;, &lt;code&gt;Server&lt;/code&gt;, &lt;code&gt;shinyApp&lt;/code&gt;의 파일로 재구현되어 관리가 될 수 있으며, &lt;code&gt;Modularizing&lt;/code&gt;의 개념도 함께 들어간다. 즉, 이 때부터는 웹개발 로직의 형태와 비슷하게 전개되는데, 이제 프로그래밍에 입문하는 사람들을 위해서는 추천하지 않는다. &lt;code&gt;Shiny&lt;/code&gt;를 추천하는 이유는 빠른 프로토타입이 가능해서이기 때문에, 가급적 이 원칙을 지켰으면 좋겠다. 냉정하게 말하면 복잡해질 것 같으면, 여기서부터는 고민해야 한다. BI Tool을 쓸것인가? 아니면 프론트개발자와 협업을 할 것인가?&lt;/p&gt;
&lt;p&gt;만약, 조금 더 복잡한 &lt;code&gt;ShinyApp&lt;/code&gt;을 개발하고 싶다면, 아래 글에서 추가적인 개념을 익혔으면 한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://shiny.rstudio.com/articles/modules.html&#34;&gt;Modularizing Shiny app code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.ardata.fr/en/post/2019/02/11/why-using-modules/&#34;&gt;Shiny Modules (part 1) : Why using modules?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;다시 추가로 말하자면, 여기서부터는 &lt;code&gt;데이터분석가(Data Analyst)&lt;/code&gt;의 역량보다는 &lt;code&gt;프론트엔드 개발자(Front-End Developer)&lt;/code&gt;의 역량의 성격이 훨씬 더 짙어진다. 이 부분은 꼭 참고하기를 바란다.&lt;/p&gt;
&lt;h3 id=&#34;1-ui-또는-uir&#34;&gt;(1) ui 또는 ui.R&lt;/h3&gt;
&lt;p&gt;사용자에게 보여주는 화면을 만들어주는 역할을 하며, 보통 &lt;code&gt;Input &amp;amp; Output&lt;/code&gt; function으로 통용된다. 대표적인 함수는 아래와 같다.&lt;/p&gt;
&lt;p&gt;대표적인 &lt;code&gt;Input&lt;/code&gt; 관련 함수는 아래와 같다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;textInput()&lt;/code&gt;: 사용자가 텍스트를 입력할 수 있다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dateRangeInput()&lt;/code&gt;: 사용자가 날짜 등을 입력할 수 있다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fileInput()&lt;/code&gt;: 사용자가 csv파일 등을 입력할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;대표적인 &lt;code&gt;Output&lt;/code&gt; 관련 함수는 아래와 같다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;textOutput()&lt;/code&gt; : 입력한 텍스트가 출력된다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tableOutput()&lt;/code&gt;: 데이터프레임 등이 출력된다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;imageOutput()&lt;/code&gt;: 이미지 등이 출력된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;조금 더 자세한 내용이 함수가 궁금하다면, 강사의 강의안을 참조하거나 또는 &lt;a href=&#34;https://shiny.rstudio.com/images/shiny-cheatsheet.pdf&#34;&gt;Shiny Cheet Sheet&lt;/a&gt;에서 확인하기를 바란다. 마지막으로 전체 함수가 궁금한 수강생들은 &lt;a href=&#34;https://shiny.rstudio.com/reference/shiny/1.0.5/&#34;&gt;Function Reference&lt;/a&gt;를 참고하기를 바란다.&lt;/p&gt;
&lt;p&gt;이 때 중요한 것은 각 함수 안에서 &lt;code&gt;inputId=your_inputId&lt;/code&gt; 또는 &lt;code&gt;outputId=your_outputId&lt;/code&gt;가 중요하다. 각각의 ID명을 매개로 Server단과 연결이 되기 때문이다. 초반에 많은 에러들은 사실 여기에서 발생이 된다.&lt;/p&gt;
&lt;p&gt;아래 샘플 코드를 보자.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ui &amp;lt;- fluidPage(
  Input(inputId = myinput, label = mylabel, ...)
  Output(outputId = myoutput, ...)
)

server &amp;lt;- function(input, output){
  output$myoutput &amp;lt;- render*({
    # code to build the output.
    # If it uses an input value (input$myinput),
    # the output will be rebuilt whenever
    # the input value changes
  })}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;ui.R&lt;/code&gt;에 있는 &lt;code&gt;output&lt;/code&gt;의 &lt;code&gt;ID&lt;/code&gt;명과, &lt;code&gt;input&lt;/code&gt;의 &lt;code&gt;ID&lt;/code&gt;명이 &lt;code&gt;server.R&lt;/code&gt;의 그것과 동일해야 한다.&lt;/p&gt;
&lt;h3 id=&#34;2-server-또는-serverr&#34;&gt;(2) server 또는 server.R&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;ui&lt;/code&gt;에서 파라미터(&lt;code&gt;ex: outputId&lt;/code&gt;) 형태로 값이 넘어오면 파라미터를 받아서 처리하고 결과를 보여준다. &lt;code&gt;UI&lt;/code&gt;에 있는 &lt;code&gt;output()&lt;/code&gt;함수들의 각각의 구성요소는 &lt;code&gt;server&lt;/code&gt;에서 &lt;code&gt;render*()&lt;/code&gt; 함수와 연결이 된다. 예를 들면 아래와 같다.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;output$hist &amp;lt;- renderPlot({ 
    hist(rnorm(input$myinput)) 
  })
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;renderPlot()&lt;/code&gt;: 그래프 작성 결과를 출력하는 함수다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;renderText()&lt;/code&gt;: 텍스트 작성 결과를 출력하는 함수다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;renderTable()&lt;/code&gt;: 테이블 작성 결과를 출력하는 함수다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;간단하게 ui와 server 관계를 정리하면 아래와 같다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ui()&lt;/code&gt; 에서는 &lt;code&gt;plotOutput(outputId = &amp;quot;myoutput&amp;quot;)&lt;/code&gt;, &lt;code&gt;server()&lt;/code&gt;에서는 &lt;code&gt;output$myoutput &amp;lt;- renderPlot({...})&lt;/code&gt; 정리될 수 있고, 이 때 두 객체를 연결하는 인자는 &lt;code&gt;ouputId&lt;/code&gt;인 &lt;code&gt;myouput&lt;/code&gt;이다.&lt;/p&gt;
&lt;h2 id=&#34;samples&#34;&gt;Samples&lt;/h2&gt;
&lt;p&gt;매우 간단한 소스코드를 입력하면서 &lt;code&gt;ui&lt;/code&gt;와 &lt;code&gt;server&lt;/code&gt;가 서로 어떻게 연동이 되는지 확인한다. 다만 이 때에는 &lt;code&gt;numericInput&lt;/code&gt;의 &lt;code&gt;label&lt;/code&gt;을 영어가 아닌 한글로 &lt;code&gt;샘플수&lt;/code&gt;라 명명했다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 패키지 로드&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(shiny)

&lt;span style=&#34;color:#75715e&#34;&gt;# ui 디자인&lt;/span&gt;
ui &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fluidPage&lt;/span&gt;(
  &lt;span style=&#34;color:#a6e22e&#34;&gt;numericInput&lt;/span&gt;(inputId &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;myNumber&amp;#34;&lt;/span&gt;, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;샘플수&amp;#34;&lt;/span&gt;, value &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;),
  &lt;span style=&#34;color:#a6e22e&#34;&gt;plotOutput&lt;/span&gt;(outputId &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;myHist&amp;#34;&lt;/span&gt;)
)

&lt;span style=&#34;color:#75715e&#34;&gt;# 서버 개발&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# myHist와 myNumber를 꼭 확인한다. &lt;/span&gt;
server &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;function&lt;/span&gt;(input, output) {
  output&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;myHist &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;renderPlot&lt;/span&gt;({
    &lt;span style=&#34;color:#a6e22e&#34;&gt;hist&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;rnorm&lt;/span&gt;(input&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;myNumber))
  })
}

&lt;span style=&#34;color:#75715e&#34;&gt;# shinyApp에서 ui와 server를 호출한다. &lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;shinyApp&lt;/span&gt;(ui &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ui, server &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; server)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## 
## Listening on http://127.0.0.1:6753
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/tutorial_02/shiny02.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Congratulation! You Mastered Shiny Structure.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>shiny tutorial 01 - get started</title>
      <link>https://chloevan.github.io/r/shiny/tutorial_01/</link>
      <pubDate>Sat, 21 Mar 2020 12:33:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/shiny/tutorial_01/</guid>
      <description>&lt;h2 id=&#34;공지&#34;&gt;공지&lt;/h2&gt;
&lt;p&gt;이번에 준비한 튜토리얼은 제 강의를 듣는 과거-현재-미래 수강생분들을 위해 준비한 자료이다. 많은 도움이 되기를 바란다&lt;/p&gt;
&lt;p&gt;이번에 준비한 Tutorial 코로나 세계현황을 &lt;code&gt;Shiny Dashboard&lt;/code&gt;로 만들어 가는 과정을 담았다.&lt;/p&gt;
&lt;h2 id=&#34;i-shiny-소개&#34;&gt;I. Shiny 소개&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Shiny&lt;/code&gt;는 &lt;code&gt;R&lt;/code&gt;에서 제공하는 일종의 &lt;code&gt;Web Framework&lt;/code&gt;이다. 기존 웹사이트와 다르게, 주요 목적은 데이터를 활용해서 대시보드를 만드는 것에 초점이 맞춰져 있다.&lt;/p&gt;
&lt;p&gt;가장 큰 장점은 &lt;code&gt;무료&lt;/code&gt;로 &lt;code&gt;빠른 프로토타입&lt;/code&gt;을 만들 수 있고, &lt;code&gt;HTML&lt;/code&gt;, &lt;code&gt;CSS&lt;/code&gt;,  &lt;code&gt;Javascript&lt;/code&gt;와 직접적으로 호환이 되기 때문에 무한한 &lt;code&gt;확장성&lt;/code&gt;이 있다. 바로 중급 레벨에서 배우고 싶으시다면 &lt;a href=&#34;https://shiny.rstudio.com/tutorial/&#34;&gt;Intermediate Level&lt;/a&gt;을 클릭한다.&lt;/p&gt;
&lt;h2 id=&#34;1-유로-시각화-tool과-비교&#34;&gt;(1) 유로 시각화 Tool과 비교&lt;/h2&gt;
&lt;p&gt;기존에 시각화 Tool과 비교하는 가장 빠른 방법은 show room을 비교하면 된다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://community.powerbi.com/t5/Data-Stories-Gallery/bd-p/DataStoriesGallery&#34;&gt;Power BI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://public.tableau.com/en-us/gallery/?tab=viz-of-the-day&amp;amp;type=viz-of-the-day&#34;&gt;Tableau&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://shiny.rstudio.com/gallery/#user-showcase&#34;&gt;Shiny&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;각각의 차이는 있지만, &lt;code&gt;Shiny&lt;/code&gt;는 무료로 제작할 수가 있다. &lt;code&gt;Shiny&lt;/code&gt;는 꼭 알아두면 좋고, &lt;code&gt;Power BI&lt;/code&gt;와 &lt;code&gt;Tableau&lt;/code&gt;는 회사에서 도입하는 시스템을 따라가면 좋다. 참고로 강사가 사용했던 BI Tool은 &lt;code&gt;Power BI&lt;/code&gt;, &lt;code&gt;Google Data Studio&lt;/code&gt;가 있다. 그래도 &lt;code&gt;Shiny&lt;/code&gt;가 좋은 이유는 &lt;code&gt;HTML &amp;amp; CSS&lt;/code&gt;로 조금 더 미세한 작업을 가미할 수 있다는 점, 그리고 내가 원하는 그래프를 만들 수 있다는 점. 연구자 또는 개발자의 자유도가 높은 것이 &lt;code&gt;Shiny&lt;/code&gt;의 가장 큰 장점이다.&lt;/p&gt;
&lt;h2 id=&#34;2-어떤-역량을-키워야-할까&#34;&gt;(2) 어떤 역량을 키워야 할까?&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Shiny&lt;/code&gt;를 잘할려면 R은 기본이지만, &lt;code&gt;HTML&lt;/code&gt;, &lt;code&gt;CSS&lt;/code&gt;, 그리고 &lt;code&gt;JavaScript&lt;/code&gt;를 더 공부를 많이 해야 한다. 기존에 &lt;code&gt;Front-End&lt;/code&gt; 개발자라면, &lt;code&gt;R&lt;/code&gt;을 배워두면 데이터쪽 관련 일도 겸업할 수 있을 것 같다. 데이터 분석의 마지막은 결국엔 대시보드 개발과 연관이 깊다.&lt;/p&gt;
&lt;h2 id=&#34;3-sample-dashboard&#34;&gt;(3) Sample Dashboard&lt;/h2&gt;
&lt;p&gt;간단하게 &lt;code&gt;Shiny Sample&lt;/code&gt;을 확인해보자.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.shinyapps.io/source/&#34;&gt;Movie&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.shinyapps.io/corona_19/&#34;&gt;코로나&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;4-어떤-툴을-사용해야-할까&#34;&gt;(4) 어떤 툴을 사용해야 할까?&lt;/h2&gt;
&lt;p&gt;사실 답하기 어렵다. 회사에 처한 환경과 본인이 속한 팀에 따라 Tool의 사용법과 의도가 달라지기 때문이다.&lt;/p&gt;
&lt;p&gt;그러나, 객관적으로 볼 때, &lt;code&gt;Power BI&lt;/code&gt;와 같은 Tool을 사용할 때는 한번 만들어진 대시보드를 지속적으로 사용하거나, 또한 주 사용자들이 프로그래밍에 익숙하지 않은 분들이 많은데, 회사의 자원이 넉넉한 대기업 또는 유니콘 같은 기업의 경우 비용을 들이더라도 &lt;code&gt;Power BI&lt;/code&gt; 툴을 사용하는 것이 좋다.&lt;/p&gt;
&lt;p&gt;반대로, &lt;code&gt;Shiny&lt;/code&gt;와 같은 오픈소스를 사용하려면 중소기업 또는 스타트업인데 데이터의 접근성이 보다 쉬운 경우 간단한 프로토타입 제작 및 저 비용으로 최고의 성과를 올릴 수 있는 장점이 있다. 여기에서 업무성과가 지속적으로 나오고 &lt;code&gt;데이터 대시보드 개발 및 활용&lt;/code&gt;의  사내 분위기가 꾸준하게 조성이 되면  &lt;code&gt;Shiny Enterprise&lt;/code&gt; 또는 &lt;code&gt;Power BI&lt;/code&gt; 같은 유료 툴로 전환하는 것이다.&lt;/p&gt;
&lt;p&gt;Power BI Vs. R Shiny의 관점보다는 결국 &amp;lsquo;어떻게 대시보드를 활용할 것인가?&amp;lsquo;라는 기본적인 전제가 마련이 되면 무엇을 사용하더라도 조직의 성과에 기여할 것은 자명하다.&lt;/p&gt;
&lt;h2 id=&#34;ii-get-started&#34;&gt;II. Get Started&lt;/h2&gt;
&lt;p&gt;Shiny 프로젝트를 시작하는 것은 간단하다.&lt;/p&gt;
&lt;p&gt;[File] - [New Directory] - [Shiny Web Application] - [Working Directory] 순서대로 작업하면 된다.&lt;/p&gt;
&lt;p&gt;그러면 아래와 같은 폴더 구조(tree)가 되어 있을 것이다.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;.
├── app.R
└── test.Rproj
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;app.R&lt;/code&gt; 파일을 열면 아래와 같은 Sample 소스코드가 있을 것이다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# This is a Shiny web application. You can run the application by clicking&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# the &amp;#39;Run App&amp;#39; button above.&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# Find out more about building applications with Shiny here:&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#    http://shiny.rstudio.com/&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;

&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(shiny)

&lt;span style=&#34;color:#75715e&#34;&gt;# Define UI for application that draws a histogram&lt;/span&gt;
ui &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fluidPage&lt;/span&gt;(

    &lt;span style=&#34;color:#75715e&#34;&gt;# Application title&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;titlePanel&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Old Faithful Geyser Data&amp;#34;&lt;/span&gt;),

    &lt;span style=&#34;color:#75715e&#34;&gt;# Sidebar with a slider input for number of bins &lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;sidebarLayout&lt;/span&gt;(
        &lt;span style=&#34;color:#a6e22e&#34;&gt;sidebarPanel&lt;/span&gt;(
            &lt;span style=&#34;color:#a6e22e&#34;&gt;sliderInput&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bins&amp;#34;&lt;/span&gt;,
                        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Number of bins:&amp;#34;&lt;/span&gt;,
                        min &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,
                        max &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;,
                        value &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;)
        ),

        &lt;span style=&#34;color:#75715e&#34;&gt;# Show a plot of the generated distribution&lt;/span&gt;
        &lt;span style=&#34;color:#a6e22e&#34;&gt;mainPanel&lt;/span&gt;(
           &lt;span style=&#34;color:#a6e22e&#34;&gt;plotOutput&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;distPlot&amp;#34;&lt;/span&gt;)
        )
    )
)

&lt;span style=&#34;color:#75715e&#34;&gt;# Define server logic required to draw a histogram&lt;/span&gt;
server &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;function&lt;/span&gt;(input, output) {

    output&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;distPlot &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;renderPlot&lt;/span&gt;({
        &lt;span style=&#34;color:#75715e&#34;&gt;# generate bins based on input$bins from ui.R&lt;/span&gt;
        x    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; faithful[, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;]
        bins &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;seq&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;min&lt;/span&gt;(x), &lt;span style=&#34;color:#a6e22e&#34;&gt;max&lt;/span&gt;(x), length.out &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; input&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;bins &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)

        &lt;span style=&#34;color:#75715e&#34;&gt;# draw the histogram with the specified number of bins&lt;/span&gt;
        &lt;span style=&#34;color:#a6e22e&#34;&gt;hist&lt;/span&gt;(x, breaks &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; bins, col &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;darkgray&amp;#39;&lt;/span&gt;, border &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;white&amp;#39;&lt;/span&gt;)
    })
}

&lt;span style=&#34;color:#75715e&#34;&gt;# Run the application &lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;shinyApp&lt;/span&gt;(ui &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ui, server &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; server)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## 
## Listening on http://127.0.0.1:3205
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;전체 소스코드를 실행하면 아래와 같은 이미지 형태의 그래프가 나오면 이제 여러분들도 Shiny App을 만든 것이다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/shiny/tutorial_01/shiny01.png&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Congratulation!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>