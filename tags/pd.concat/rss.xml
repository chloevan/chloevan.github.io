<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>pd.concat on Data Science | ChloEvan</title>
    <link>https://chloevan.github.io/tags/pd.concat/</link>
    <description>Recent content in pd.concat on Data Science | ChloEvan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 29 May 2020 14:15:47 +0900</lastBuildDate>
    
        <atom:link href="https://chloevan.github.io/tags/pd.concat/rss.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Data Transformation - Merging Data</title>
      <link>https://chloevan.github.io/python/python_edu/02_datatransformation/01_data_transformation_merging_data/</link>
      <pubDate>Fri, 29 May 2020 14:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/02_datatransformation/01_data_transformation_merging_data/</guid>
      <description>&lt;h2 id=&#34;공지&#34;&gt;공지&lt;/h2&gt;
&lt;p&gt;제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 &lt;code&gt;Reference&lt;/code&gt;는 꼭 확인하셔서 교재 구매 또는 관련 &lt;code&gt;Reference&lt;/code&gt;를 확인하시기를 바랍니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;데이터는 코로나 데이터를 활용했다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;i-data-transform-overview&#34;&gt;I. Data Transform Overview&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/python_edu/02_datatransformation/pandas_logo.png#center&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;데이터 변환은 데이터를 하나의 형식이나 구조에서 다른 형식이나 구조로 변환하는 데 사용되는 기법이다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Data deduplication&lt;/code&gt; 데이터 중복 제거에는 중복된 데이터 식별 및 제거가 포함된다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Key restructuring&lt;/code&gt; 의미가 내장된 모든 키를 일반 키로 변환하는 것을 포함한다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Data Cleansing&lt;/code&gt;은 소스 데이터의 정확성을 높이기 위해 의미나 정보를 추출하지 않고 소스 언어에서 단어를 추출하고 구식, 부정확, 불완전한 정보를 삭제하는 것을 포함함.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Data aggregation&lt;/code&gt;는 서로 다른 유형의 보고 시스템에서 중요한 정보를 검색, 추출, 요약 및 보존하는 것을 포함함.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Data integration&lt;/code&gt;은 다른 데이터 유형을 변환하여 공통 구조나 스키마로 통합하는 것을 포함한다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Data filtering&lt;/code&gt;은 데이터 필터링은 특정 사용자와 관련된 정보를 식별하는 것을 포함한다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Data joining&lt;/code&gt;은 두 개 이상의 테이블 간의 관계를 설정하는 것이 포함된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;데이터를 변환하는 주된 이유는 변환된 데이터가 다른 데이터와 호환될 수 있도록 더 나은 대표성을 갖기 위함이다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;이것 외에도, 시스템에서의 상호운용성은 공통 데이터 구조와 포맷을 따름으로써 달성 될 수 있다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ii-merging-database-style-dataframes&#34;&gt;II. Merging database style dataframes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;서로 다른 두개의 데이터를 &lt;code&gt;merge&lt;/code&gt;할 때, &lt;code&gt;concat&lt;/code&gt;이라는 함수를 사용한다.&lt;/li&gt;
&lt;li&gt;사용법은 아래와 같다.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;dataframe = pd.concat([dataFrame1, dataFrame2], ignore_index=True)

dataframe
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;앞의 코드의 출력은 두 표 모두를 결합한 단일 데이터프레임이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/python/02_datatransformation/figure_01.png#center&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ignore_index&lt;/code&gt; 인수는 인덱스의 순서와 연관이 있다. 만약 &lt;code&gt;ignore_index=False&lt;/code&gt;로 지정한다면, 기존 인덱스의 순서는 그대로 유지된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1-axis0&#34;&gt;(1) axis=0&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;두개의 서로 다른 테이블을 위아래로 합친다는 뜻이다. 간단하게 코드를 통해 예를 확인하자.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# package import&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pd

&lt;span style=&#34;color:#75715e&#34;&gt;# 데이터 생성&lt;/span&gt;
df1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataFrame([[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;], [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;b&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;]], 
                   columns&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;letter&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;number&amp;#39;&lt;/span&gt;])

df2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataFrame([[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;c&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;], [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;d&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;]],
                   columns&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;letter&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;number&amp;#39;&lt;/span&gt;])

&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(df1)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(df2)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;  letter  number
0      a       1
1      b       2
  letter  number
0      c       3
1      d       4
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;temp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;concat([df1, df2], axis&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(temp)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;  letter  number
0      a       1
1      b       2
0      c       3
1      d       4
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;2-axis1&#34;&gt;(2) axis=1&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;두개의 서로 다른 테이블을 왼쪽에서 오른쪽 순으로 합친다는 뜻이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;temp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;concat([df1, df2], axis&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(temp)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;  letter  number letter  number
0      a       1      c       3
1      b       2      d       4
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;iii-real-problems-and-solutions&#34;&gt;III. Real Problems and Solutions&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Chapter II.&lt;/code&gt;의 예제들은 기본적으로 쉬운 예제에 속한다. 그런다면 실전은 어떨까?&lt;/li&gt;
&lt;li&gt;다음 예제 데이터프레임을 확인해보자.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;df1SE &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataFrame({ &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;StudentID&amp;#39;&lt;/span&gt;: [&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;17&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;19&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;29&lt;/span&gt;], 
                      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ScoreSE&amp;#39;&lt;/span&gt; : [&lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;66&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;31&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;51&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;71&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;91&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;56&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;52&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;73&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;92&lt;/span&gt;]})

&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(df1SE)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;    StudentID  ScoreSE
0           9       22
1          11       66
2          13       31
3          15       51
4          17       71
5          19       91
6          21       56
7          23       32
8          25       52
9          27       73
10         29       92
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;df2SE &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataFrame({&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;StudentID&amp;#39;&lt;/span&gt;: [&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;26&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;28&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;], 
                      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ScoreSE&amp;#39;&lt;/span&gt;: [&lt;span style=&#34;color:#ae81ff&#34;&gt;98&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;93&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;44&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;77&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;69&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;56&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;31&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;53&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;78&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;93&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;56&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;77&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;33&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;56&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt;]})
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(df2SE)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;    StudentID  ScoreSE
0           2       98
1           4       93
2           6       44
3           8       77
4          10       69
5          12       56
6          14       31
7          16       53
8          18       78
9          20       93
10         22       56
11         24       77
12         26       33
13         28       56
14         30       27
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;df1ML &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataFrame({ &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;StudentID&amp;#39;&lt;/span&gt;: [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;17&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;19&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;29&lt;/span&gt;], 
                      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ScoreML&amp;#39;&lt;/span&gt; : [&lt;span style=&#34;color:#ae81ff&#34;&gt;39&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;55&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;77&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;52&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;86&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;41&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;77&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;73&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;51&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;86&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;82&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;92&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;]})

&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(df1ML)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;    StudentID  ScoreML
0           1       39
1           3       49
2           5       55
3           7       77
4           9       52
5          11       86
6          13       41
7          15       77
8          17       73
9          19       51
10         21       86
11         23       82
12         25       92
13         27       23
14         29       49
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;df2ML &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataFrame({&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;StudentID&amp;#39;&lt;/span&gt;: [&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;], 
                      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ScoreML&amp;#39;&lt;/span&gt;: [&lt;span style=&#34;color:#ae81ff&#34;&gt;93&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;44&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;78&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;97&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;87&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;89&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;39&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;43&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;88&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;78&lt;/span&gt;]})

&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(df2ML)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;   StudentID  ScoreML
0          2       93
1          4       44
2          6       78
3          8       97
4         10       87
5         12       89
6         14       39
7         16       43
8         18       88
9         20       78
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;실전에서는 이렇게 데이터의 행의 개수가 다른 것이 태반이다.&lt;/li&gt;
&lt;li&gt;또한, 모든 학생이 &lt;code&gt;ML&lt;/code&gt;수업, &lt;code&gt;SE&lt;/code&gt;수업을 수강한 것이 아니다.&lt;/li&gt;
&lt;li&gt;위와 같은 상황에서 하나의 데이터셋으로 만드는 과정을 기술하려고 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1-concatening-along-with-an-axis&#34;&gt;(1) Concatening along with an axis&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;첫번째 옵션으로 지금까지 진행한 방법으로 &lt;code&gt;axis&lt;/code&gt;를 활용한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;dfSE &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;concat([df1SE, df2SE], ignore_index&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True)
dfML &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;concat([df1ML, df2ML], ignore_index&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True)

data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;concat([dfML, dfSE], axis&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(data&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;tail(&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;    StudentID  ScoreML  StudentID  ScoreSE
16        4.0     44.0         12       56
17        6.0     78.0         14       31
18        8.0     97.0         16       53
19       10.0     87.0         18       78
20       12.0     89.0         20       93
21       14.0     39.0         22       56
22       16.0     43.0         24       77
23       18.0     88.0         26       33
24       20.0     78.0         28       56
25        NaN      NaN         30       27
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;먼저, &lt;code&gt;SE&lt;/code&gt;데이터끼리 합치고, 그 다음에는 &lt;code&gt;ML&lt;/code&gt;데이터끼리 조합을 했다.&lt;/li&gt;
&lt;li&gt;그 후에 &lt;code&gt;axis=1&lt;/code&gt; 인수를 추가하여 &lt;code&gt;side by side&lt;/code&gt; 데이터를 조합 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-using-dfmerge-with-an-inner-join&#34;&gt;(2) Using df.merge with an inner join&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;이번에는 &lt;code&gt;merge()&lt;/code&gt;를 활용하자.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;merge_data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dfSE&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;merge(dfML, how&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;inner&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(merge_data)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;    StudentID  ScoreSE  ScoreML
0           9       22       52
1          11       66       86
2          13       31       41
3          15       51       77
4          17       71       73
5          19       91       51
6          21       56       86
7          23       32       82
8          25       52       92
9          27       73       23
10         29       92       49
11          2       98       93
12          4       93       44
13          6       44       78
14          8       77       97
15         10       69       87
16         12       56       89
17         14       31       39
18         16       53       43
19         18       78       88
20         20       93       78
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;위 코드에서 알 수 있는 것은 &lt;code&gt;SE&lt;/code&gt; 코스와 &lt;code&gt;ML&lt;/code&gt;코스를 두개 모두 수강한 학생 기록을 알 수 있다. (총 21명)&lt;/li&gt;
&lt;li&gt;그 외에도 &lt;code&gt;join&lt;/code&gt;의 여러가지 유형이 있다.
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;inner join&lt;/code&gt; - 내부 조인은 둘 이상의 데이터 프레임에서 교차점을 취한다. 구조화 질의 언어(SQL)의 INER JOIN에 해당한다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;outer join&lt;/code&gt; - 외부 조인은 둘 이상의 데이터 프레임에서 결합을 가져온다. SQL의 FULL OUTER JOIN에 해당한다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;left join&lt;/code&gt; - 왼쪽 조인은 왼쪽 데이터 프레임의 키만 사용한다. SQL의 왼쪽 외부 조인에 해당한다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;right join&lt;/code&gt; - 오른쪽 조인(join)은 오른쪽 데이터 프레임의 키만 사용하며, SQL의 Right OUTER JOIN과 유사하다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-merging-on-index&#34;&gt;(3) Merging on index&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;데이터 프레임의 병합키는 데이터 프레임의 인덱스에 위치한다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;left_index=True&lt;/code&gt; 또는 &lt;code&gt;right_index=True&lt;/code&gt;를 지정하면 각 데이터 프레임의 &lt;code&gt;index&lt;/code&gt;를 병합 키로 활용한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;left1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataFrame({&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;key&amp;#39;&lt;/span&gt;: [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;apple&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ball&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;apple&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;apple&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ball&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;cat&amp;#39;&lt;/span&gt;], &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;: range(&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;)})
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(left1)

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;     key  value
0  apple      0
1   ball      1
2  apple      2
3  apple      3
4   ball      4
5    cat      5
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;right1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataFrame({&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;group_val&amp;#39;&lt;/span&gt;: [&lt;span style=&#34;color:#ae81ff&#34;&gt;33.4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;]}, index&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;apple&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ball&amp;#39;&lt;/span&gt;])
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(right1)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;       group_val
apple       33.4
ball         5.0
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;위 2개의 데이터에서 &lt;code&gt;right1&lt;/code&gt; 데이터셋의 인덱스는 &lt;code&gt;apple &amp;amp; ball&lt;/code&gt;이다.&lt;/li&gt;
&lt;li&gt;이 때, &lt;code&gt;right1&lt;/code&gt;의 데이터를 병합키로 활용하려면 &lt;code&gt;right_index=True&lt;/code&gt;를 해주면 된다.&lt;/li&gt;
&lt;li&gt;반면에, &lt;code&gt;left1&lt;/code&gt;의 데이터에서 병합키는 &lt;code&gt;key&lt;/code&gt;값이다. 이 때에는 &lt;code&gt;left_on=&#39;key&#39;&lt;/code&gt;라고 지정해주면 된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;df &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;merge(left1, right1, left_on&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;key&amp;#39;&lt;/span&gt;, right_index&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(df)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;     key  value  group_val
0  apple      0       33.4
2  apple      2       33.4
3  apple      3       33.4
1   ball      1        5.0
4   ball      4        5.0
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;이 때, 만약에 위에서 배운 &lt;code&gt;join&lt;/code&gt; 유형을 지정하게 되면 지정값에 따라 데이터는 다르게 병합된다.&lt;/li&gt;
&lt;li&gt;간단한 예로 &lt;code&gt;outer join&lt;/code&gt;을 시도하자.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;df &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;merge(left1, right1, left_on&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;key&amp;#39;&lt;/span&gt;, right_index&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True, how&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;outer&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(df)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;     key  value  group_val
0  apple      0       33.4
2  apple      2       33.4
3  apple      3       33.4
1   ball      1        5.0
4   ball      4        5.0
5    cat      5        NaN
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;처음에 시도했을 때 나타나지 않았던 &lt;code&gt;cat&lt;/code&gt;값이 등장한 것을 확인할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;vi-reference&#34;&gt;VI. Reference&lt;/h2&gt;
&lt;p&gt;Piepenbreier, N. (2020, April 16). Automate Your (Boring!) Excel Reporting with Python!. Retrieved from &lt;a href=&#34;https://towardsdatascience.com/automate-excel-reporting-with-python-233dd61fb0f2&#34;&gt;https://towardsdatascience.com/automate-excel-reporting-with-python-233dd61fb0f2&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>