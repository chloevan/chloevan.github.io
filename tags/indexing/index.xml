<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Indexing on Data Science | ChloEvan</title>
    <link>https://chloevan.github.io/tags/indexing/</link>
    <description>Recent content in Indexing on Data Science | ChloEvan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 26 Apr 2020 16:10:15 +0900</lastBuildDate>
    
        <atom:link href="https://chloevan.github.io/tags/indexing/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>More on Vectors and Indexing</title>
      <link>https://chloevan.github.io/r/basics/more_vectors_indexing/</link>
      <pubDate>Sun, 26 Apr 2020 16:10:15 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/basics/more_vectors_indexing/</guid>
      <description>&lt;h2 id=&#34;공지&#34;&gt;공지&lt;/h2&gt;
&lt;p&gt;본 Tutorial은 강사에게 강의를 듣는 과거-현재-미래 학생들을 위해 작성하였습니다.&lt;/p&gt;
&lt;p&gt;이 글을 읽어주시는 분들에게 작은 도움이 되기를 바랍니다.&lt;/p&gt;
&lt;h2 id=&#34;i-벡터&#34;&gt;I. 벡터&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;본 포스트는 프로그래밍과 R을 처음 배우는 사람을 위해 작성하였습니다. 짧게 읽어두시기를 바랍니다. 공부하실 때는 복잡하게 생각하지는 마시기를 바랍니다. 영어의 기본단어 및 문법을 배우듯이 그냥 받아들이시기를 바랍니다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;현재 진행중인 R 기초문법은 아래와 같습니다. 원하시는 것은 참조해서 가볍게 공부하시기를 바랍니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://chloevan.github.io/r/basics/basic_objects_vector/&#34;&gt;Basic Objects - Vector&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;벡터(&lt;code&gt;Vector&lt;/code&gt;). R에서 다루는 가장 작은 단위값의 데이터다. 1차원으로 구성이 되어 있다.&lt;/p&gt;
&lt;h3 id=&#34;1-다양한-방식의-벡터-생성&#34;&gt;(1) 다양한 방식의 벡터 생성&lt;/h3&gt;
&lt;p&gt;벡터는 같은 종류의 값으로 구성되어야 함을 배웠다. 그런데, 벡터 생성은 다양한 방식으로 구성될 수 있다.&lt;/p&gt;
&lt;p&gt;데이터분석을 할 때 자주 쓰는 건 아니다. 보통은 주로 데이터 전처리와 시각화, 그리고 각종 통계 분석을 해석 하면서 시간을 보낸다.그런데, 가끔 필요할 때가 있다.&lt;/p&gt;
&lt;p&gt;간단하게 데이터를 만들어 시뮬레이션을 진행할 때다. 이럴 때 기초문법을 알고 있으면 데이터가 없어도 매우 쉽게 데이터를 만들수가 있다.&lt;/p&gt;
&lt;p&gt;코드로 넘어가보자.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;xSeq &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt;(xSeq)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;##  [1]  1  2  3  4  5  6  7  8  9 10
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;원래대로라면, &lt;code&gt;xSeq &amp;lt;- c(1,2,3...,10)&lt;/code&gt; 이런 형태로 코드가 작성되어야 하지만, 매우 간단하게 작성된 것을 볼 수 있다. 이 문법에 기초해서 10을 살짝 변형해보자.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;xMul &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;
xPar &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;)
&lt;span style=&#34;color:#a6e22e&#34;&gt;message&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;cat&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;The result of x1:5*4: &amp;#34;&lt;/span&gt;, xMul))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## The result of x1:5*4:  4 8 12 16 20
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;message&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;cat&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;The result of xPar: &amp;#34;&lt;/span&gt;, xPar))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## The result of xPar:  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이렇게 &lt;code&gt;()&lt;/code&gt;을 추가해서 숫자형 벡터를 원하는 길이만큼 늘려서 생성할 수 있다.&lt;/p&gt;
&lt;p&gt;이러한 문법을 영어로는 &lt;code&gt;sequence&lt;/code&gt;라고 부른다. 그런데, &lt;code&gt;sequence&lt;/code&gt;문법을 통해서 인덱싱도 할 수 있다.&lt;/p&gt;
&lt;h3 id=&#34;2-indexing-with-sequence&#34;&gt;(2) Indexing with Sequence&lt;/h3&gt;
&lt;p&gt;먼저 코드부터 확인해보자.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;myStart &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
xPar[myStart&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;(myStart&lt;span style=&#34;color:#ae81ff&#34;&gt;+7&lt;/span&gt;)]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## [1]  3  4  5  6  7  8  9 10
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;1:20&lt;/code&gt;을 담고있는 &lt;code&gt;xPar&lt;/code&gt; 벡터에, &lt;code&gt;[myStart:(myStart+7)]&lt;/code&gt; 범위를 지정해서, 그 범위에 해당하는 값만 반환하도록 하는 문법이다.&lt;/p&gt;
&lt;p&gt;이 부분은 꼭 한번 실습 하는 것을 권한다.&lt;/p&gt;
&lt;h3 id=&#34;3-seq--req&#34;&gt;(3) seq() &amp;amp; req()&lt;/h3&gt;
&lt;p&gt;지금까지 배운 것은 &lt;code&gt;sequence&lt;/code&gt; 벡터 생성에 관한 것을 배웠다. 그런데, 만약 규칙을 통해서 생성하고 싶다면 어떻게 할까? 사용자 정의 함수를 만들수도 있지만, R에서는 웬만한 건 다 함수로 제공한다.&lt;/p&gt;
&lt;p&gt;함수는 일종의 단어와 같다. 단어의 개수를 얼마만큼 많이 아느냐에 따라 외국어 실력이 나오듯이, 기초 함수 사용법은 많이 외우면 외울수록 좋다.&lt;/p&gt;
&lt;p&gt;코드를 보자.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;xSeq &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;seq&lt;/span&gt;(from &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;-5&lt;/span&gt;, to &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;28&lt;/span&gt;, by &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)
&lt;span style=&#34;color:#a6e22e&#34;&gt;message&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;cat&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;The result of xSeq: &amp;#34;&lt;/span&gt;, xSeq))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## The result of xSeq:  -5 -2 1 4 7 10 13 16 19 22 25 28
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;문법이 어렵지는 않을 것이다. 시작점과 끝점이 있고, 단위를 3번 건너뛰어서 출력하도록 하는 것이다.&lt;/p&gt;
&lt;p&gt;이번에는 &lt;code&gt;rep()&lt;/code&gt;함수를 사용해보자. &lt;code&gt;rep&lt;/code&gt;는 &lt;code&gt;replicate(복제하다)&lt;/code&gt;는 뜻을 가지고 있는데, 특정 숫자열이 반복해서 나타나도록 한다. 코드를 보면 쉽게 이해가 갈 것이다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;xRep &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rep&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;), each &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)
&lt;span style=&#34;color:#a6e22e&#34;&gt;message&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;cat&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;The result of xRep: &amp;#34;&lt;/span&gt;, xRep))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## The result of xRep:  1 1 1 2 2 2 3 3 3
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;만약에 각 함수에 대해 조금 구체적으로 알고 싶다면, 다음과 같이 입력하고 실행해본다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;help&lt;/span&gt;(rep) &lt;span style=&#34;color:#75715e&#34;&gt;# 방법 1&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;rep      &lt;span style=&#34;color:#75715e&#34;&gt;# 방법 2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;지금까지 벡터의 기본에 대해 배웠다. 다음시간에는 벡터내에 존재하는 결측치 = &lt;code&gt;NA&lt;/code&gt; 처리 방법에 대해 학습하도록 한다.&lt;/p&gt;
&lt;h2 id=&#34;2-reference&#34;&gt;2. Reference&lt;/h2&gt;
&lt;p&gt;Chapman, C., &amp;amp; Feit, E. M. D. (2015). R for marketing research and analytics. Cham: Springer.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Basic Objects - Vector</title>
      <link>https://chloevan.github.io/r/basics/basic_objects_vector/</link>
      <pubDate>Sat, 25 Apr 2020 18:38:15 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/basics/basic_objects_vector/</guid>
      <description>&lt;h2 id=&#34;공지&#34;&gt;공지&lt;/h2&gt;
&lt;p&gt;본 Tutorial은 강사에게 강의를 듣는 과거-현재-미래 학생들을 위해 작성하였습니다.&lt;/p&gt;
&lt;p&gt;이 글을 읽어주시는 분들에게 작은 도움이 되기를 바랍니다.&lt;/p&gt;
&lt;h2 id=&#34;i-벡터&#34;&gt;I. 벡터&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;본 포스트는 프로그래밍과 R을 처음 배우는 사람을 위해 작성하였습니다. 짧게 읽어두시기를 바랍니다. 공부하실 때는 복잡하게 생각하지는 마시기를 바랍니다. 영어의 기본단어 및 문법을 배우듯이 그냥 받아들이시기를 바랍니다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;벡터(&lt;code&gt;Vector&lt;/code&gt;). R에서 다루는 가장 작은 단위값의 데이터다. 1차원으로 구성이 되어 있다.&lt;/p&gt;
&lt;h3 id=&#34;1-4가지-벡터&#34;&gt;(1) 4가지 벡터&lt;/h3&gt;
&lt;p&gt;크게 4가지의 벡터가 존재한다. 간단하게 코드를 작성해보자.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;xNum &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3.14&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;)
xLog &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;)
xChar &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;가&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;나&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;B&amp;#34;&lt;/span&gt;)
xMix &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello R!&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;이렇게 작성한 코드는 실행한다. 실행할 때, 윈도우 사용자는 &lt;code&gt;Ctrl + Enter&lt;/code&gt;,  Mac사용자는 &lt;code&gt;Command + Enter&lt;/code&gt;를 사용한다.&lt;/p&gt;
&lt;p&gt;이렇게 크게 4개의 유형으로 정리할 수 있다. 이를 출력하는 방법은 크게 2가지다. &lt;code&gt;print(xNum)&lt;/code&gt; 또는 &lt;code&gt;xNum&lt;/code&gt;. 결과값을 확인하는데, 지금은 어떠한 방법으로 사용해도 무관하지만, &lt;code&gt;print(xNum)&lt;/code&gt;으로 습관을 가져가는 걸 추천한다. If-else, For-loop 문을 사용할 때 매우 유용하다.&lt;/p&gt;
&lt;p&gt;그럼 &lt;code&gt;print(xNum)&lt;/code&gt;을 실행하여 결과값을 확인해보자.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt;(xNum)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## [1] 1.00 3.14 5.00 7.00
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이번에는 &lt;code&gt;xNum&lt;/code&gt;을 실행해보자.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;xNum
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## [1] 1.00 3.14 5.00 7.00
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;보시다시피, 결과값의 큰 차이는 없다. xLog, xChar도 동일하게 실행하본다.&lt;/p&gt;
&lt;h3 id=&#34;2-벡터-추가-append&#34;&gt;(2) 벡터 추가 (Append)&lt;/h3&gt;
&lt;p&gt;벡터 추가하는 방법을 배워보자. 어려운 건 아니다. 자유자재로 벡터를 추가할 수 있다. 이 때 주의해야 하는 것은 동일 성질의 값을 입력해야 한다.&lt;/p&gt;
&lt;p&gt;문자는 문자열끼리, 숫자는 숫자열끼리, 안 그러면 데이터가 &lt;code&gt;Mix&lt;/code&gt;가 된다. 이 때 &lt;code&gt;print&lt;/code&gt;가 아닌 출력할 때는 &lt;code&gt;message&lt;/code&gt; + &lt;code&gt;cat&lt;/code&gt; 함수를 활용해 본다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;x &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;)
x2 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(x, x)
x3 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(x2, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)
&lt;span style=&#34;color:#a6e22e&#34;&gt;message&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;cat&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Current x: &amp;#34;&lt;/span&gt;, x))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## Current x:  2 4 6 8
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;message&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;cat&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Current x2: &amp;#34;&lt;/span&gt;, x2))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## Current x2:  2 4 6 8 2 4 6 8
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;message&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;cat&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Current x3: &amp;#34;&lt;/span&gt;, x3))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## Current x3:  2 4 6 8 2 4 6 8 10
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이렇게 추가할 수 있다.&lt;/p&gt;
&lt;h3 id=&#34;3-데이터-요약-summary&#34;&gt;(3) 데이터 요약 summary()&lt;/h3&gt;
&lt;p&gt;각각의 벡터는 일종의 정보라고 생각해야 한다. 벡터 1개를 가지고도 매우 쉽게 다양한 분석을 할 수 있다. 이것이 &lt;code&gt;R&lt;/code&gt;의 장점이기도 하다. 이 때 쉽게 데이터를 요약하는 함수가 &lt;code&gt;summary()&lt;/code&gt;이다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;summary&lt;/span&gt;(xNum)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
##   1.000   2.605   4.070   4.035   5.500   7.000
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;4개의 데이터에서도 값이 출력된다. 문자열과 논리형 벡터는 어떨까?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;먼저 문자열을 보자&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;summary&lt;/span&gt;(xChar)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;##    Length     Class      Mode 
##         4 character character
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;간단하게 Length 즉 여기서는 벡터 내에 존재하는 문자열 개수를 표현한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;논리형은 어떻게 출력될까?&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;summary&lt;/span&gt;(xLog)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;##    Mode   FALSE    TRUE 
## logical       2       2
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이렇게 각 값의 따라 갯수로 출력되는 걸 볼 수 있다.&lt;/p&gt;
&lt;h3 id=&#34;4-벡터의-length-확인&#34;&gt;(4) 벡터의 length 확인&lt;/h3&gt;
&lt;p&gt;length는 일종의 데이터프레임에서 행의 개수와도 같다. 빠르게 확인해보자.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;(xNum)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## [1] 4
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;5-xmix-데이터는-어떻게-변할까&#34;&gt;(5) xMix 데이터는 어떻게 변할까?&lt;/h3&gt;
&lt;p&gt;아직까지 다루지 않은 내용에 대해 다룬다. 이러한 데이터는 데이터셋의 크기가 매우커서 전체를 확인하지 못할 때 종종 마주칠 수 있다. 데이터 입력값의 오류인데, 이러한 오류를 인지하지 못하면 분석은 원하는대로 가지 못하고 우왕좌왕 할 때가 많다.&lt;/p&gt;
&lt;p&gt;특히, 엑셀 데이터를 수집해서 하는 분석은 이러한 데이터 &lt;code&gt;Mix&lt;/code&gt;가 종종 일어나니, 꼭 주의해야 하는 경우다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt;(xMix)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;1&amp;quot;        &amp;quot;TRUE&amp;quot;     &amp;quot;Hello R!&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;각각의 값이 쌍따옴표 &lt;code&gt;&amp;quot;값&amp;quot;&lt;/code&gt;이 붙어있는 것을 봐서는 문자열로 변했다. 이상하지 않은가? 원래 의도한 입력값은 숫자형이었기 때문이다.&lt;/p&gt;
&lt;p&gt;그런데, 만약 이 때 &lt;code&gt;1&lt;/code&gt;에 1을 더해서 2로 바꾸고 싶다면 어떻게 해야할까?&lt;/p&gt;
&lt;h3 id=&#34;6-인덱싱과-형변환&#34;&gt;(6) 인덱싱과 형변환&lt;/h3&gt;
&lt;p&gt;인덱싱은 일종의 각 요소에 대해 접근하는 방법이다. 어려운 건 아니다. 우선 1에 접근을 해보자.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;xMix[1]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;1&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;xMin[접근하고 싶은 위치의 숫자]&lt;/code&gt;를 입력하면 원하는 데이터를 확보할 수 있다. 그럼, 이제 데이터 타입을 변환해서 숫자형으로 바꿔본다. 이것 역시 어떤 함수가 쓰이는지 확인하는 것으로 이해하기를 바란다. 이 때에는 &lt;code&gt;왜, 이 함수를 쓰는가?&lt;/code&gt; 보다는, &lt;code&gt;아, 이 함수를 쓰면 바뀌는구나&lt;/code&gt; 것으로 이해하기를 바란다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.numeric&lt;/span&gt;(xMix[1])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## [1] 1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;보시다시피 &lt;code&gt;1&lt;/code&gt;사이에 쌍따옴표가 사라졌다. 이제 1을 더해본다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.numeric&lt;/span&gt;(xMix[1]) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## [1] 2
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;바뀌었다. 이제 바뀐 값을 적용하면 된다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;xMix[1] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.numeric&lt;/span&gt;(xMix[1]) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt;(xMix)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;2&amp;quot;        &amp;quot;TRUE&amp;quot;     &amp;quot;Hello R!&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;2&lt;/code&gt;로 바뀐 것을 확인할 수 있다.&lt;/p&gt;
&lt;h2 id=&#34;2-reference&#34;&gt;2. Reference&lt;/h2&gt;
&lt;p&gt;Chapman, C., &amp;amp; Feit, E. M. D. (2015). R for marketing research and analytics. Cham: Springer.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>