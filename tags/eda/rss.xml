<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>EDA on Data Science | ChloEvan</title>
    <link>https://chloevan.github.io/tags/eda/</link>
    <description>Recent content in EDA on Data Science | ChloEvan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 01 Jun 2020 18:15:47 +0900</lastBuildDate>
    
        <atom:link href="https://chloevan.github.io/tags/eda/rss.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>EDA with Python - Pandas</title>
      <link>https://chloevan.github.io/python/python_edu/01_basic/chapter_1_3_eda_with_pandas/</link>
      <pubDate>Mon, 01 Jun 2020 18:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/01_basic/chapter_1_3_eda_with_pandas/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/python_edu/02_datatransformation/pandas_logo.png#center&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;i-개요&#34;&gt;I. 개요&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Pandas&lt;/code&gt;는 &lt;code&gt;panel data&lt;/code&gt;의 의미를 가지고 있다.&lt;/li&gt;
&lt;li&gt;흔히, 엑셀 데이터로 불리우는 &lt;code&gt;관계형(Relational)&lt;/code&gt; 또는 &lt;code&gt;레이블링된(Labeling)&lt;/code&gt;된 데이터를 보다 쉽게, 직관적으로 작업할 수 있도록 설계되어 있다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Python&lt;/code&gt;에서 데이터 분석을 수행하기 위한 매우 기초적이며 높은 수준의 문법을 제공한다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Pandas&lt;/code&gt;는 크게 &lt;code&gt;Series&lt;/code&gt; &amp;amp; &lt;code&gt;DataFrame&lt;/code&gt;을 다룰 수 있도록 기초 문법을 제공하고 있다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Pandas&lt;/code&gt;가 다루는 여러 종류의 데이터를 확인해보자.
&lt;ul&gt;
&lt;li&gt;SQL 테이블 또는 Excel 스프레드시트에서와 같이 형식의 행과 열이 있는 표 형식 데이터&lt;/li&gt;
&lt;li&gt;순서 및 순서 지정되지 않은(고정 빈도일 필요는 없음) 시계열 데이터.&lt;/li&gt;
&lt;li&gt;행 및 열 레이블이 있는 임의 행렬 데이터(동일하게 입력 또는 이기종)&lt;/li&gt;
&lt;li&gt;기타 형태의 관측/통계 데이터 세트&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ii-모듈-import&#34;&gt;II. 모듈 Import&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;패키지 설치방법은 &lt;a href=&#34;https://pandas.pydata.org/pandas-docs/stable/getting_started/install.html&#34;&gt;설치 문서&lt;/a&gt;를 확인한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;import pandas as pd
print(pd.__version__)
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;1.0.3
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;iii-pandas-기본-활용법&#34;&gt;III. Pandas 기본 활용법&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Pandas&lt;/code&gt;가 제공하는 다양한 기능은 다음과 같지만, 본 튜토리얼에서는 &lt;code&gt;Sample&lt;/code&gt; 위주로 다루도록 한다.
&lt;ul&gt;
&lt;li&gt;부동 소수점 데이터뿐만 아니라 부동 소수점 데이터에서도 결측 데이터(NaN으로 표시됨)를 쉽게 처리함&lt;/li&gt;
&lt;li&gt;크기 변이성: DataFrame 및 고차원 객체에서 열을 삽입 및 삭제 가능&lt;/li&gt;
&lt;li&gt;자동 및 명시적 데이터 정렬: 객체를 라벨 집합에 명시적으로 정렬하거나, 사용자가 라벨을 무시하고 &lt;code&gt;Series&lt;/code&gt;, &lt;code&gt;DataFrame&lt;/code&gt; 등이 자동으로 데이터를 계산에서 정렬 가능&lt;/li&gt;
&lt;li&gt;데이터 집합에서 데이터 집합의 분할 적용 결합 작업을 수행할 수 있는 기능&lt;/li&gt;
&lt;li&gt;다른 &lt;code&gt;Python&lt;/code&gt; 및 &lt;code&gt;NumPy&lt;/code&gt; 데이터 구조에서 색인이 다른 데이터를 &lt;code&gt;DataFrame&lt;/code&gt; 개체로 쉽게 변환&lt;/li&gt;
&lt;li&gt;지능형 라벨 기반 슬라이싱, 고급 인덱싱 및 대용량 데이터 세트 부분 집합 취하기&lt;/li&gt;
&lt;li&gt;직관적인 데이터 세트 병합 및 결합&lt;/li&gt;
&lt;li&gt;유연한 데이터 세트 재구성 및 피벗테이블 구성&lt;/li&gt;
&lt;li&gt;축의 계층적 라벨링(눈금당 여러 개의 라벨을 가질 수 있음)&lt;/li&gt;
&lt;li&gt;플랫 파일(CSV 및 구분), Excel 파일, 데이터베이스 로딩 및 초고속 HDF5 형식의 데이터 저장/로딩에 사용되는 강력한 데이터 IO 도구&lt;/li&gt;
&lt;li&gt;시계열별 기능: 날짜 범위 생성 및 주파수 변환, 이동 창 통계, 날짜 이동 및 지연.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;iv-pandas-sample-tutorial&#34;&gt;IV. Pandas Sample Tutorial&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;간단하게 &lt;code&gt;Pandas&lt;/code&gt;를 활용한 &lt;code&gt;Tutorial&lt;/code&gt;을 확인해보자.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1-파라미터-세팅&#34;&gt;(1) 파라미터 세팅&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;먼저, 행과 열을 최대 출력하는 개수를 지정한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;pd.set_option(&#39;display.max_columns&#39;, 500)
pd.set_option(&#39;display.max_rows&#39;, 500)
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;2-데이터-생성&#34;&gt;(2) 데이터 생성&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;데이터를 생성하는 방법은 크게 2가지로 구분된다. (&lt;code&gt;Series&lt;/code&gt;, &lt;code&gt;DataFrame&lt;/code&gt;)
&lt;img src=&#34;https://chloevan.github.io/img/python_edu/01_basic/series_dataframe.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt;
&lt;li&gt;먼저 &lt;code&gt;Series&lt;/code&gt;를 만들어보자.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;temp_series = pd.Series([1,2,3,5,8,13,21])
print(temp_series)
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;0     1
1     2
2     3
3     5
4     8
5    13
6    21
dtype: int64
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;이제 &lt;code&gt;Series&lt;/code&gt;에 있는 데이터와 함께 &lt;code&gt;DataFrame&lt;/code&gt;을 만든다.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;series_df = pd.DataFrame({
    &amp;quot;No&amp;quot;:range(1,5), 
    &amp;quot;날짜&amp;quot;:pd.Timestamp(&#39;20200601&#39;), 
    &amp;quot;출석점수&amp;quot;:pd.Series(5, index=list(range(4)), dtype=&#39;float64&#39;), 
    &amp;quot;등급&amp;quot;:pd.Categorical([&amp;quot;A등급&amp;quot;, &amp;quot;B등급&amp;quot;, &amp;quot;C등급&amp;quot;, &amp;quot;D등급&amp;quot;]), 
    &amp;quot;구분&amp;quot;:&amp;quot;학점&amp;quot;
})

print(series_df)
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;   No         날짜  출석점수   등급  구분
0   1 2020-06-01   5.0  A등급  학점
1   2 2020-06-01   5.0  B등급  학점
2   3 2020-06-01   5.0  C등급  학점
3   4 2020-06-01   5.0  D등급  학점
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;이번에는 딕셔너리에서 데이터프레임으로 변환하는 소스코드다.&lt;/li&gt;
&lt;li&gt;아래 코드에서 보여주고자 하는 것은 딕셔너리의 크기가 동일하지 않아도, 데이터프레임으로 변환되는데 문제가 없다.&lt;/li&gt;
&lt;li&gt;다만, &lt;code&gt;NaN&lt;/code&gt;으로 채울 뿐이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;dict_df = [{&#39;가&#39;: &#39;사과&#39;, &#39;나&#39;: &#39;볼&#39;},{&#39;가&#39;: &#39;비행기&#39;, &#39;나&#39;: &#39;방망이&#39;, &#39;다&#39;: &#39;고양이&#39;}]
dict_df = pd.DataFrame(dict_df)
print(dict_df)
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;     가    나    다
0   사과    볼  NaN
1  비행기  방망이  고양이
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;이번에는 배열에서 데이터프레임으로 변환하는 소스코드다.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;sdf = {
    &#39;국가&#39;:[&#39;한국&#39;, &#39;미국&#39;, &#39;일본&#39;],
    &#39;ISO-Code&#39;:[1,2,3],
    &#39;지역&#39;: [4180.69, 4917.94, 454.07,],
    &#39;위치&#39;: [&amp;quot;서울&amp;quot;, &amp;quot;LA&amp;quot;, &amp;quot;동경&amp;quot;]
    }
sdf = pd.DataFrame(sdf)
print(sdf)
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;   국가  ISO-Code       지역  위치
0  한국         1  4180.69  서울
1  미국         2  4917.94  LA
2  일본         3   454.07  동경
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;3-파일-입출력&#34;&gt;(3) 파일 입출력&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;외부 데이터의 파일 입출력에 대한 코드를 입력한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;url = &#39;http://archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.data&#39;
df = pd.read_csv(url)
print(df.head(2))
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;   39          State-gov   77516   Bachelors   13        Never-married  \
0  50   Self-emp-not-inc   83311   Bachelors   13   Married-civ-spouse   
1  38            Private  215646     HS-grad    9             Divorced   

         Adm-clerical   Not-in-family   White   Male   2174   0   40  \
0     Exec-managerial         Husband   White   Male      0   0   13   
1   Handlers-cleaners   Not-in-family   White   Male      0   0   40   

    United-States   &amp;lt;=50K  
0   United-States   &amp;lt;=50K  
1   United-States   &amp;lt;=50K  
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;컬럼명이 지정되지 않아 관측값이 컬럼명 위치에 있는 것을 확인할 수 있다.&lt;/li&gt;
&lt;li&gt;이 때에는 컬럼명을 먼저 저장한 뒤, 아래와 같은 코드로 실행하면 정상적으로 데이터프레임이 완성된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;columns = [&#39;age&#39;, &#39;workclass&#39;, &#39;fnlwgt&#39;, &#39;education&#39;, &#39;education_num&#39;, 
           &#39;marital_status&#39;, &#39;occupation&#39;, &#39;relationship&#39;, &#39;ethnicity&#39;, 
           &#39;gender&#39;,&#39;capital_gain&#39;,&#39;capital_loss&#39;,&#39;hours_per_week&#39;,&#39;country_of_origin&#39;,&#39;income&#39;]

df2 = pd.read_csv(url, names=columns)
print(df2.head(2))
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;   age          workclass  fnlwgt   education  education_num  \
0   39          State-gov   77516   Bachelors             13   
1   50   Self-emp-not-inc   83311   Bachelors             13   

        marital_status        occupation    relationship ethnicity gender  \
0        Never-married      Adm-clerical   Not-in-family     White   Male   
1   Married-civ-spouse   Exec-managerial         Husband     White   Male   

   capital_gain  capital_loss  hours_per_week country_of_origin  income  
0          2174             0              40     United-States   &amp;lt;=50K  
1             0             0              13     United-States   &amp;lt;=50K  
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;컬럼명에 대한 정보는 &lt;a href=&#34;https://archive.ics.uci.edu/ml/datasets/adult&#34;&gt;Adult Data Set&lt;/a&gt; 에서 참고한다.&lt;/li&gt;
&lt;li&gt;판다스를 배울 때 조금더 자세히 배우겠지만, &lt;code&gt;info()&lt;/code&gt; 함수를 사용하면 데이터의 일반적인 정보를 확인할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;print(df2.info())
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;class &#39;pandas.core.frame.DataFrame&#39;&amp;gt;
RangeIndex: 32561 entries, 0 to 32560
Data columns (total 15 columns):
 #   Column             Non-Null Count  Dtype 
---  ------             --------------  ----- 
 0   age                32561 non-null  int64 
 1   workclass          32561 non-null  object
 2   fnlwgt             32561 non-null  int64 
 3   education          32561 non-null  object
 4   education_num      32561 non-null  int64 
 5   marital_status     32561 non-null  object
 6   occupation         32561 non-null  object
 7   relationship       32561 non-null  object
 8   ethnicity          32561 non-null  object
 9   gender             32561 non-null  object
 10  capital_gain       32561 non-null  int64 
 11  capital_loss       32561 non-null  int64 
 12  hours_per_week     32561 non-null  int64 
 13  country_of_origin  32561 non-null  object
 14  income             32561 non-null  object
dtypes: int64(6), object(9)
memory usage: 3.7+ MB
None
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;v-결론&#34;&gt;V. 결론&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;간단하게 &lt;code&gt;Pandas&lt;/code&gt;를 활용한 데이터 생성 및 파일 입출력에 대해서 배우는 시간을 가졌다.&lt;/li&gt;
&lt;li&gt;만약, 빠르게 판다스를 활용하여 데이터 전처리를 연습 하고 싶다면, 공식홈페이지에 있는 &lt;a href=&#34;https://pandas.pydata.org/pandas-docs/stable/getting_started/10min.html&#34;&gt;10 minutes to pandas&lt;/a&gt;에서 학습하는 것을 권장한다.&lt;/li&gt;
&lt;li&gt;강사는 &lt;code&gt;Kaggle&lt;/code&gt; 데이터를 활용하여 &lt;code&gt;Pandas&lt;/code&gt; 함수를 응용할 것이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;
&lt;p&gt;Mukhiya, Suresh Kumar, and Usman Ahmed. “Hands-On Exploratory Data Analysis with Python.” Packt Publishing, Mar. 2020, &lt;a href=&#34;http://www.packtpub.com/data/hands-on-exploratory-data-analysis-with-python&#34;&gt;www.packtpub.com/data/hands-on-exploratory-data-analysis-with-python&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>EDA with Python - NumPy Broadcasting</title>
      <link>https://chloevan.github.io/python/python_edu/01_basic/chapter_1_2_eda_with_numpy_broadcasting/</link>
      <pubDate>Mon, 01 Jun 2020 13:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/01_basic/chapter_1_2_eda_with_numpy_broadcasting/</guid>
      <description>&lt;h2 id=&#34;공지&#34;&gt;공지&lt;/h2&gt;
&lt;p&gt;제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/python/basic_syntax/numpy.png#center&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;i-개요&#34;&gt;I. 개요&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;NumPy&lt;/code&gt;는 C언어로 구성되었으며, 고성능의 수치계산을 위해 나온 패키지이며, &lt;code&gt;Numerical Python&lt;/code&gt;의 약자이다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Python&lt;/code&gt;을 활용한 데이터 분석을 수행할 때, 그리고 데이터 시각화나 전처리를 수행할 때, &lt;code&gt;NumPy&lt;/code&gt;는 매우 자주 사용되기 때문에 한번쯤은 꼭 다듬고 가는 것이 중요하다.&lt;/li&gt;
&lt;li&gt;이전 포스트에서는 &lt;a href=&#34;https://chloevan.github.io/python/basic/numpy_array_creation/&#34;&gt;Python - NumPy 소개 및 다양한 객체 생성&lt;/a&gt;에 대해 다루었으니, 본 포스트 읽기에 앞서서 기본적인 개념에 대해 확인하기를 바란다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ii-모듈-import&#34;&gt;II. 모듈 Import&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;패키지 설치방법은 &lt;a href=&#34;https://pypi.org/project/numpy/&#34;&gt;설치 문서&lt;/a&gt;를 확인한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; numpy &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; np
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;__version__)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;1.18.4
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;iii-numpy-기본-활용법&#34;&gt;III. NumPy 기본 활용법&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;NumPy 객체 생성을 한 뒤에, 파일 저장, 서로 다른 배열끼리의 사칙연산 등을 수행할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1-numpy-객체-파일-저장-및-불러오기&#34;&gt;(1) NumPy 객체 파일 저장 및 불러오기&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;savetxt&lt;/code&gt;, &lt;code&gt;loadtxt&lt;/code&gt;, 그리고 &lt;code&gt;genfromtxt&lt;/code&gt; 함수를 활용하여 객체를 불러오는 예제를 실습한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 객체 생성 후 저장하기&lt;/span&gt;
x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;50.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(x)
np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;savetxt(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;data.out&amp;#39;&lt;/span&gt;, x, delimiter&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;,&amp;#39;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[ 0.  1.  2.  3.  4.  5.  6.  7.  8.  9. 10. 11. 12. 13. 14. 15. 16. 17.
 18. 19. 20. 21. 22. 23. 24. 25. 26. 27. 28. 29. 30. 31. 32. 33. 34. 35.
 36. 37. 38. 39. 40. 41. 42. 43. 44. 45. 46. 47. 48. 49.]
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;ls
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;data.out  sample_data
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;현재 폴더에 &lt;code&gt;data.out&lt;/code&gt; 파일이 생성된 것을 확인할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# `data.out` 불러오기&lt;/span&gt;
z &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;loadtxt(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;data.out&amp;#39;&lt;/span&gt;, unpack&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(z)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[ 0.  1.  2.  3.  4.  5.  6.  7.  8.  9. 10. 11. 12. 13. 14. 15. 16. 17.
 18. 19. 20. 21. 22. 23. 24. 25. 26. 27. 28. 29. 30. 31. 32. 33. 34. 35.
 36. 37. 38. 39. 40. 41. 42. 43. 44. 45. 46. 47. 48. 49.]
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;정상적으로 &lt;code&gt;data.out&lt;/code&gt;을 불러와서 &lt;code&gt;z&lt;/code&gt;객체에 저장된 것을 확인할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# genfromtxt 활용&lt;/span&gt;
my_array2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;genfromtxt(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;data.out&amp;#39;&lt;/span&gt;, 
                          skip_header&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, 
                          filling_values&lt;span style=&#34;color:#f92672&#34;&gt;=-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;999&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(my_array2)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[ 1.  2.  3.  4.  5.  6.  7.  8.  9. 10. 11. 12. 13. 14. 15. 16. 17. 18.
 19. 20. 21. 22. 23. 24. 25. 26. 27. 28. 29. 30. 31. 32. 33. 34. 35. 36.
 37. 38. 39. 40. 41. 42. 43. 44. 45. 46. 47. 48. 49.]
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;z&lt;/code&gt;객체와 마찬가지로 &lt;code&gt;my_array2&lt;/code&gt;도 객체가 정상적으로 생성된 것을 확인할 수 있다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;loadtxt&lt;/code&gt;와 &lt;code&gt;genfromtxt&lt;/code&gt;의 차이점이 있기는 하다. 결론부터 말하면, &lt;code&gt;genfromtxt&lt;/code&gt;가 다양한 옵션을 제공한다. 간단한 예를 들면, &lt;code&gt;genfromtxt&lt;/code&gt;의 경우 열들의 자료형을 자동으로 결정해주어 사용자들이 좀 더 편안하게 사용할 수 있도록 도와준다 (Clinton, 2016, p. 281-2).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-2차원-배열-inspection&#34;&gt;(2) 2차원 배열 Inspection&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ndim&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt;, &lt;code&gt;flags&lt;/code&gt;, &lt;code&gt;itemsize&lt;/code&gt;, &lt;code&gt;nbytes&lt;/code&gt;를 활용하여 배열의 정보를 획득한다.&lt;/li&gt;
&lt;li&gt;특히, 딥러닝 모형 정의 및 학습할 때, NumPy 배열 에러 등이 종종 발생하기 때문에 기본 개념은 학습하는 것을 추천한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;my2D_Array &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;array([[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;], [&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;], [&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;]])
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(my2D_Array)

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[[ 1  2  3  4]
 [ 2  4  6  8]
 [ 3  6  9 12]]
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# ndim&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(my2D_Array&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ndim)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;2
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# size (각 item의 개수를 의미)&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(my2D_Array&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;size)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;12
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 2차원 배열의 memory layout 확인 &lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(my2D_Array&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;flags)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;  C_CONTIGUOUS : True
  F_CONTIGUOUS : False
  OWNDATA : True
  WRITEABLE : True
  ALIGNED : True
  WRITEBACKIFCOPY : False
  UPDATEIFCOPY : False
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 1차원의 길이 in bytes (예. 숫자는 2bytes)&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(my2D_Array&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;itemsize)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;8
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 전체 bytes&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(my2D_Array&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;nbytes)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;96
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;iv-broadcasting브로드-캐스팅&#34;&gt;IV. Broadcasting(=브로드 캐스팅)&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/python/basic_syntax/broadcasting.png#center&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;개념 설명은 다음과 같다.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Broadcasting is a mechanism that permits NumPy to operate with arrays of different shapes when performing arithmetic operations:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;간단하게 해석하면 브로드캐스팅(Broadcasting)은 모양이 다른 배열들 간의 사칙연산도 가능하게끔 도와주는 일종의 &lt;code&gt;mechanism&lt;/code&gt;이다. 그런데, 여기에는 기본적인 &lt;code&gt;Rule&lt;/code&gt;이 있다.&lt;/p&gt;
&lt;h3 id=&#34;1-rule-1-eqaul-dimensions-between-a-and-b&#34;&gt;(1) Rule 1. Eqaul Dimensions between A and B&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;우선 모양이 같은 &lt;code&gt;A&lt;/code&gt;와 &lt;code&gt;B&lt;/code&gt; NumPy 객체를 생성한다.&lt;/li&gt;
&lt;li&gt;A + B를 연산하여 출력한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# A 객체&lt;/span&gt;
A &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ones((&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;))
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(A)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(A&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[[1. 1. 1.]
 [1. 1. 1.]
 [1. 1. 1.]
 [1. 1. 1.]
 [1. 1. 1.]]
(5, 3)
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# B 객체&lt;/span&gt;
B &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;random&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;random((&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;))
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(B)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(B&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[[0.13526155 0.07276429 0.25635867]
 [0.74909147 0.09515243 0.20379472]
 [0.33115034 0.13771662 0.61417221]
 [0.79164803 0.72754531 0.29071265]
 [0.36780642 0.50456743 0.19266307]]
(5, 3)
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(A&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;B)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[[1.13526155 1.07276429 1.25635867]
 [1.74909147 1.09515243 1.20379472]
 [1.33115034 1.13771662 1.61417221]
 [1.79164803 1.72754531 1.29071265]
 [1.36780642 1.50456743 1.19266307]]
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;정상적으로 덧셈이 연산된 것을 확인할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-rule-2-compatible-dimensions-when-one-of-them-is-1&#34;&gt;(2) Rule 2. Compatible Dimensions when one of them is 1&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;이번에는 X와 Y 객체를 생성하고 &lt;code&gt;shape&lt;/code&gt;를 통해 차원이 어떻게 다른지 확인한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ones((&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;))
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(x)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(x&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[[1. 1. 1. 1.]
 [1. 1. 1. 1.]
 [1. 1. 1. 1.]]
(3, 4)
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(y)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(y&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[0 1 2 3]
(4,)
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 뺄셈 연산 수행 (x-y)&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(x&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;y)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[[ 1.  0. -1. -2.]
 [ 1.  0. -1. -2.]
 [ 1.  0. -1. -2.]]
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;위 코드에서 중요한 것은 숫자 &lt;code&gt;4&lt;/code&gt;이다. 즉, 1차원 길이가 다르면 연산은 에러가 발생한다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;y&lt;/code&gt;의 숫자 &lt;code&gt;4&lt;/code&gt; 대신 &lt;code&gt;5&lt;/code&gt;를 대입해서 적용해보자.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ones((&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;))
y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(x&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;y)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;---------------------------------------------------------------------------

ValueError                                Traceback (most recent call last)

&amp;lt;ipython-input-33-d91ef8252b95&amp;gt; in &amp;lt;module&amp;gt;()
      1 x = np.ones((3,4))
      2 y = np.arange(5)
----&amp;gt; 3 print(x-y)


ValueError: operands could not be broadcast together with shapes (3,4) (5,) 
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;위 에러 문구(&lt;code&gt;operands could not be broadcast together with shapes (3,4) (5,)&lt;/code&gt;)에서 확인 할 수 있는 것처럼 1차원 길이가 다르면 에러가 발생한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-rule-3-compatitble-in-all-of-the-dimensions&#34;&gt;(3) Rule 3. Compatitble in all of the dimensions&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;이번에는 서로 다른 모양의 객체를 확인한다.&lt;/li&gt;
&lt;li&gt;그리고 덧셈을 수행해보자.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ones((&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;))
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(x)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(x&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[[1. 1. 1. 1. 1.]
 [1. 1. 1. 1. 1.]
 [1. 1. 1. 1. 1.]
 [1. 1. 1. 1. 1.]
 [1. 1. 1. 1. 1.]
 [1. 1. 1. 1. 1.]]
(6, 5)
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;random&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;random((&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;))
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(y)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(y&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[[[0.68586586 0.9179277  0.88033036 0.6306833  0.17327179]]

 [[0.21184583 0.28629664 0.00532677 0.49662726 0.73354008]]

 [[0.82677113 0.49873148 0.56901096 0.82320785 0.04587492]]]
(3, 1, 5)
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(x&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;y)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[[[1.68586586 1.9179277  1.88033036 1.6306833  1.17327179]
  [1.68586586 1.9179277  1.88033036 1.6306833  1.17327179]
  [1.68586586 1.9179277  1.88033036 1.6306833  1.17327179]
  [1.68586586 1.9179277  1.88033036 1.6306833  1.17327179]
  [1.68586586 1.9179277  1.88033036 1.6306833  1.17327179]
  [1.68586586 1.9179277  1.88033036 1.6306833  1.17327179]]

 [[1.21184583 1.28629664 1.00532677 1.49662726 1.73354008]
  [1.21184583 1.28629664 1.00532677 1.49662726 1.73354008]
  [1.21184583 1.28629664 1.00532677 1.49662726 1.73354008]
  [1.21184583 1.28629664 1.00532677 1.49662726 1.73354008]
  [1.21184583 1.28629664 1.00532677 1.49662726 1.73354008]
  [1.21184583 1.28629664 1.00532677 1.49662726 1.73354008]]

 [[1.82677113 1.49873148 1.56901096 1.82320785 1.04587492]
  [1.82677113 1.49873148 1.56901096 1.82320785 1.04587492]
  [1.82677113 1.49873148 1.56901096 1.82320785 1.04587492]
  [1.82677113 1.49873148 1.56901096 1.82320785 1.04587492]
  [1.82677113 1.49873148 1.56901096 1.82320785 1.04587492]
  [1.82677113 1.49873148 1.56901096 1.82320785 1.04587492]]]
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;만약에 여기에서 &lt;code&gt;y&lt;/code&gt; 값을 &lt;code&gt;(3,2,5)&lt;/code&gt; 또는 &lt;code&gt;(3,1,6)&lt;/code&gt;으로 바꾸면 어떻게 될까?&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;random&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;random((&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;))
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(y)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(y&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[[[0.95042186 0.52979398 0.30549682 0.93579665 0.03784094]
  [0.27023327 0.19952522 0.68376492 0.11982131 0.45394735]]

 [[0.69797278 0.85359121 0.01493669 0.06111047 0.25285451]
  [0.57293653 0.28453573 0.18296577 0.12696192 0.28530794]]

 [[0.75410798 0.88487199 0.78635143 0.05059668 0.48753369]
  [0.65395856 0.74907103 0.47013049 0.14938089 0.36961655]]]
(3, 2, 5)
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(x&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;y)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;---------------------------------------------------------------------------

ValueError                                Traceback (most recent call last)

&amp;lt;ipython-input-43-39cb3db33052&amp;gt; in &amp;lt;module&amp;gt;()
----&amp;gt; 1 print(x+y)


ValueError: operands could not be broadcast together with shapes (6,5) (3,2,5) 
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;에러가 나는 것을 확인할 수 있다.&lt;/li&gt;
&lt;li&gt;왜 에러가 날까? &lt;code&gt;x&lt;/code&gt;의 2차원 배열의 숫자가 앞에 6으로 되어 있기 때문이다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;y&lt;/code&gt;값은 그대로 놔둔채, x의 값 &lt;code&gt;6&lt;/code&gt; 대신 &lt;code&gt;2&lt;/code&gt;로 바꿔주고 덧셈을 하면 성공적으로 연산이 수행됨을 알 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ones((&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;))
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(x)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(x&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[[1. 1. 1. 1. 1.]
 [1. 1. 1. 1. 1.]]
(2, 5)
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(x&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;y)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[[[1.95042186 1.52979398 1.30549682 1.93579665 1.03784094]
  [1.27023327 1.19952522 1.68376492 1.11982131 1.45394735]]

 [[1.69797278 1.85359121 1.01493669 1.06111047 1.25285451]
  [1.57293653 1.28453573 1.18296577 1.12696192 1.28530794]]

 [[1.75410798 1.88487199 1.78635143 1.05059668 1.48753369]
  [1.65395856 1.74907103 1.47013049 1.14938089 1.36961655]]]
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;v-결론&#34;&gt;V. 결론&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;머신러닝 &amp;amp; 딥러닝을 수행할 때, &lt;code&gt;NumPy&lt;/code&gt;을 활용한 객체 생성은 매우 빈번하다.&lt;/li&gt;
&lt;li&gt;대부분은 서로 다른 차원으로 인해 연산 오류가 자주 발생하는데, 이 때 &lt;code&gt;Broadcasting&lt;/code&gt;의 개념을 알고 있으면 연산 오류를 줄일 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;
&lt;p&gt;Brownley, Clinton W. Foundations for Analytics with Python. O&amp;rsquo;Reilly Media, Inc., 2016.&lt;/p&gt;
&lt;p&gt;Mukhiya, Suresh Kumar, and Usman Ahmed. “Hands-On Exploratory Data Analysis with Python.” Packt Publishing, Mar. 2020, &lt;a href=&#34;http://www.packtpub.com/data/hands-on-exploratory-data-analysis-with-python&#34;&gt;www.packtpub.com/data/hands-on-exploratory-data-analysis-with-python&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>EDA with Python - NumPy basic</title>
      <link>https://chloevan.github.io/python/python_edu/01_basic/chapter_1_1_eda_with_numpy_basic/</link>
      <pubDate>Sun, 31 May 2020 13:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/01_basic/chapter_1_1_eda_with_numpy_basic/</guid>
      <description>&lt;h2 id=&#34;공지&#34;&gt;공지&lt;/h2&gt;
&lt;p&gt;제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/python/basic_syntax/numpy.png#center&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;i-개요&#34;&gt;I. 개요&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;파이썬 처음 입문하는 사람들을 위해서 작성하였다. &lt;code&gt;탐색작 자료분석(EDA: Exploratory Data Analysis)&lt;/code&gt;을 위해 가장 기초적인 뼈대가 되는 &lt;code&gt;NumPy&lt;/code&gt;에 대해서 학습하도록 합니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ii-array-만들기&#34;&gt;II. Array 만들기&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;1차원, 2차원, 3차원의 Array를 만들고 학습니다.&lt;/li&gt;
&lt;li&gt;먼저 &lt;code&gt;numpy&lt;/code&gt; 라이브러리를 불러옵니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# import numpy&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; numpy &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; np
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;__version__)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;1.18.4
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;현재 구글 코랩에서 제공하는 &lt;code&gt;numpy 버전&lt;/code&gt;은 1.18.4로 확인되고 있습니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1-1차원-array-만들기&#34;&gt;(1) 1차원 Array 만들기&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;1차원 Array를 만들어 봅시다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;my_1D_array &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;array([&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;])
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(my_1D_array)
type(my_1D_array)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[1 3 5 7]





numpy.ndarray
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;2-2차원-array-만들기&#34;&gt;(2) 2차원 Array 만들기&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;이번에는 2차원 Array를 만듭니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;my_2D_array &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;array([[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;], [&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;], [&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;]])
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(my_2D_array)
type(my_2D_array)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[[ 1  2  3  4]
 [ 2  4  9 16]
 [ 4  8 18 32]]





numpy.ndarray
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;3-3차원-array-만들기&#34;&gt;(3) 3차원 Array 만들기&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;이번에는 3차원 Array를 만듭니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;my_3D_array &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;array([[[ &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; , &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; , &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;],[ &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; , &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt; , &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt; ,&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;]], [[ &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;],[ &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;]]])
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(my_3D_array)
type(my_3D_array)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[[[ 1  2  3  4]
  [ 5  6  7  8]]

 [[ 1  2  3  4]
  [ 9 10 11 12]]]





numpy.ndarray
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;iii-array-information&#34;&gt;III. Array Information&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;실무에서는 데이터를 어떤 형태로 수집되는지 바로 판단하기가 어렵습니다.&lt;/li&gt;
&lt;li&gt;따라서, 수집받은 데이터를 다양한 방식으로 출력하여 정보를 알아가는 것이 좋습니다.&lt;/li&gt;
&lt;li&gt;대표적으로, ndim, shape, dtype을 통해서 확인합니다.
&lt;ul&gt;
&lt;li&gt;ndim은 배열의 차원수를 의미합니다.&lt;/li&gt;
&lt;li&gt;shape는 tuple의 index개수와 각 index가 보유하는 elements의 개수를 반환합니다.&lt;/li&gt;
&lt;li&gt;dtype는 각 게체의 데이터 타입을 표시합니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1-함수-작성&#34;&gt;(1) 함수 작성&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;저장된 1차원, 2차원, 3차원의 Array를 활용합니다.&lt;/li&gt;
&lt;li&gt;먼저, 빠르게 확인하기 위해 함수를 작성합니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;check_array_info&lt;/span&gt;(arr_obj): 
  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; isinstance(arr_obj, (np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ndarray)):
    &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;The current dimension is :&amp;#34;&lt;/span&gt;, arr_obj&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ndim)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;The current shape is :&amp;#34;&lt;/span&gt;, arr_obj&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;The current dtype is :&amp;#34;&lt;/span&gt;, arr_obj&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;dtype)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;The current value is :&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, arr_obj)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;1-1차원-array의-정보-확인&#34;&gt;(1) 1차원 Array의 정보 확인&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;이제 정보를 확인합니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;check_array_info(my_1D_array)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;The current dimension is : 1
The current shape is : (4,)
The current dtype is : int64
The current value is :
 [1 3 5 7]
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;1차원 shape의 경우에는 (4,)만 표시가 되었는데, 이는 요소의 개수만 출력됨을 의미합니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-2차원-array의-정보-확인&#34;&gt;(2) 2차원 Array의 정보 확인&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2차원 배열의 정보를 확인합니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;check_array_info(my_2D_array)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;The current dimension is : 2
The current shape is : (3, 4)
The current dtype is : int64
The current value is :
 [[ 1  2  3  4]
 [ 2  4  9 16]
 [ 4  8 18 32]]
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;3-3차원-array의-정보-확인&#34;&gt;(3) 3차원 Array의 정보 확인&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;3차원 배열의 정보를 확인합니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;check_array_info(my_3D_array)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;The current dimension is : 3
The current shape is : (2, 2, 4)
The current dtype is : int64
The current value is :
 [[[ 1  2  3  4]
  [ 5  6  7  8]]

 [[ 1  2  3  4]
  [ 9 10 11 12]]]
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;iv-creating-an-array&#34;&gt;IV. Creating An Array&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;이제 다양한 방식으로 NumPy를 작성해보자.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Array of ones&lt;/span&gt;
ones &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ones((&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;))
check_array_info(ones)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;The current dimension is : 2
The current shape is : (3, 4)
The current dtype is : float64
The current value is :
 [[1. 1. 1. 1.]
 [1. 1. 1. 1.]
 [1. 1. 1. 1.]]
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Array of zeros&lt;/span&gt;
zeros &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;zeros((&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;), dtype&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;int16)
check_array_info(zeros)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;The current dimension is : 3
The current shape is : (1, 2, 3)
The current dtype is : int16
The current value is :
 [[[0 0 0]
  [0 0 0]]]
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Array with random values&lt;/span&gt;
np_random &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;random&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;random((&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;))
check_array_info(np_random)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;The current dimension is : 2
The current shape is : (2, 2)
The current dtype is : float64
The current value is :
 [[0.47775118 0.60277821]
 [0.01818544 0.23499141]]
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Empty Array&lt;/span&gt;
empty_array &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;empty((&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;))
check_array_info(empty_array)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;The current dimension is : 2
The current shape is : (3, 2)
The current dtype is : float64
The current value is :
 [[2.31101775e-316 0.00000000e+000]
 [0.00000000e+000 0.00000000e+000]
 [0.00000000e+000 0.00000000e+000]]
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Full Array&lt;/span&gt;
full_array &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;full((&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;), &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;)
check_array_info(full_array)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;The current dimension is : 2
The current shape is : (2, 2)
The current dtype is : int64
The current value is :
 [[7 7]
 [7 7]]
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Array of evenly_spaced values&lt;/span&gt;
even_spaced_array &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;)
check_array_info(even_spaced_array)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;The current dimension is : 1
The current shape is : (3,)
The current dtype is : int64
The current value is :
 [10 15 20]
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;even_spaced_array2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;linspace(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;)
check_array_info(even_spaced_array2)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;The current dimension is : 1
The current shape is : (9,)
The current dtype is : float64
The current value is :
 [0.   0.25 0.5  0.75 1.   1.25 1.5  1.75 2.  ]
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;v-array의-메모리-체크&#34;&gt;V. Array의 메모리 체크&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;머신러닝과 딥러닝을 수행하려면 반드시 메모리 체크가 필수다.&lt;/li&gt;
&lt;li&gt;이 부분과 관련된 함수를 작성하여 기존에 저장된 1차원, 2차원, 3차원 배열의 객체를 출력하여 본다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1-함수-작성-1&#34;&gt;(1) 함수 작성&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;check_memory_info&lt;/code&gt;라는 함수를 만들어보자.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;check_memory_info&lt;/span&gt;(arr_obj): 
  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; isinstance(arr_obj, (np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ndarray)): 
    &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;The current size is :&amp;#34;&lt;/span&gt;, arr_obj&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;size)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;The current flags is :&amp;#34;&lt;/span&gt;, arr_obj&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;flags)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;The current itemzise is :&amp;#34;&lt;/span&gt;, arr_obj&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;itemsize)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;The current total consumed bytes is :&amp;#34;&lt;/span&gt;, arr_obj&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;nbytes)

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;size&lt;/code&gt;는 &lt;code&gt;element&lt;/code&gt;의 전체 개수를 의미한다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;flags&lt;/code&gt;는 &lt;code&gt;memory layout&lt;/code&gt;의 정보를 출력한다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;itemsize&lt;/code&gt;는 bytes 당 한 배열의 길이를 출력한다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nbytes&lt;/code&gt;는 객체가 소비하는 전체 bytes를 출력한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1-1차원-array의-메모리-정보-확인&#34;&gt;(1) 1차원 Array의 메모리 정보 확인&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;check_memory_info(my_1D_array)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;The current size is : 4
The current flags is :   C_CONTIGUOUS : True
  F_CONTIGUOUS : True
  OWNDATA : True
  WRITEABLE : True
  ALIGNED : True
  WRITEBACKIFCOPY : False
  UPDATEIFCOPY : False

The current itemzise is : 8
The current total consumed bytes is : 32
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;1-2차원-array의-메모리-정보-확인&#34;&gt;(1) 2차원 Array의 메모리 정보 확인&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;check_memory_info(my_2D_array)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;The current size is : 12
The current flags is :   C_CONTIGUOUS : True
  F_CONTIGUOUS : False
  OWNDATA : True
  WRITEABLE : True
  ALIGNED : True
  WRITEBACKIFCOPY : False
  UPDATEIFCOPY : False

The current itemzise is : 8
The current total consumed bytes is : 96
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;3-1차원-array의-메모리-정보-확인&#34;&gt;(3) 1차원 Array의 메모리 정보 확인&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;check_memory_info(my_3D_array)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;The current size is : 16
The current flags is :   C_CONTIGUOUS : True
  F_CONTIGUOUS : False
  OWNDATA : True
  WRITEABLE : True
  ALIGNED : True
  WRITEBACKIFCOPY : False
  UPDATEIFCOPY : False

The current itemzise is : 8
The current total consumed bytes is : 128
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;vi-결론&#34;&gt;VI. 결론&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;NumPy&lt;/code&gt;는 파이썬에서 다루는 데이터과학에서 다루는 매우 중요한 토대가 되는 라이브러이이다.&lt;/li&gt;
&lt;li&gt;간단하게 &lt;code&gt;NumPy&lt;/code&gt;를 활용한 배열에 대해 학습하였다.&lt;/li&gt;
&lt;li&gt;또한, &lt;code&gt;Array&lt;/code&gt;를 다양하게 만들어보고, &lt;code&gt;Array&lt;/code&gt;가 가지고 있는 다양한 정보를 확인할 수 있는 여러 함수에 대해 익히는 시간을 가졌다.&lt;/li&gt;
&lt;li&gt;그러나, 여기까지는 사실상 기초이고, 이제 배열의 연산에 대해 익히는 시간을 가져야 한다.&lt;/li&gt;
&lt;li&gt;다음 시간에 &lt;code&gt;Broadcasting&lt;/code&gt;이라는 기법을 학습할 것이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;
&lt;p&gt;Mukhiya, Suresh Kumar, and Usman Ahmed. “Hands-On Exploratory Data Analysis with Python.” Packt Publishing, Mar. 2020, &lt;a href=&#34;http://www.packtpub.com/data/hands-on-exploratory-data-analysis-with-python&#34;&gt;www.packtpub.com/data/hands-on-exploratory-data-analysis-with-python&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>