<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>판다스 엑셀 on Data Science | ChloEvan</title>
    <link>https://chloevan.github.io/tags/%ED%8C%90%EB%8B%A4%EC%8A%A4-%EC%97%91%EC%85%80/</link>
    <description>Recent content in 판다스 엑셀 on Data Science | ChloEvan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 30 Mar 2020 11:15:47 +0900</lastBuildDate>
    
        <atom:link href="https://chloevan.github.io/tags/%ED%8C%90%EB%8B%A4%EC%8A%A4-%EC%97%91%EC%85%80/rss.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Pandas With Excel</title>
      <link>https://chloevan.github.io/python/pandas/pandas_with_excel/</link>
      <pubDate>Mon, 30 Mar 2020 11:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/pandas/pandas_with_excel/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/python_edu/02_datatransformation/pandas_logo.png#center&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;i-overview&#34;&gt;I. Overview&lt;/h2&gt;
&lt;p&gt;이번 포스트는 기존의 엑셀 사용자를 위해 준비했다. 엑셀에 익숙한 사람들에게 파이썬을 분석 용도로 사용하고자 하는 분들에게는 작은 도움이 되기를 바란다.&lt;/p&gt;
&lt;h2 id=&#34;ii-데이터-입출력&#34;&gt;II. 데이터 입출력&lt;/h2&gt;
&lt;p&gt;판다스는 다양한 형태의 외부 파일을 읽을 수 있다. &lt;code&gt;CSV&lt;/code&gt;, &lt;code&gt;MS Excel&lt;/code&gt;, &lt;code&gt;SQL&lt;/code&gt;, &lt;code&gt;HDF5 Format&lt;/code&gt;과 같은 파일 포맷을 읽을 수 있다. &lt;code&gt;파일 포맷(File Format)&lt;/code&gt;에 따른 데이터 입출력 도구에 관한 자료를 요약하면 다음과 같다.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;파일 포맷&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;How to Read?&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;How to Write?&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;CSV&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;read_csv&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;to_csv&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;MS Excel&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;read_excel&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;to_excel&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;SQL&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;read_sql&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;to_sql&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;그 외에 &lt;code&gt;HTML&lt;/code&gt;, &lt;code&gt;JSON&lt;/code&gt;, &lt;code&gt;SAS&lt;/code&gt; 포맷과 같은 파일을 읽어오는 다양한 방법에 대해서는 &lt;a href=&#34;https://pandas.pydata.org/docs/pandas.pdf&#34;&gt;Pandas 공식문서&lt;/a&gt;(PDF 다운로드)를 참조하기를 바란다.&lt;/p&gt;
&lt;h2 id=&#34;iii-excel-파일&#34;&gt;III. Excel 파일&lt;/h2&gt;
&lt;p&gt;판다스 공식문서(version 1.0.3, Release date: March 18, 2020)에 따르면, &lt;code&gt;read_excel()&lt;/code&gt; 함수는 Excel 2003(.xls), Excel 2007+(.xlsx) 파일을 읽어올 수 있다. 또한, Binary Excel(.xlsb) (한번도 본적은 없다!)도 읽을 수 있다고 하니, 90년대 엑셀 파일이 아니면, 모두 읽기가 가능한 듯 하다 (p. 286 참조).&lt;/p&gt;
&lt;h2 id=&#34;1-파일-읽어오기&#34;&gt;(1) 파일 읽어오기&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;read_excel()&lt;/code&gt; 및 &lt;code&gt;to_excel()&lt;/code&gt; 함수는 파이썬의 &lt;code&gt;xlrd&lt;/code&gt;, &lt;code&gt;openpyxl&lt;/code&gt;, &lt;code&gt;pyxlsb&lt;/code&gt;과 같은 모듈이 선행적으로 설치가 되어야 사용할 수 있기 때문에 만약, 함수 실행시 에러(error)가 발생하면 참조하기를 바란다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;함수 사용 예제&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;data = pandas.read_excel(&#39;파일 경로(이름)&#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;위와 같은 형태로 소스코드를 작성하면 된다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pd

url &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://github.com/chloevan/datasets/raw/master/sports/games_plays.xlsx&amp;#39;&lt;/span&gt;
games &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read_excel(url)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(games&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head())
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;   Unnamed: 0      GameId HomeTeamAbbr VisitorTeamAbbr  Week  \
0           0  2017090700           NE              KC     1   
1           1  2017090700           NE              KC     1   
2           2  2017090700           NE              KC     1   
3           3  2017090700           NE              KC     1   
4           4  2017090700           NE              KC     1   

            Stadium        Location StadiumType        Turf     GameWeather  \
0  Gillette Stadium  Foxborough, MA     Outdoor  Field Turf  Clear and warm   
1  Gillette Stadium  Foxborough, MA     Outdoor  Field Turf  Clear and warm   
2  Gillette Stadium  Foxborough, MA     Outdoor  Field Turf  Clear and warm   
3  Gillette Stadium  Foxborough, MA     Outdoor  Field Turf  Clear and warm   
4  Gillette Stadium  Foxborough, MA     Outdoor  Field Turf  Clear and warm   

   Temperature  Humidity          PlayId  YardLine  Quarter GameClock  \
0         63.0      77.0  20170907000118        35        1  14:14:00   
1         63.0      77.0  20170907000139        43        1  13:52:00   
2         63.0      77.0  20170907000189        35        1  13:02:00   
3         63.0      77.0  20170907000345         2        1  12:12:00   
4         63.0      77.0  20170907000395        25        1  12:08:00   

  PossessionTeam  Down  Distance FieldPosition  
0             NE     3         2            NE  
1             NE     1        10            NE  
2             NE     1        10            KC  
3             NE     2         2            KC  
4             KC     1        10            KC  
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;위 코드로 데이터가 정상적으로 업로드 된 것을 확인 할 수 있다. 기존 엑셀 파일에 있는 Column명을 그대로 사용하고자 한다면, &lt;code&gt;read_excel(파일명, header = 0)&lt;/code&gt; 사용하거나, &lt;code&gt;read_excel(header, header = None)&lt;/code&gt;을 사용하면 Column명 대신에 숫자로 순차적으로 표시되게 된다. 그리고, Column명은 첫번째 행에 입력되게 된다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;url &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://github.com/chloevan/datasets/raw/master/sports/games_plays.xlsx&amp;#39;&lt;/span&gt;
games2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read_excel(url, header &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; None)

&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(games2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head())
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;    0           1             2                3     4                 5   \
0  NaN      GameId  HomeTeamAbbr  VisitorTeamAbbr  Week           Stadium   
1  0.0  2017090700            NE               KC     1  Gillette Stadium   
2  1.0  2017090700            NE               KC     1  Gillette Stadium   
3  2.0  2017090700            NE               KC     1  Gillette Stadium   
4  3.0  2017090700            NE               KC     1  Gillette Stadium   

               6            7           8               9            10  \
0        Location  StadiumType        Turf     GameWeather  Temperature   
1  Foxborough, MA      Outdoor  Field Turf  Clear and warm           63   
2  Foxborough, MA      Outdoor  Field Turf  Clear and warm           63   
3  Foxborough, MA      Outdoor  Field Turf  Clear and warm           63   
4  Foxborough, MA      Outdoor  Field Turf  Clear and warm           63   

         11              12        13       14         15              16  \
0  Humidity          PlayId  YardLine  Quarter  GameClock  PossessionTeam   
1        77  20170907000118        35        1   14:14:00              NE   
2        77  20170907000139        43        1   13:52:00              NE   
3        77  20170907000189        35        1   13:02:00              NE   
4        77  20170907000345         2        1   12:12:00              NE   

     17        18             19  
0  Down  Distance  FieldPosition  
1     3         2             NE  
2     1        10             NE  
3     1        10             KC  
4     2         2             KC  
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;2-파일-저장하기&#34;&gt;(2) 파일 저장하기&lt;/h2&gt;
&lt;p&gt;불러온 파일을 저장하는 방법은 여러가지 있다. 여기서는 고민해야 한다.
Excel 파일로 재 저장 할 것인지, CSV 파일로 저장할 것인지, JSON 파일로 저장할 것인지에 따라 지정하면 된다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;함수 사용 예제&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;data.to_excel(&#39;파일경로&#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이렇게 작성하면 된다. 간혹 &lt;code&gt;ModuleNotFoundError: No module named &#39;openpyxl&#39;&lt;/code&gt;과 같은 에러 메시지가 뜨면, 이는 &lt;code&gt;to_excel()&lt;/code&gt; 실행시 필요한 &lt;code&gt;openpyxl&lt;/code&gt; 모듈이 사전에 설치가 되지 않은 것이기 때문에 터미널에서 추가 설치를 진행하면 된다.&lt;/p&gt;
&lt;p&gt;모듈 설치 방법은 아래와 같은 형태로 실행한다.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ pip3 install openpyxl
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;아나콘다 배포판에는 openpyxl 라이브러리가 기본 제공되므로 설치하지 않아도 되지만, 혹시나 에러가 발생하면 &lt;code&gt;conda install openpyxl&lt;/code&gt; 명령어를 실행한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;games&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_excel(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;example.xlsx&amp;#39;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;%%bash
ls
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;example.xlsx
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;이제 중요한 작업이 남았다. 실무에서는 보통 여러 형태의 엑셀이 중복적으로 존재하게 된다. 매월00보고서가 엑셀 형태로 남아 있는 경우가 많은데, 복수의 엑셀파일이 존재할 시, 어떻게 효과적으로 엑셀 데이터를 불러올지 고민할 수 밖에 없다. 다음 장에서 다루도록 하겠다.&lt;/p&gt;
&lt;h2 id=&#34;iv-reference&#34;&gt;IV. Reference&lt;/h2&gt;
&lt;p&gt;Wes McKinney and Pandas Development Team¶. Pandas: Powerful Python data analysis toolkit Release 1.0.3. Retrieved March 18, 2020, from &lt;a href=&#34;https://pandas.pydata.org/docs/pandas.pdf&#34;&gt;https://pandas.pydata.org/docs/pandas.pdf&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>