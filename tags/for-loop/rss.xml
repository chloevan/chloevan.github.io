<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>for-loop on Data Science | ChloEvan</title>
    <link>https://chloevan.github.io/tags/for-loop/</link>
    <description>Recent content in for-loop on Data Science | ChloEvan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 12 May 2020 17:12:47 +0900</lastBuildDate>
    
        <atom:link href="https://chloevan.github.io/tags/for-loop/rss.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Python - Lambda and List Comprehension</title>
      <link>https://chloevan.github.io/python/basic/lambda_and_list_comprehension/</link>
      <pubDate>Tue, 12 May 2020 17:12:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/basic/lambda_and_list_comprehension/</guid>
      <description>&lt;h2 id=&#34;공지&#34;&gt;공지&lt;/h2&gt;
&lt;p&gt;제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.&lt;/p&gt;
&lt;h2 id=&#34;i-개요&#34;&gt;I. 개요&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Python&lt;/code&gt;을 활용한 데이터전처리를 수행할 때, &lt;code&gt;Lambda and List Comprehension&lt;/code&gt; 활용하면 매우 &lt;code&gt;handy&lt;/code&gt;한 경험을 할 수 있다. 특히, 코드 수행 시, &lt;code&gt;for-loop&lt;/code&gt;가 많을 때 유용하다.&lt;/p&gt;
&lt;h2 id=&#34;ii-lambda-expression&#34;&gt;II. Lambda Expression&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/python/lambda/lambda.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;우선 &lt;code&gt;Lambda&lt;/code&gt;의 표현 방법은 아래와 같다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;lambda&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;인자&lt;/span&gt; : &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;표현식&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;어떻게 사용할 수 있을까요? 우선, &lt;code&gt;temp_sum&lt;/code&gt;이라는 함수를 만들어 본다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;temp_sum&lt;/span&gt;(x, y):
  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; y

temp_sum(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;5
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;이번에는 &lt;code&gt;lambda&lt;/code&gt;를 활용해서 &lt;code&gt;sum&lt;/code&gt;을 적용해보자.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;temp_sum &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;lambda&lt;/span&gt; x,y:x&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;y)(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(temp_sum)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;5
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;하나는 함수를 만들어서 사용했고, &lt;code&gt;lambda&lt;/code&gt;를 활용할 때는 함수를 쓰지 않고 작성했다.&lt;/p&gt;
&lt;p&gt;한가지 특징이 있다면, 일반적으로 함수는 &lt;code&gt;return&lt;/code&gt; 문이 존재하지만, &lt;code&gt;lambda&lt;/code&gt;는 없다는 점이다.&lt;/p&gt;
&lt;h2 id=&#34;iii-with-functions&#34;&gt;III. With functions&lt;/h2&gt;
&lt;p&gt;그런데, &lt;code&gt;lambda&lt;/code&gt; 자체가 독립적으로 쓰일 때 보다는 &lt;code&gt;map()&lt;/code&gt;, &lt;code&gt;filter()&lt;/code&gt;, &lt;code&gt;list comprehesion&lt;/code&gt;과 같이 쓰일 때, 보다 효율적이다.&lt;/p&gt;
&lt;h3 id=&#34;1-map&#34;&gt;(1) map()&lt;/h3&gt;
&lt;p&gt;문법은 아래와 같다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;map(func, iterables)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;map()&lt;/code&gt; 함수는 함수와 인자를 받는데, 이때의 함수라 하면, &lt;code&gt;lambda&lt;/code&gt;도 포함한다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;iterables&lt;/code&gt; 나오는데, 이는 일반적인 &lt;code&gt;list&lt;/code&gt;와는 다르다.&lt;/li&gt;
&lt;li&gt;따라서, &lt;code&gt;map()&lt;/code&gt;의 결과값은 &lt;code&gt;iterables&lt;/code&gt;로 반환되며, &lt;code&gt;list&lt;/code&gt;로 변환해야 &lt;code&gt;list&lt;/code&gt; 형태로 결과를 볼 수 있다.&lt;/li&gt;
&lt;li&gt;조금 더 구체적으로 &lt;code&gt;map&lt;/code&gt;의 사용용법은 아래와 같다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;list(map(func, iterables))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;이제 &lt;code&gt;list&lt;/code&gt; 객체에 &lt;code&gt;map()&lt;/code&gt; + &lt;code&gt;lambda&lt;/code&gt;를 활용해서 각 &lt;code&gt;list&lt;/code&gt;에 3씩 구하도록 한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;num_list &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;]
increased &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; list(map(&lt;span style=&#34;color:#66d9ef&#34;&gt;lambda&lt;/span&gt; x: x &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, num_list))
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(increased)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[8, 9, 10]
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;2-filter&#34;&gt;(2) filter()&lt;/h3&gt;
&lt;p&gt;이번에는 &lt;code&gt;filter()&lt;/code&gt; 함수를 활용한다. &lt;code&gt;map()&lt;/code&gt;와 마찬가지로 문법은 동일하다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;filter(func, iterables)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;iterables&lt;/code&gt;에 대해서는 별도로 추가적인 설명하지 않는다. &lt;code&gt;list&lt;/code&gt;로 받았기 때문에, 이번에도 &lt;code&gt;list&lt;/code&gt;로 변환해서 출력을 한다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;list&lt;/code&gt;안에 있는 각각의 값에서, &lt;code&gt;2로 나눈 값이 0&lt;/code&gt;이 아닌 것만 출력하는 구문을 짜도록 한다. 기대하는 값은 &lt;code&gt;[5,7]&lt;/code&gt;이다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;num_list &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;]
odd_num &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; list(filter(&lt;span style=&#34;color:#66d9ef&#34;&gt;lambda&lt;/span&gt; x: x&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, num_list))
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(odd_num)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[5, 7]
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;3-list-comprehension&#34;&gt;(3) List Comprehension&lt;/h3&gt;
&lt;p&gt;우선 문법을 보자.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;[expression &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; item &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; list &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; condition]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;위 구문을 가지고 무엇을 하고 싶을 때 써야할까?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;expression&lt;/code&gt; 사용자가 하려는 문법 (이번에는 곱셈을 해본다)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;item&lt;/code&gt;은 &lt;code&gt;list&lt;/code&gt;가 올것이다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;if&lt;/code&gt;는 item의 각 아이템을 조건문으로 &lt;code&gt;filter&lt;/code&gt;하는 개념이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;우선 아래 코드를 보자.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;num_list &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;]
sqrt_list &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [x&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;x &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; num_list &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; x&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(sqrt_list)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[4, 16, 36, 64, 100]
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;1-10까지 숫자를 포함하는 리스트가 있다. 2로 나눈 값 중 나머지가 0이 되는 값을 뽑은 뒤 각 숫자의 제곱을 하도록 반환하는 값이다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;List Comprehension&lt;/code&gt;의 강력함은 이렇게 여러 문법이 한줄로 코딩하여 속도 뿐만 아니라 코드의 가독성도 부여하는데 의의가 있다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;이번에는 &lt;code&gt;lambda&lt;/code&gt;를 적용한다. 우선 &lt;code&gt;lambda&lt;/code&gt;는 어디에 들어가야 할까? 당연한 말이지만, &lt;code&gt;expression&lt;/code&gt; 영역에 들어가야 한다. 우선 아래 코드를 확인해보자.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;num_list &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;]
sqrt_list &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [(&lt;span style=&#34;color:#66d9ef&#34;&gt;lambda&lt;/span&gt; x: x&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;x)(x) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; num_list &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; x&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(sqrt_list)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[4, 16, 36, 64, 100]
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;lambda&lt;/code&gt;를 어떻게 썼는지 확인해보면 &lt;code&gt;(lambda x: x*x)(x)&lt;/code&gt;라고 표현되어 있는 것을 볼 수 있는데, 앞 부분에서 &lt;code&gt;lambda expression&lt;/code&gt;(Chapter 2)에 대해 설명했기 때문에 생략한다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;위 코드에서 보는 것처럼, &lt;code&gt;List Comprehension&lt;/code&gt;과 &lt;code&gt;Lambda Expression&lt;/code&gt;을 같이 쓰는 것은 조금 비효율적일 수 있다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;iv-more-study&#34;&gt;IV. More Study&lt;/h2&gt;
&lt;p&gt;기본문법이다. 그런데, 아직까지 확실히 &lt;code&gt;Lambda&lt;/code&gt;가 좋은지는 필자 역시 모르겠다. 그런데, &lt;code&gt;Lambda&lt;/code&gt;가 데이터 전처리 때, 사용하면 매우 강력한 무기가 될 수 있음을 다음 포스트에서 기술하려고 한다.&lt;/p&gt;
&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;
&lt;p&gt;Suvhotta. (2020, January 27). Python: Lambda and List Comprehension. Retrieved May 12, 2020, from &lt;a href=&#34;https://dev.to/suvhotta/python-lambda-and-list-comprehension-5128&#34;&gt;https://dev.to/suvhotta/python-lambda-and-list-comprehension-5128&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>basic_loop</title>
      <link>https://chloevan.github.io/python/basic/basic_loop/</link>
      <pubDate>Sat, 02 May 2020 01:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/basic/basic_loop/</guid>
      <description>&lt;h2 id=&#34;공지&#34;&gt;공지&lt;/h2&gt;
&lt;p&gt;제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.&lt;/p&gt;
&lt;h2 id=&#34;i-개요&#34;&gt;I. 개요&lt;/h2&gt;
&lt;p&gt;파이썬 처음 입문하는 사람들을 위해서 작성하였다. Python으로 코드를 작성하다보면, 매우 빈번히 For-loop 구문을 확인할 수 있다. 간단한 코드로 For-loop를 확인해보자.&lt;/p&gt;
&lt;h2 id=&#34;ii-loop-over-list&#34;&gt;II. Loop over list&lt;/h2&gt;
&lt;p&gt;간단하게 for-loop를 작성해보자.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# double list&lt;/span&gt;
num &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1.72&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.67&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.71&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.89&lt;/span&gt;]
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; height &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; num:
  &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(height)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;1.72
1.67
1.71
1.89
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;순서대로 출력됨을 볼 수 있다.&lt;/p&gt;
&lt;h3 id=&#34;1-indexes-and-values&#34;&gt;(1) Indexes and Values&lt;/h3&gt;
&lt;p&gt;그런데, 만약 번호를 확인하고 싶다고 하면 어떻게 해야할까? 이 때에는 &lt;code&gt;enumrate()&lt;/code&gt; 함수를 사용해보자.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# double list&lt;/span&gt;
num &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1.72&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.67&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.71&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.89&lt;/span&gt;]
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; index, height &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; enumerate(num):
  &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;person &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(index&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;: &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(height))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;person 1: 1.72
person 2: 1.67
person 3: 1.71
person 4: 1.89
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;+1&lt;/code&gt;을 해준 이유는 &lt;code&gt;for loop&lt;/code&gt;시 0부터 출력되기 때문에 임의의 상수 &lt;code&gt;1&lt;/code&gt;을 출력한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# double list&lt;/span&gt;
num &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1.72&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.67&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.71&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.89&lt;/span&gt;]
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; index, height &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; enumerate(num):
  index &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;person &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(index) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;: &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(height))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;person 1: 1.72
person 2: 1.67
person 3: 1.71
person 4: 1.89
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;index +=&lt;/code&gt;와 같은 방식으로 작성을 해도 된다.&lt;/p&gt;
&lt;h3 id=&#34;2-loop-with-list-of-lists&#34;&gt;(2) Loop with list of lists&lt;/h3&gt;
&lt;p&gt;지금까지는 하나의 리스트에 대해서 출력을 했는데, 하나의 리스트 안에 또 다른 리스트가 있다면 어떻게 해야 할까?&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt; class_1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Person A&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.72&lt;/span&gt;], 
         [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Person B&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.67&lt;/span&gt;], 
         [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Person C&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.55&lt;/span&gt;]]
        
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; person &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; class_1:
  &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;그 &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; person[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;의 키는 &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(person[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;이다.&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;그 Person A의 키는 1.72이다.
그 Person B의 키는 1.67이다.
그 Person C의 키는 1.55이다.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;이때 &lt;code&gt;person&lt;/code&gt;는 두개의 값을 가지고 있고, 마찬가지로 0부터 접근이 가능하기 때문에 &lt;code&gt;0&lt;/code&gt;과 &lt;code&gt;1&lt;/code&gt;을 통해 접근을 할 수 있다.&lt;/p&gt;
&lt;h2 id=&#34;iii-pythonic-way-to-write-a-loop&#34;&gt;III. Pythonic way to write a loop&lt;/h2&gt;
&lt;p&gt;Pythonic 코드는 무엇인가? 간단히 말하면, 파이썬스럽게 코드를 작성한다는 뜻이다. 초보자에게는 조금 귀찮을 수 있지만, 본디 IT업무가 혼자하기 보다는 다른 시니어 개발자분들과 같이 해야 하기 때문에, 가급적 파이썬스럽게 코드를 작성하는 것을 권한다.&lt;/p&gt;
&lt;p&gt;파이썬 사용자라면, 꼭 읽어야 할 책 중의 하나다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://index-of.es/Varios-2/The%20Hitchiker%27s%20Guide%20to%20Python.pdf&#34;&gt;The Hitchhiker&amp;rsquo;s Guide to Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;다시 돌아와서, 아래 코드를 보자.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; numpy &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; np
a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;]
b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;]
p &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;zeros(len(a)&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;len(a))
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,len(a)):
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; j &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,len(a)):
        p &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; p &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
        result[p] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; a[i] &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; b[j]
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(result)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[-3. -4. -5. -2. -3. -4. -1. -2. -3.]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;여기에서 사용자가 얻으려 하는 결과는 &lt;code&gt;[-3. -4. -5. -2. -3. -4. -1. -2. -3.]&lt;/code&gt;다. 물론, 위 코드에서 구할 수는 있지만, 무언가 불필요한 코드가 많아 보인다.&lt;/p&gt;
&lt;p&gt;코드의 가독성도 조금 떨어져 보임을 알 수 있다. 어떻게 수정할까?&lt;/p&gt;
&lt;h3 id=&#34;1-방법-1-for-loop를-살리기&#34;&gt;(1) 방법 1. for loop를 살리기&lt;/h3&gt;
&lt;p&gt;일단, for loop를 살린 상태로 수정하겠다. 이때에는 &lt;code&gt;append()&lt;/code&gt;함수를 사용할 것이다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;]
b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;]
result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; a:
  &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; y &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; b:
    result&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(x &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; y)

&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(result)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[-3, -4, -5, -2, -3, -4, -1, -2, -3]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;코드가 10줄에서 8줄로 조금 줄어들었지만, 결과는 똑같았다. 그러나 여전히 &lt;code&gt;for loop&lt;/code&gt;가 많아 보인다.&lt;/p&gt;
&lt;p&gt;어떻게 줄일까?&lt;/p&gt;
&lt;h3 id=&#34;2-방법-2-pythonic-way&#34;&gt;(2) 방법 2. Pythonic way&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;pythonic&lt;/code&gt; 방식으로 하면 8줄에서 4줄로 줄일수 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;]
b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;]
result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [x &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; y &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; a &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; y &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; b]
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(result)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[-3, -4, -5, -2, -3, -4, -1, -2, -3]
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;3-속도-비교&#34;&gt;(3) 속도 비교&lt;/h3&gt;
&lt;p&gt;위에서 보는 것처럼 코드가 대폭 줄어드는 것을 확인할 수 있다. 당연히 속도에서도 차이가 날 것이다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;첫번째 방법&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%%&lt;/span&gt;timeit
a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;]
b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;]
result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; a:
  &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; y &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; b:
    result&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(x &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; y)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;100 loops, best of 3: 6.58 ms per loop
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;두번째 방법&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%%&lt;/span&gt;timeit
a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;]
b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;]
result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [x &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; y &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; a &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; y &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; b]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;1000000 loops, best of 3: 774 ns per loop
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;iii-실습파일&#34;&gt;III. 실습파일&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;구글코랩에서 빠르게 실습도 할 수 있습니다. &lt;a href=&#34;https://colab.research.google.com/github/chloevan/python_visualisation/blob/master/python_basic/basic_loop.ipynb&#34;&gt;실습&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>