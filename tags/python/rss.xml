<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Data Science | ChloEvan</title>
    <link>https://chloevan.github.io/tags/python/</link>
    <description>Recent content in Python on Data Science | ChloEvan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 19 Aug 2020 01:00:47 +0900</lastBuildDate>
    
	<atom:link href="https://chloevan.github.io/tags/python/rss.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>입문자를 위한 머신러닝 분류 튜토리얼 - Decision Tree</title>
      <link>https://chloevan.github.io/python/python_edu/04_machinelearning/chapter_4_5_understanding_tree/</link>
      <pubDate>Wed, 19 Aug 2020 01:00:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/04_machinelearning/chapter_4_5_understanding_tree/</guid>
      <description>개요  사이킷런(scikit-learn)은 파이썬 머신러닝 라이브러리이다. 파이썬에서 나오는 최신 알고리즘들도 이제는 사이킷런에 통합하는 형태로 취하고 있다. 구글 코랩은 기본적으로 사이킷런까지 설치가 완료되기에 별도의 설치가 필요없는 장점이 있다. Note: 본 포스트는 머신러닝 자체를 처음 접하는 분들을 위한 것이기 때문에, 어느정도 경험이 있으신 분들은 필자의 다른 포스트를 읽어주시기를 바랍니다.  패키지 불러오기  패키지는 시간에 지남에 따라 계속 업그레이드가 되기 때문에 꼭 버전 체크를 하는 것을 권장한다.  필자가 글을 남겼을 때는 2020년 8월 16일에 작성했음을 기억하자.</description>
    </item>
    
    <item>
      <title>입문자를 위한 머신러닝 분류 튜토리얼 - IRIS 분류</title>
      <link>https://chloevan.github.io/python/python_edu/04_machinelearning/chapter_4_4_classification_iris_example/</link>
      <pubDate>Mon, 17 Aug 2020 01:00:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/04_machinelearning/chapter_4_4_classification_iris_example/</guid>
      <description>개요  사이킷런(scikit-learn)은 파이썬 머신러닝 라이브러리이다. 파이썬에서 나오는 최신 알고리즘들도 이제는 사이킷런에 통합하는 형태로 취하고 있다. 구글 코랩은 기본적으로 사이킷런까지 설치가 완료되기에 별도의 설치가 필요없는 장점이 있다. Note: 본 포스트는 머신러닝 자체를 처음 접하는 분들을 위한 것이기 때문에, 어느정도 경험이 있으신 분들은 필자의 다른 포스트를 읽어주시기를 바랍니다.  패키지 불러오기  패키지는 시간에 지남에 따라 계속 업그레이드가 되기 때문에 꼭 버전 체크를 하는 것을 권장한다.  필자가 글을 남겼을 때는 2020년 8월 16일에 작성했음을 기억하자.</description>
    </item>
    
    <item>
      <title>NumPy with ndarray</title>
      <link>https://chloevan.github.io/python/python_edu/01_basic/chapter_3_8_numpy/</link>
      <pubDate>Tue, 11 Aug 2020 18:00:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/01_basic/chapter_3_8_numpy/</guid>
      <description>Numpy ndarray 개요  넘파이 array()는 ndarray로 변환 가능 생성된 ndarray배열의 shape변수는 ndarray의 크기, 행과 열의 수를 튜플 형태로 가지고 있으며, 이를 통해 ndarray 배열의 차원까지 알 수 있음  (1) 배열이란?  NumPy에서 배열은 동일한 타입의 값을 가짐 shape는 각 차원의 크기를 튜플로 표시한다. 차원이란 무엇일까?  1차원은 보통 하나의 선을 의미 2차원은 평면을 의미하고, 데이터 분석에서는 보통 데이터프레임을 의미한다. 3차원은 공간을 의미하고, 딥러닝에서는 보통 이미지를 의미한다. (RGB)    shape와 ndim  코드를 통해서 shape와 ndim 함수를 확인해본다.</description>
    </item>
    
    <item>
      <title>딥러닝 소개 - Object Detection</title>
      <link>https://chloevan.github.io/python/python_edu/07_deeplearning/option_mask_rcnn_camera_demo/</link>
      <pubDate>Fri, 24 Jul 2020 09:22:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/07_deeplearning/option_mask_rcnn_camera_demo/</guid>
      <description>공지  본 자료는 강의 수업의 보충 자료로 사용되었습니다. 자세한 내용은 Reference를 확인하시기를 바랍니다.  Setup File  외부 설정 파일이 필요하다.  참조: Mask R-CNN for Object Detection and Segmentation   shell script에서 작성한다.  %%shell # clone Mask_RCNN repo and install packages git clone https://github.com/matterport/Mask_RCNN cd Mask_RCNN python setup.py install Cloning into &#39;Mask_RCNN&#39;... remote: Enumerating objects: 956, done.[K remote: Total 956 (delta 0), reused 0 (delta 0), pack-reused 956[K Receiving objects: 100% (956/956), 116.</description>
    </item>
    
    <item>
      <title>머신러닝 알고리즘 - 분류 Tutorial</title>
      <link>https://chloevan.github.io/python/python_edu/04_machinelearning/chapter_4_4_classification/</link>
      <pubDate>Thu, 23 Jul 2020 10:00:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/04_machinelearning/chapter_4_4_classification/</guid>
      <description>개요  Kaggle 대회인 `Titanic&amp;rsquo;대회를 통해 분류 모형을 만들어본다. 본 강의는 수업 자료의 일부로 작성되었다.  I. 사전 준비작업  Kaggle API 설치 및 연동해서 GCP에 데이터를 적재하는 것까지 진행한다.  (1) Kaggle API 설치  구글 코랩에서 API를 불러오려면 다음 소스코드를 실행한다.  !pip install kaggle Requirement already satisfied: kaggle in /usr/local/lib/python3.6/dist-packages (1.5.6) Requirement already satisfied: requests in /usr/local/lib/python3.6/dist-packages (from kaggle) (2.23.0) Requirement already satisfied: urllib3&amp;lt;1.25,&amp;gt;=1.21.1 in /usr/local/lib/python3.6/dist-packages (from kaggle) (1.</description>
    </item>
    
    <item>
      <title>CNN with Computer Vision</title>
      <link>https://chloevan.github.io/python/python_edu/07_deeplearning/chapter_7_4_cnn_vision/</link>
      <pubDate>Wed, 22 Jul 2020 17:30:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/07_deeplearning/chapter_7_4_cnn_vision/</guid>
      <description>공지   본 Tutorial은 교재 핸즈온 머신러닝 2판를 활용하여 본 강사로부터 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다..
  강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶은 분은 반드시 교재를 구매하실 것을 권해드립니다.
   책 정말 좋습니다! 꼭 구매하세요!
 개요  인경 신경망은(Artificial Neural Network)을 촉발시킨 근원임  뇌에 있는 생물학적 뉴런의 네트워크에서 영감을 받은 머신러닝 모델   활용예제  수백만개의 이미지 분류 수백만개의 비디어 추천 매우 복잡한 문제를 풀 때 유용한 머신러닝 모델   Keras API  케라스는 신경망 구축, 훈련, 평가, 실행을 목적으로 설계된 API이자, 프레임워크    (1) 주요 환경 설정  주요 환경 설정은 아래와 같이 정의합니다.</description>
    </item>
    
    <item>
      <title>딥러닝 소개 - 텐서플로 기본</title>
      <link>https://chloevan.github.io/python/python_edu/07_deeplearning/chapter_7_3_1_tensorflow_basic/</link>
      <pubDate>Sat, 18 Jul 2020 17:30:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/07_deeplearning/chapter_7_3_1_tensorflow_basic/</guid>
      <description>공지   본 Tutorial은 교재 핸즈온 머신러닝 2판를 활용하여 본 강사로부터 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다.
  강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶은 분은 반드시 교재를 구매하실 것을 권해드립니다.
   책 정말 좋습니다! 꼭 구매하세요!
 개요  인경 신경망은(Artificial Neural Network)을 촉발시킨 근원임  뇌에 있는 생물학적 뉴런의 네트워크에서 영감을 받은 머신러닝 모델   활용예제  수백만개의 이미지 분류 수백만개의 비디어 추천 매우 복잡한 문제를 풀 때 유용한 머신러닝 모델   Keras API  케라스는 신경망 구축, 훈련, 평가, 실행을 목적으로 설계된 API이자, 프레임워크    (1) 주요 환경 설정  주요 환경 설정은 아래와 같이 정의합니다.</description>
    </item>
    
    <item>
      <title>딥러닝 소개 - 심층 신경망 훈련하기</title>
      <link>https://chloevan.github.io/python/python_edu/07_deeplearning/chapter_7_2_training_deep_neural_network/</link>
      <pubDate>Fri, 17 Jul 2020 18:00:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/07_deeplearning/chapter_7_2_training_deep_neural_network/</guid>
      <description>공지   본 Tutorial은 교재 핸즈온 머신러닝 2판를 활용하여 본 강사로부터 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다.
  강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶은 분은 반드시 교재를 구매하실 것을 권해드립니다.
   책 정말 좋습니다! 꼭 구매하세요!
 개요  인경 신경망은(Artificial Neural Network)을 촉발시킨 근원임  뇌에 있는 생물학적 뉴런의 네트워크에서 영감을 받은 머신러닝 모델   활용예제  수백만개의 이미지 분류 수백만개의 비디어 추천 매우 복잡한 문제를 풀 때 유용한 머신러닝 모델   Keras API  케라스는 신경망 구축, 훈련, 평가, 실행을 목적으로 설계된 API이자, 프레임워크    (1) 주요 환경 설정  주요 환경 설정은 아래와 같이 정의합니다.</description>
    </item>
    
    <item>
      <title>머신러닝 알고리즘 - LightGbm</title>
      <link>https://chloevan.github.io/python/python_edu/04_machinelearning/chapter_4_3_lightgbm/</link>
      <pubDate>Thu, 16 Jul 2020 23:00:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/04_machinelearning/chapter_4_3_lightgbm/</guid>
      <description>개요  주택가격을 예측하는 데 필요한 Kaggle 데이터를 불러와서 빅쿼리에 저장하는 실습 진행 데이터를 불러와서 LightGBM를 활용하여 머신러닝을 만든다.  I. 사전 준비작업  Kaggle API 설치 및 연동해서 GCP에 데이터를 적재하는 것까지 진행한다.  (1) Kaggle API 설치  구글 코랩에서 API를 불러오려면 다음 소스코드를 실행한다.  !pip install kaggle Requirement already satisfied: kaggle in /usr/local/lib/python3.6/dist-packages (1.5.6) Requirement already satisfied: six&amp;gt;=1.10 in /usr/local/lib/python3.6/dist-packages (from kaggle) (1.12.0) Requirement already satisfied: requests in /usr/local/lib/python3.</description>
    </item>
    
    <item>
      <title>딥러닝 소개 - 인공 신경망 소개</title>
      <link>https://chloevan.github.io/python/python_edu/07_deeplearning/chapter_7_1_deeplearning_intro/</link>
      <pubDate>Wed, 15 Jul 2020 10:00:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/07_deeplearning/chapter_7_1_deeplearning_intro/</guid>
      <description>공지   본 Tutorial은 교재 핸즈온 머신러닝 2판를 활용하여 본 강사로부터 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다.
  강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶은 분은 반드시 교재를 구매하실 것을 권해드립니다.
   책 정말 좋습니다! 꼭 구매하세요!
 개요  인경 신경망은(Artificial Neural Network)을 촉발시킨 근원임  뇌에 있는 생물학적 뉴런의 네트워크에서 영감을 받은 머신러닝 모델   활용예제  수백만개의 이미지 분류 수백만개의 비디어 추천 매우 복잡한 문제를 풀 때 유용한 머신러닝 모델   Keras API  케라스는 신경망 구축, 훈련, 평가, 실행을 목적으로 설계된 API이자, 프레임워크    (1) 주요 환경 설정  주요 환경 설정은 아래와 같이 정의합니다.</description>
    </item>
    
    <item>
      <title>데이콘 대회 참여 - 10 데이터 시각화</title>
      <link>https://chloevan.github.io/python/dacon/jeju2020/10_data_visualisation/</link>
      <pubDate>Sun, 12 Jul 2020 17:01:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/dacon/jeju2020/10_data_visualisation/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
사전작업  한글 시각화를 위해 나눔고딕 폰트를 불러온다.  !pip install psankey # sankey diagram %config InlineBackend.figure_format = &amp;#39;retina&amp;#39; !apt -qq -y install fonts-nanum Requirement already satisfied: psankey in /usr/local/lib/python3.6/dist-packages (1.0.1) fonts-nanum is already the newest version (20170925-1). The following package was automatically installed and is no longer required: libnvidia-common-440 Use &#39;apt autoremove&#39; to remove it.</description>
    </item>
    
    <item>
      <title>Machine Learning Example with Class</title>
      <link>https://chloevan.github.io/python/python_edu/01_basic/chapter_3_7_class/</link>
      <pubDate>Fri, 10 Jul 2020 11:00:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/01_basic/chapter_3_7_class/</guid>
      <description>I. 개요  간단하게 클래스를 만들어보고 한다. 지금까지 배운 내용을 바탕으로 Class를 활용한 머신러닝 예제를 작성한다.  II. Class와 Instance는 무엇인가?  클래스는 결국 함수의 연장선이다. 지금까지 함수가 얼마나 편한 것인지를 배웠다.  그런데, 시스템이 복잡해지면 함수 하나로 충분하지 않음을 알게 된다.   간단한 예시를 들어보자.  result = 0 def add(num): global result result += num return result print(add(10)) print(add(20)) 10 30  (1) 똑같은 기능을 가진 여러개의 함수  그런데, 2대의 계산기가 필요한 상황이 되었다고 가정하자.</description>
    </item>
    
    <item>
      <title>How to create my own function</title>
      <link>https://chloevan.github.io/python/python_edu/01_basic/chapter_3_6_def/</link>
      <pubDate>Thu, 09 Jul 2020 12:00:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/01_basic/chapter_3_6_def/</guid>
      <description>I. 개요  나만의 함수를 작성해 본다. 실행가능한 함수를 만들어 본다.  II. 기존 내장 함수  함수는 특정 기능을 수행하는 코드를 의미한다. 함수는 Sum(), Len()을 의미한다.  x = [1,2,3,4,5] print(sum(x)) print(len(x)) 5  III 사용자 정의 함수 예제  이제 사용자 정의 함수를 사용하자. 함수 선언 시, def는 define의 약자다.  def my_avg(x): sum_var = sum(x) len_var = len(x) return sum_var / len_var print(my_avg(x)) 3.0   기본적인 사용정의 함수는 크게 매개 변수와 return으로 이루어진다.</description>
    </item>
    
    <item>
      <title>머신러닝 데이터 전처리 1 - 결측치 처리</title>
      <link>https://chloevan.github.io/python/python_edu/04_machinelearning/chapter_4_1_handling_missing_values/</link>
      <pubDate>Wed, 08 Jul 2020 18:00:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/04_machinelearning/chapter_4_1_handling_missing_values/</guid>
      <description>개요  EDA를 진행할 때, 결측치가 있는 데이터를 시각화 하여 결측치 유무를 파악하였다.  참조: EDA with Housing Price Prediction - Handling Missing Values   이번 포스트에서는 결측치를 처리하는 코드를 작성할 것이다.  I. 구글 드라이브 연동  구글 코랩을 시작하면 언제든지 가장 먼저 해야 하는 것은 드라이브 연동이다.  from google.colab import drive # 패키지 불러오기  from os.path import join ROOT = &amp;#34;/content/drive&amp;#34; # 드라이브 기본 경로 print(ROOT) # print content of ROOT (Optional) drive.</description>
    </item>
    
    <item>
      <title>데이콘 대회 참여 - 09 스태킹 알고리즘</title>
      <link>https://chloevan.github.io/python/dacon/jeju2020/09_stacking_algorithm/</link>
      <pubDate>Tue, 07 Jul 2020 18:01:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/dacon/jeju2020/09_stacking_algorithm/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
사전작업  먼저 구글 코랩 내에서 pandas_profiling을 확인하기 위해 master.zip을 설치한다.  ref. https://github.com/pandas-profiling/pandas-profiling   설치가 끝나면 구글코랩에서 런타임 다시 시작 한다.  !pip install https://github.com/pandas-profiling/pandas-profiling/archive/master.zip Collecting https://github.com/pandas-profiling/pandas-profiling/archive/master.zip . . . Successfully installed confuse-1.3.0 htmlmin-0.1.12 imagehash-4.1.0 pandas-profiling-2.8.0 phik-0.10.0 tangled-up-in-unicode-0.0.6 tqdm-4.47.0 visions-0.</description>
    </item>
    
    <item>
      <title>Github Project 포트폴리오</title>
      <link>https://chloevan.github.io/settings/github_settings/</link>
      <pubDate>Tue, 07 Jul 2020 13:11:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/settings/github_settings/</guid>
      <description>개요  본 포스트는 깃허브 프로젝트 관리에 관한 것이다.  I. 프로필 작성하기  이력서에 준하는 프로필 또는 유니크한 것을 살리는 것이 좋다. 깔끔한 정장을 입고, 이쁘게 화장을 하고, 면접을 보러가듯이 인사담당자가 보는 이로 하여금 좋은 인상을 심어줘야 한다. 성명, 이메일, 전화번호 등은 가급적 자세하게 기록해두는 것이 좋다. 프로젝트는 현재 진행중인 Pinned Repositories 상위 3~4개 정도 올려 놓는 것이 좋다.   만약에 현재 기여하는 오픈 소스 리퍼지토리가 있다면 반드시 메인 화면에 고정시킨다.</description>
    </item>
    
    <item>
      <title>데이콘 대회 참여 - 08 세개의 모델</title>
      <link>https://chloevan.github.io/python/dacon/jeju2020/08_gbm_xgboost_lightgbm/</link>
      <pubDate>Mon, 06 Jul 2020 16:01:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/dacon/jeju2020/08_gbm_xgboost_lightgbm/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
사전작업  먼저 구글 코랩 내에서 pandas_profiling을 확인하기 위해 master.zip을 설치한다.  ref. https://github.com/pandas-profiling/pandas-profiling   설치가 끝나면 구글코랩에서 런타임 다시 시작 한다.  !pip install https://github.com/pandas-profiling/pandas-profiling/archive/master.zip Collecting https://github.com/pandas-profiling/pandas-profiling/archive/master.zip Using cached https://github.com/pandas-profiling/pandas-profiling/archive/master.zip . . . Successfully built pandas-profiling  I. 빅쿼리 연동  지난 시간에 데이콘에서 내려받은 데이터를 빅쿼리에 넣는 작업을 진행하였다.</description>
    </item>
    
    <item>
      <title>Pandas Data Handling 1편</title>
      <link>https://chloevan.github.io/python/python_edu/02_datatransformation/pandas_data_handling_1/</link>
      <pubDate>Sun, 05 Jul 2020 16:00:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/02_datatransformation/pandas_data_handling_1/</guid>
      <description>I. Kaggle에서 타이타닉 데이터 가져오기  캐글 데이터 가져오는 예제는 본 Kaggle with Google Colab에서 참고하기를 바란다. 먼저 kaggle 패키지를 설치한다.  !pip install kaggle Requirement already satisfied: kaggle in /usr/local/lib/python3.6/dist-packages (1.5.6) Requirement already satisfied: urllib3&amp;lt;1.25,&amp;gt;=1.21.1 in /usr/local/lib/python3.6/dist-packages (from kaggle) (1.24.3) Requirement already satisfied: six&amp;gt;=1.10 in /usr/local/lib/python3.6/dist-packages (from kaggle) (1.12.0) Requirement already satisfied: python-dateutil in /usr/local/lib/python3.6/dist-packages (from kaggle) (2.8.1) Requirement already satisfied: tqdm in /usr/local/lib/python3.6/dist-packages (from kaggle) (4.41.1) Requirement already satisfied: python-slugify in /usr/local/lib/python3.</description>
    </item>
    
    <item>
      <title>데이콘 대회 참여 - 07 두개의 모델</title>
      <link>https://chloevan.github.io/python/dacon/jeju2020/07_gbm_xgboost/</link>
      <pubDate>Thu, 02 Jul 2020 09:01:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/dacon/jeju2020/07_gbm_xgboost/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
사전작업  먼저 구글 코랩 내에서 pandas_profiling을 확인하기 위해 master.zip을 설치한다.  ref. https://github.com/pandas-profiling/pandas-profiling   설치가 끝나면 구글코랩에서 런타임 다시 시작 한다.  !pip install https://github.com/pandas-profiling/pandas-profiling/archive/master.zip Collecting https://github.com/pandas-profiling/pandas-profiling/archive/master.zip Using cached https://github.com/pandas-profiling/pandas-profiling/archive/master.zip . . . Successfully built pandas-profiling  I. 빅쿼리 연동  지난 시간에 데이콘에서 내려받은 데이터를 빅쿼리에 넣는 작업을 진행하였다.</description>
    </item>
    
    <item>
      <title>데이콘 대회 참여 - 06 교차검증과 파라미터 튜닝</title>
      <link>https://chloevan.github.io/python/dacon/jeju2020/06_gbm_cross_val_and_parameter/</link>
      <pubDate>Wed, 01 Jul 2020 18:01:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/dacon/jeju2020/06_gbm_cross_val_and_parameter/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
사전작업  먼저 구글 코랩 내에서 pandas_profiling을 확인하기 위해 master.zip을 설치한다.  ref. https://github.com/pandas-profiling/pandas-profiling   설치가 끝나면 구글코랩에서 런타임 다시 시작 한다.  !pip install https://github.com/pandas-profiling/pandas-profiling/archive/master.zip Collecting https://github.com/pandas-profiling/pandas-profiling/archive/master.zip Using cached https://github.com/pandas-profiling/pandas-profiling/archive/master.zip . . . Successfully built pandas-profiling  I. 빅쿼리 연동  지난 시간에 데이콘에서 내려받은 데이터를 빅쿼리에 넣는 작업을 진행하였다.</description>
    </item>
    
    <item>
      <title>데이콘 대회 참여 - 05 GBM 파라미터 튜닝</title>
      <link>https://chloevan.github.io/python/dacon/jeju2020/05_gbm_parameter/</link>
      <pubDate>Tue, 30 Jun 2020 18:01:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/dacon/jeju2020/05_gbm_parameter/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
사전작업  먼저 구글 코랩 내에서 pandas_profiling을 확인하기 위해 master.zip을 설치한다.  ref. https://github.com/pandas-profiling/pandas-profiling   설치가 끝나면 구글코랩에서 런타임 다시 시작 한다.  !pip install https://github.com/pandas-profiling/pandas-profiling/archive/master.zip Collecting https://github.com/pandas-profiling/pandas-profiling/archive/master.zip Using cached https://github.com/pandas-profiling/pandas-profiling/archive/master.zip . . . Successfully built pandas-profiling  I. 빅쿼리 연동  지난 시간에 데이콘에서 내려받은 데이터를 빅쿼리에 넣는 작업을 진행하였다.</description>
    </item>
    
    <item>
      <title>데이콘 대회 참여 - 04 데이터셋 분리</title>
      <link>https://chloevan.github.io/python/dacon/jeju2020/04_data_split_gbm/</link>
      <pubDate>Tue, 30 Jun 2020 16:01:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/dacon/jeju2020/04_data_split_gbm/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
사전작업  먼저 구글 코랩 내에서 pandas_profiling을 확인하기 위해 master.zip을 설치한다.  ref. https://github.com/pandas-profiling/pandas-profiling   설치가 끝나면 구글코랩에서 런타임 다시 시작 한다.  !pip install https://github.com/pandas-profiling/pandas-profiling/archive/master.zip Collecting https://github.com/pandas-profiling/pandas-profiling/archive/master.zip Using cached https://github.com/pandas-profiling/pandas-profiling/archive/master.zip . . . Successfully built pandas-profiling  I. 빅쿼리 연동  지난 시간에 데이콘에서 내려받은 데이터를 빅쿼리에 넣는 작업을 진행하였다.</description>
    </item>
    
    <item>
      <title>데이콘 대회 참여 - 03 데이터 샘플링과 종속변수 로그변환</title>
      <link>https://chloevan.github.io/python/dacon/jeju2020/03_log_transformation_gbm/</link>
      <pubDate>Mon, 29 Jun 2020 23:01:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/dacon/jeju2020/03_log_transformation_gbm/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
사전작업  먼저 구글 코랩 내에서 pandas_profiling을 확인하기 위해 master.zip을 설치한다.  ref. https://github.com/pandas-profiling/pandas-profiling   설치가 끝나면 구글코랩에서 런타임 다시 시작 한다.  !pip install https://github.com/pandas-profiling/pandas-profiling/archive/master.zip Collecting https://github.com/pandas-profiling/pandas-profiling/archive/master.zip Using cached https://github.com/pandas-profiling/pandas-profiling/archive/master.zip . . . Successfully built pandas-profiling  I. 빅쿼리 연동  지난 시간에 데이콘에서 내려받은 데이터를 빅쿼리에 넣는 작업을 진행하였다.</description>
    </item>
    
    <item>
      <title>Python for loop example</title>
      <link>https://chloevan.github.io/python/python_edu/01_basic/chapter_3_5_for_loop_example/</link>
      <pubDate>Mon, 29 Jun 2020 10:10:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/01_basic/chapter_3_5_for_loop_example/</guid>
      <description>I. 개요  지난 시간에 for_loop의 기본적인 개념에 대해 살펴봤다.  참조: [Python] for loops in different ways   이번 시간에는 for_loop의 실제 다양한 활용 방안에 대해 살펴본다.  II. 데이터 시각화  변수의 개수에 상관없이 for-loop를 활용하면 무한대로 시각화를 작성할 수 있다. 빠르게 코드로 확인해본다. IRIS 데이터를 수집하는 코드를 작성한다.  import numpy as np import pandas as pd import matplotlib.pyplot as plt import seaborn as sns from sklearn import datasets iris = datasets.</description>
    </item>
    
    <item>
      <title>데이콘 대회 참여 - 02 GBM을 활용한 머신러닝 예제</title>
      <link>https://chloevan.github.io/python/dacon/jeju2020/02_review_gbm/</link>
      <pubDate>Sun, 28 Jun 2020 18:01:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/dacon/jeju2020/02_review_gbm/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
개요  본 예제에서는 제주 빅데이터 경진대회에서 제공하는 베이스라인 코드를 살려서 작성하였다. 처음 대회를 입문하는 데 있어서, 빠르게 제출하는 것에 의미부여를 하기 바란다.  참조: https://dacon.io/competitions/official/235615/codeshare/1228   다만, 데이터를 불러오는 영역 및 머신러닝 모형 알고리즘만 조금 수정하였다. 향후 매일 업데이트 하면서 일종의 가이드라인이 되었으면 좋겠다.</description>
    </item>
    
    <item>
      <title>Python for loops in different ways</title>
      <link>https://chloevan.github.io/python/python_edu/01_basic/chapter_3_4_for_loop/</link>
      <pubDate>Sat, 27 Jun 2020 18:42:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/01_basic/chapter_3_4_for_loop/</guid>
      <description>I. 개요  여러 형태의 반복문을 배우고 실습한다. 한줄로 작성하는 반복문을 배우고 실습한다.  II. For Loop Basic Syntax  파이썬의 기본 문법은 아래와 같다.  for &amp;lt;변수&amp;gt; in &amp;lt;iterable&amp;gt;: &amp;lt;코드&amp;gt;  여기에서 iterable의 개념은 list와 tuple을 의미한다. 간단하게 for_loop 코드를 작성해보자.  우선, A라는 리스트 객체를 작성한다. for_loop를 활용해서 리스트 안에 있는 것을 하나씩 출력한다.    A = [&amp;#34;철수&amp;#34;, &amp;#34;영희&amp;#34;, &amp;#34;길동&amp;#34;] for i in A: print(i) 철수 영희 길동 (1) Iterables  Iteration을 한국어로 번역하면 되풀이다.</description>
    </item>
    
    <item>
      <title>If else, and more</title>
      <link>https://chloevan.github.io/python/python_edu/01_basic/chapter_3_3_if_else/</link>
      <pubDate>Thu, 25 Jun 2020 21:42:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/01_basic/chapter_3_3_if_else/</guid>
      <description>I. 개요  조건문에 대해 배우고 실습하는 시간을 갖는다. else와 elif에 대해 배우고 실습한다. 한줄로 작성하는 if_else에 대해 배우고 실습한다.  II. If 조건문 소개  Excel을 배운 사람이라면 누구나 아는 문법이다.  다만, 위 문법을 파이썬 언어에 맞게 변형한 것이다.    if &amp;lt;조건=True&amp;gt;: &amp;lt;코드1&amp;gt; &amp;lt;코드2&amp;gt; (1) 언제 실행되는가?   위 구문의 뜻이 무엇인가?
 프로그래밍 처음 입문하는 사람이라면, 조금 난해할 수 있다. 그러나, 절대 어렵지 않다. 조건이 True 이면 &amp;lt;코드1&amp;gt;과 &amp;lt;코드2&amp;gt;를 실행한다.</description>
    </item>
    
    <item>
      <title>About Dictionaries</title>
      <link>https://chloevan.github.io/python/python_edu/01_basic/chapter_3_2_dictionary/</link>
      <pubDate>Sat, 20 Jun 2020 10:42:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/01_basic/chapter_3_2_dictionary/</guid>
      <description>I. 개요  이번 시간부터 본격적으로 파이썬의 기초 자료형에 대해 간단한 튜토리얼을 준비했다. 데이터 분석과는 큰 관계가 없을 수 있지만, 데이터 정제 할 때, 도움이 되기도 한다. 그 중에서 면접의 단골질문과 같은 Dictionary에 대해 나누는 시간을 가졌다.  II. Dictionary의 기본적인 특징  Dictionary는 영어 원뜻 그대로 사전을 생각하면 된다. Dictionary는 List와 유사한 부분이 많다.  List와 같이 Mutable이라는 뜻을 포함한다. List와 같이 다른 Dictionary, list 등을 포함시킬 수 있다.   차이점은 원소에 대한 접근방법의 차이다.</description>
    </item>
    
    <item>
      <title>The difference betwen Lists and Tuples in Python</title>
      <link>https://chloevan.github.io/python/python_edu/01_basic/chapter_3_1_lists_and_tuples/</link>
      <pubDate>Thu, 18 Jun 2020 01:10:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/01_basic/chapter_3_1_lists_and_tuples/</guid>
      <description>I. 개요  이번 시간부터 본격적으로 파이썬의 기초 자료형에 대해 간단한 튜토리얼을 준비했다. 데이터 분석과는 큰 관계가 없을 수 있지만, 데이터 정제 할 때, 도움이 되기도 한다. 그 중에서 면접의 단골질문과 같은 Lists &amp;amp; Tuple에 대해 나누는 시간을 가졌다.  II. Lists  먼저 Lists는 [] 형태로 정의가 된다.  alphabet = [&amp;#39;A&amp;#39;, &amp;#39;B&amp;#39;, &amp;#39;C&amp;#39;, &amp;#39;D&amp;#39;] print(alphabet) [&#39;A&#39;, &#39;B&#39;, &#39;C&#39;, &#39;D&#39;]   코드는 간단하다. 그러나 함의하고 있는 내용은 다음과 같다.</description>
    </item>
    
    <item>
      <title>EDA with Housing Price Prediction - Handling Outliers</title>
      <link>https://chloevan.github.io/kaggle/chapter_2_11_eda_with_outliers/</link>
      <pubDate>Tue, 16 Jun 2020 10:30:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/kaggle/chapter_2_11_eda_with_outliers/</guid>
      <description>I. 개요  이제 본격적으로 Kaggle 데이터를 활용하여 분석을 진행한다. 데이터는 이미 다운 받은 상태를 전제로 하며, 만약에 데이터가 없다면 이전 포스팅에서 절차를 확인하기 바란다. (미리보기 가능)  캐글 데이터 다운로드 받기 (via Colab)    II. 구글 드라이브 연동  구글 코랩을 시작하면 언제든지 가장 먼저 해야 하는 것은 드라이브 연동이다.  from google.colab import drive # 패키지 불러오기 from os.path import join ROOT = &amp;quot;/content/drive&amp;quot; # 드라이브 기본 경로 print(ROOT) # print content of ROOT (Optional) drive.</description>
    </item>
    
    <item>
      <title>EDA with Housing Price Prediction - Handling Missing Values</title>
      <link>https://chloevan.github.io/kaggle/chapter_2_10_eda_with_missingvalues/</link>
      <pubDate>Sat, 13 Jun 2020 10:30:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/kaggle/chapter_2_10_eda_with_missingvalues/</guid>
      <description>I. 개요  이제 본격적으로 Kaggle 데이터를 활용하여 분석을 진행한다. 데이터는 이미 다운 받은 상태를 전제로 하며, 만약에 데이터가 없다면 이전 포스팅에서 절차를 확인하기 바란다. (미리보기 가능)  캐글 데이터 다운로드 받기 (via Colab)    II. 구글 드라이브 연동  구글 코랩을 시작하면 언제든지 가장 먼저 해야 하는 것은 드라이브 연동이다.  from google.colab import drive # 패키지 불러오기 from os.path import join ROOT = &amp;quot;/content/drive&amp;quot; # 드라이브 기본 경로 print(ROOT) # print content of ROOT (Optional) drive.</description>
    </item>
    
    <item>
      <title>Python 사용자 정의 함수에 대한 이해 2편 - Simple Decorator</title>
      <link>https://chloevan.github.io/python/basic/understanding_function_simpledecorator/</link>
      <pubDate>Fri, 12 Jun 2020 17:20:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/basic/understanding_function_simpledecorator/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
I. 개요  Functions와 Decorators에 관해 나누려고 한다. function는 우리가 생각하는 그 함수가 맞다. decorator도 함수인데, 일종의 확장 개념으로 생각하면 좋다. 지난 시간에 Python 사용자 정의 함수에 대한 이해 1편 - Inner Function를 통해 함수의 기본적인 작동 원리에 대해 배웠다.  II.</description>
    </item>
    
    <item>
      <title>EDA with Housing Price Prediction - Handling Categorical Variables</title>
      <link>https://chloevan.github.io/kaggle/chapter_2_9_eda_with_categorical_features/</link>
      <pubDate>Fri, 12 Jun 2020 10:30:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/kaggle/chapter_2_9_eda_with_categorical_features/</guid>
      <description>I. 개요  이제 본격적으로 Kaggle 데이터를 활용하여 분석을 진행한다. 데이터는 이미 다운 받은 상태를 전제로 하며, 만약에 데이터가 없다면 이전 포스팅에서 절차를 확인하기 바란다. (미리보기 가능)  캐글 데이터 다운로드 받기 (via Colab)    II. 구글 드라이브 연동  구글 코랩을 시작하면 언제든지 가장 먼저 해야 하는 것은 드라이브 연동이다.  from google.colab import drive # 패키지 불러오기 from os.path import join ROOT = &amp;quot;/content/drive&amp;quot; # 드라이브 기본 경로 print(ROOT) # print content of ROOT (Optional) drive.</description>
    </item>
    
    <item>
      <title>EDA with Housing Price Prediction - Handling Continuous Variables</title>
      <link>https://chloevan.github.io/kaggle/chapter_2_8_eda_with_continous_features/</link>
      <pubDate>Thu, 11 Jun 2020 10:30:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/kaggle/chapter_2_8_eda_with_continous_features/</guid>
      <description>I. 개요  이제 본격적으로 Kaggle 데이터를 활용하여 분석을 진행한다. 데이터는 이미 다운 받은 상태를 전제로 하며, 만약에 데이터가 없다면 이전 포스팅에서 절차를 확인하기 바란다. (미리보기 가능)  캐글 데이터 다운로드 받기 (via Colab)    II. 구글 드라이브 연동  구글 코랩을 시작하면 언제든지 가장 먼저 해야 하는 것은 드라이브 연동이다.  from google.colab import drive # 패키지 불러오기 from os.path import join ROOT = &amp;quot;/content/drive&amp;quot; # 드라이브 기본 경로 print(ROOT) # print content of ROOT (Optional) drive.</description>
    </item>
    
    <item>
      <title>Python 사용자 정의 함수에 대한 이해 1편 - Inner Function</title>
      <link>https://chloevan.github.io/python/basic/understanding_function_innerfunction/</link>
      <pubDate>Wed, 10 Jun 2020 01:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/basic/understanding_function_innerfunction/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
I. 개요  Functions와 Decorators에 관해 나누려고 한다. function는 우리가 생각하는 그 함수가 맞다. decorator도 함수인데, 일종의 확장 개념으로 생각하면 좋다.  II. Simple Tutorial  먼저 간단한 함수를 만들자.  def add_one(number): return number + 1 add_one(2) 3   일반적으로 파이썬의 함수들은 단지 입출력에 대한 단순한 내용 보다는 side effects 또한 함의하고 있다.</description>
    </item>
    
    <item>
      <title>EDA with Housing Price Prediction - Handling Discrete Variables</title>
      <link>https://chloevan.github.io/kaggle/chapter_2_7_eda_with_discrete_features/</link>
      <pubDate>Tue, 09 Jun 2020 22:30:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/kaggle/chapter_2_7_eda_with_discrete_features/</guid>
      <description>I. 개요  이제 본격적으로 Kaggle 데이터를 활용하여 분석을 진행한다. 데이터는 이미 다운 받은 상태를 전제로 하며, 만약에 데이터가 없다면 이전 포스팅에서 절차를 확인하기 바란다. (미리보기 가능)  캐글 데이터 다운로드 받기 (via Colab)    II. 구글 드라이브 연동  구글 코랩을 시작하면 언제든지 가장 먼저 해야 하는 것은 드라이브 연동이다.  from google.colab import drive # 패키지 불러오기 from os.path import join ROOT = &amp;quot;/content/drive&amp;quot; # 드라이브 기본 경로 print(ROOT) # print content of ROOT (Optional) drive.</description>
    </item>
    
    <item>
      <title>EDA with Housing Price Prediction - Handling Date</title>
      <link>https://chloevan.github.io/kaggle/chapter_2_5_eda_with_date/</link>
      <pubDate>Mon, 08 Jun 2020 11:30:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/kaggle/chapter_2_5_eda_with_date/</guid>
      <description>I. 개요  이제 본격적으로 Kaggle 데이터를 활용하여 분석을 진행한다. 데이터는 이미 다운 받은 상태를 전제로 하며, 만약에 데이터가 없다면 이전 포스팅에서 절차를 확인하기 바란다. (미리보기 가능)  캐글 데이터 다운로드 받기 (via Colab)    II. 구글 드라이브 연동  구글 코랩을 시작하면 언제든지 가장 먼저 해야 하는 것은 드라이브 연동이다.  from google.colab import drive # 패키지 불러오기  from os.path import join ROOT = &amp;#34;/content/drive&amp;#34; # 드라이브 기본 경로 print(ROOT) # print content of ROOT (Optional) drive.</description>
    </item>
    
    <item>
      <title>EDA with Housing Price Prediction - Data Import</title>
      <link>https://chloevan.github.io/kaggle/chapter_2_4_eda_data_import/</link>
      <pubDate>Sun, 07 Jun 2020 18:30:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/kaggle/chapter_2_4_eda_data_import/</guid>
      <description>I. 개요  이제 본격적으로 Kaggle 데이터를 활용하여 분석을 진행한다. 데이터는 이미 다운 받은 상태를 전제로 하며, 만약에 데이터가 없다면 이전 포스팅에서 절차를 확인하기 바란다. (미리보기 가능)  캐글 데이터 다운로드 받기 (via Colab)    II. 구글 드라이브 연동  구글 코랩을 시작하면 언제든지 가장 먼저 해야 하는 것은 드라이브 연동이다.  from google.colab import drive # 패키지 불러오기 from os.path import join ROOT = &amp;quot;/content/drive&amp;quot; # 드라이브 기본 경로 print(ROOT) # print content of ROOT (Optional) drive.</description>
    </item>
    
    <item>
      <title>캐글 데이터 다운로드 받기 (via Colab)</title>
      <link>https://chloevan.github.io/kaggle/colab_with_drive/</link>
      <pubDate>Sun, 07 Jun 2020 16:30:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/kaggle/colab_with_drive/</guid>
      <description>I. 개요  데이터 시각화와 변환에 대해 짧게 익혔다면 바로 실전 데이터를 활용한다. 이론이 조금 부족하게 느껴질 수 있지만, 모든 것을 다 알려드릴 수는 없다.  결국 공부는 스스로 해야 한다.   이 강의의 목적이 Kaggle 데이터를 활용한 Python 포트폴리오 제작 강의임을 잊지 말자. 이번 시간에는 Kaggle 데이터를 구글 드라이브로 다운로드 받는 방법에 대해 작성하였다.  II. Kaggle KPI 설치  Google Colab에서 Kaggle API를 불러오려면 다음 소스코드를 실행한다.  !</description>
    </item>
    
    <item>
      <title>EDA with Pandas - Data Merge</title>
      <link>https://chloevan.github.io/python/python_edu/02_datatransformation/chapter_1_4_python_pandas_merge_solution/</link>
      <pubDate>Fri, 05 Jun 2020 13:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/02_datatransformation/chapter_1_4_python_pandas_merge_solution/</guid>
      <description>I. 개요  실무 데이터에서는 여러가지 데이터를 만나는 경우가 흔하다. 이 때, SQL에서 데이터를 직접 병합하는 방법이 좋다. 그러나, 현실적으로 DB에 접근하는 권한을 가진 경우는 흔하지는 않다. 현재 운영중인 서비스상에 DB를 직접 만지는 경우는 거의 없다 (DBA가 할지도..) 따라서, 데이터분석가는 흩어져 있는 데이터 Dump를 받게 될 가능성이 큰데, 이 때 Python에서 데이터를 병합하는 작업을 진행하게 된다. Kaggle이나 각종 경진대회에 출전하게 되면 서로 다른 데이터를 합쳐야 하는 경우가 매우 많다.  II.</description>
    </item>
    
    <item>
      <title>EDA with Personal Email - Data Import</title>
      <link>https://chloevan.github.io/python/python_edu/05_miniproject/02_eda_with_personal_email_dataimport/</link>
      <pubDate>Thu, 04 Jun 2020 16:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/05_miniproject/02_eda_with_personal_email_dataimport/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
I. Matplotlib &amp;amp; Seaborn (1) 기본 개요 Matplotlib는 파이썬 표준 시각화 도구라고 불리워지며 파이썬 그래프의 기본 토대가 된다고 해도 무방하다. 객체지향 프로그래밍을 지원하므로 세세하게 꾸밀 수 있다.
Seaborn 그래는 파이썬 시각화 도구의 고급 버전이다. Matplotlib에 비해 비교적 단순한 인터페이스를 제공하기 때문에 초보자도 어렵지 않게 배울 수 있다.</description>
    </item>
    
    <item>
      <title>Chapter_1_2_Python_visualisation_seaborn</title>
      <link>https://chloevan.github.io/python/python_edu/01_basic/step1_visualisation/chapter_1_2_python_visualisation_seaborn/</link>
      <pubDate>Thu, 04 Jun 2020 10:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/01_basic/step1_visualisation/chapter_1_2_python_visualisation_seaborn/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
I. Matplotlib &amp;amp; Seaborn (1) 기본 개요 Matplotlib는 파이썬 표준 시각화 도구라고 불리워지며 파이썬 그래프의 기본 토대가 된다고 해도 무방하다. 객체지향 프로그래밍을 지원하므로 세세하게 꾸밀 수 있다.
Seaborn 그래는 파이썬 시각화 도구의 고급 버전이다. Matplotlib에 비해 비교적 단순한 인터페이스를 제공하기 때문에 초보자도 어렵지 않게 배울 수 있다.</description>
    </item>
    
    <item>
      <title>Chapter_1_1_Python_visualisation_intro</title>
      <link>https://chloevan.github.io/python/python_edu/01_basic/step1_visualisation/chapter_1_1_python_visualisation_intro/</link>
      <pubDate>Wed, 03 Jun 2020 16:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/01_basic/step1_visualisation/chapter_1_1_python_visualisation_intro/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
I. Matplotlib (1) 기본 개요 Matplotlib는 파이썬 표준 시각화 도구라고 불리워지며 파이썬 그래프의 기본 토대가 된다고 해도 무방하다. 객체지향 프로그래밍을 지원하므로 세세하게 꾸밀 수 있다.
Seaborn 그래는 파이썬 시각화 도구의 고급 버전이다. Matplotlib에 비해 비교적 단순한 인터페이스를 제공하기 때문에 초보자도 어렵지 않게 배울 수 있다.</description>
    </item>
    
    <item>
      <title>EDA with Python - Pandas</title>
      <link>https://chloevan.github.io/python/python_edu/01_basic/chapter_1_3_eda_with_pandas/</link>
      <pubDate>Mon, 01 Jun 2020 18:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/01_basic/chapter_1_3_eda_with_pandas/</guid>
      <description>I. 개요  Pandas는 panel data의 의미를 가지고 있다. 흔히, 엑셀 데이터로 불리우는 관계형(Relational) 또는 레이블링된(Labeling)된 데이터를 보다 쉽게, 직관적으로 작업할 수 있도록 설계되어 있다. Python에서 데이터 분석을 수행하기 위한 매우 기초적이며 높은 수준의 문법을 제공한다. Pandas는 크게 Series &amp;amp; DataFrame을 다룰 수 있도록 기초 문법을 제공하고 있다. Pandas가 다루는 여러 종류의 데이터를 확인해보자.  SQL 테이블 또는 Excel 스프레드시트에서와 같이 형식의 행과 열이 있는 표 형식 데이터 순서 및 순서 지정되지 않은(고정 빈도일 필요는 없음) 시계열 데이터.</description>
    </item>
    
    <item>
      <title>EDA with Python - NumPy Broadcasting</title>
      <link>https://chloevan.github.io/python/python_edu/01_basic/chapter_1_2_eda_with_numpy_broadcasting/</link>
      <pubDate>Mon, 01 Jun 2020 13:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/01_basic/chapter_1_2_eda_with_numpy_broadcasting/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
I. 개요  NumPy는 C언어로 구성되었으며, 고성능의 수치계산을 위해 나온 패키지이며, Numerical Python의 약자이다. Python을 활용한 데이터 분석을 수행할 때, 그리고 데이터 시각화나 전처리를 수행할 때, NumPy는 매우 자주 사용되기 때문에 한번쯤은 꼭 다듬고 가는 것이 중요하다. 이전 포스트에서는 Python - NumPy 소개 및 다양한 객체 생성에 대해 다루었으니, 본 포스트 읽기에 앞서서 기본적인 개념에 대해 확인하기를 바란다.</description>
    </item>
    
    <item>
      <title>EDA with Python - NumPy basic</title>
      <link>https://chloevan.github.io/python/python_edu/01_basic/chapter_1_1_eda_with_numpy_basic/</link>
      <pubDate>Sun, 31 May 2020 13:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/01_basic/chapter_1_1_eda_with_numpy_basic/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
I. 개요  파이썬 처음 입문하는 사람들을 위해서 작성하였다. 탐색작 자료분석(EDA: Exploratory Data Analysis)을 위해 가장 기초적인 뼈대가 되는 NumPy에 대해서 학습하도록 합니다.  II. Array 만들기  1차원, 2차원, 3차원의 Array를 만들고 학습니다. 먼저 numpy 라이브러리를 불러옵니다.  # import numpy import numpy as np print(np.</description>
    </item>
    
    <item>
      <title>EDA with Personal Email - Overview</title>
      <link>https://chloevan.github.io/python/python_edu/05_miniproject/01_eda_with_personal_email_overview/</link>
      <pubDate>Sun, 31 May 2020 11:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/05_miniproject/01_eda_with_personal_email_overview/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
I. Matplotlib &amp;amp; Seaborn (1) 기본 개요 Matplotlib는 파이썬 표준 시각화 도구라고 불리워지며 파이썬 그래프의 기본 토대가 된다고 해도 무방하다. 객체지향 프로그래밍을 지원하므로 세세하게 꾸밀 수 있다.
Seaborn 그래는 파이썬 시각화 도구의 고급 버전이다. Matplotlib에 비해 비교적 단순한 인터페이스를 제공하기 때문에 초보자도 어렵지 않게 배울 수 있다.</description>
    </item>
    
    <item>
      <title>Google Colab Intro</title>
      <link>https://chloevan.github.io/python/python_edu/00_settings/chapter_0_1_google_colab/</link>
      <pubDate>Sat, 30 May 2020 21:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/00_settings/chapter_0_1_google_colab/</guid>
      <description>I. 들어가며  빅데이터 시대에 맞춰서 다양한 툴이 나오는 가운데, Google Colab은 가히 혁명적이라 할 수 있다. 과거 높은 사양의 컴퓨터에서만 수행할 수 있었던 머신러닝과 딥러닝을 구글 코랩의 환경에서 무료로 배울 수 있는 기회를 구글이 제공하기 시작했다. 간단하게 아래 소스코드를 실행하여 CPU와 GPU의 연산속도를 비교 해보자.  GPU를 사용한 TensorFlow    II. Data Transformation 예제  이제 간단하게 데이터 가공의 예를 실습해보자.  (1) 딕셔너리에서 시리즈로 변환하기  다음의 소스코드를 실행하여 딕셔너리에서 시리즈로 변환하는 것을 실습해보자.</description>
    </item>
    
    <item>
      <title>Data Transformation - Merging Data</title>
      <link>https://chloevan.github.io/python/python_edu/02_datatransformation/01_data_transformation_merging_data/</link>
      <pubDate>Fri, 29 May 2020 14:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/python_edu/02_datatransformation/01_data_transformation_merging_data/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
 데이터는 코로나 데이터를 활용했다.  I. Data Transform Overview   데이터 변환은 데이터를 하나의 형식이나 구조에서 다른 형식이나 구조로 변환하는 데 사용되는 기법이다.
 Data deduplication 데이터 중복 제거에는 중복된 데이터 식별 및 제거가 포함된다. Key restructuring 의미가 내장된 모든 키를 일반 키로 변환하는 것을 포함한다.</description>
    </item>
    
    <item>
      <title>matplotlib - 09 lollipop</title>
      <link>https://chloevan.github.io/python/matplotlib/matplotlib_09_lollipop_chart/</link>
      <pubDate>Tue, 26 May 2020 11:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/matplotlib/matplotlib_09_lollipop_chart/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
I. Matplotlib &amp;amp; Seaborn (1) 기본 개요 Matplotlib는 파이썬 표준 시각화 도구라고 불리워지며 파이썬 그래프의 기본 토대가 된다고 해도 무방하다. 객체지향 프로그래밍을 지원하므로 세세하게 꾸밀 수 있다.
Seaborn 그래는 파이썬 시각화 도구의 고급 버전이다. Matplotlib에 비해 비교적 단순한 인터페이스를 제공하기 때문에 초보자도 어렵지 않게 배울 수 있다.</description>
    </item>
    
    <item>
      <title>Kakao Arena 3 EDA on Google Colab</title>
      <link>https://chloevan.github.io/settings/kakao_arena_3_eda/</link>
      <pubDate>Sun, 24 May 2020 13:11:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/settings/kakao_arena_3_eda/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
이전 포스트인 Colab + Drive + Github Workflow 실전 테스트용으로 생각하면서 읽어주기를 바란다.
I. 개요  프로젝트 폴더 내에서 간단하게 EDA를 실습하는 시간을 갖도록 한다. 관련 패키지는 우선 다른 곳에서 설치 되었다는 것을 가정한다.  참고: Python Package Settings on Google Colab   본 포스트의 핵심은 환경설정이 Google Colab + Drive내에서 작업하는 것이다.</description>
    </item>
    
    <item>
      <title>Colab &#43; Drive &#43; Github Workflow</title>
      <link>https://chloevan.github.io/settings/colab_drive_github_settings/</link>
      <pubDate>Sun, 24 May 2020 11:11:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/settings/colab_drive_github_settings/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
I. 동기 부여 및 개요   Google Colab을 알게 된 이후에, 모든 파일을 가급적 여기에서 작성을 한다.
  Why?
 첫째, GPU를 무료로 사용할 수 있다. 둘째, 맥북에어의 저용량을 쓰는 나에게 있어, 시스템 파일 등을 Local로 내려받는데 버거움이 있다. 셋째, 온라인 강의 및 책을 협업해서 써야 하는데, 각 Local 환경을 구축하는 번거로움을 없애고 싶었다.</description>
    </item>
    
    <item>
      <title>Python Package Settings on Google Colab</title>
      <link>https://chloevan.github.io/settings/colab_package_settings/</link>
      <pubDate>Sat, 23 May 2020 21:01:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/settings/colab_package_settings/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
I. 개요  교육상, 최근 kaggle 및 국내 경진 대회에 참여할 일이 생겼다. 실습을 해보니, 매번 패키지와 파일을 다운로드 받는 것이 많이 불편했다.  파일을 열 때마다, !pip install name_of_package을 실행해야 하는 번거로움이 있다.   이러한 해결책으로 파이썬 패키지를 Google Colab에 영구적(Permantly)으로 설치하는 것을 실습한다.</description>
    </item>
    
    <item>
      <title>competition - M5 EDA</title>
      <link>https://chloevan.github.io/kaggle/competition_m5_eda_1/</link>
      <pubDate>Thu, 21 May 2020 17:12:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/kaggle/competition_m5_eda_1/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
I. 개요  Kaggle에서 데이터를 다운로드 하는 방법에 대해서는 생략한다. 본 포스트는 Google Colab을 기반으로 작성하였다. Kaggle + Google Colab 데이터 연동하는 방법은 이전 포스트를 참고한다.  Kaggle with Google Colab     데이터는 크게 4가지로 구성되어 있다. (원문 인용)  calendar.</description>
    </item>
    
    <item>
      <title>Kaggle with Google Colab</title>
      <link>https://chloevan.github.io/settings/kaggle_with_colab/</link>
      <pubDate>Wed, 20 May 2020 08:12:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/settings/kaggle_with_colab/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
I. 개요  Kaggle 대회에서 나오는 데이터의 용량은 작은 편은 아니다. 성능이 적은 노트북을 사용해야 하는 경우라면 Google Colab을 사용해야 한다. 이 때, Kaggle 데이터를 Google Colab으로 다운로드 받는 과정에 대해 기술 하려고 한다.  II. 캐글 계정에서 해야 할 것  먼저 본인의 계정에서 API Token을 다운로드 받는다.</description>
    </item>
    
    <item>
      <title>matplotlib - 08 Histogram</title>
      <link>https://chloevan.github.io/python/matplotlib/matplotlib_08_histogram/</link>
      <pubDate>Tue, 19 May 2020 15:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/matplotlib/matplotlib_08_histogram/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
I. Matplotlib &amp;amp; Seaborn (1) 기본 개요 Matplotlib는 파이썬 표준 시각화 도구라고 불리워지며 파이썬 그래프의 기본 토대가 된다고 해도 무방하다. 객체지향 프로그래밍을 지원하므로 세세하게 꾸밀 수 있다.
Seaborn 그래는 파이썬 시각화 도구의 고급 버전이다. Matplotlib에 비해 비교적 단순한 인터페이스를 제공하기 때문에 초보자도 어렵지 않게 배울 수 있다.</description>
    </item>
    
    <item>
      <title>Python - NumPy 소개 및 다양한 객체 생성</title>
      <link>https://chloevan.github.io/python/basic/numpy_array_creation/</link>
      <pubDate>Fri, 15 May 2020 16:12:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/basic/numpy_array_creation/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
I. 개요  NumPy는 C언어로 구성되었으며, 고성능의 수치계산을 위해 나온 패키지이며, Numerical Python의 약자이다. Python을 활용한 데이터 분석을 수행할 때, 그리고 데이터 시각화나 전처리를 수행할 때, NumPy는 매우 자주 사용되기 때문에 한번쯤은 꼭 다듬고 가는 것이 중요하다. 독자의 가독성을 위해 두번에 걸쳐 나눠서 연재하려고 한다.</description>
    </item>
    
    <item>
      <title>Python - Pandas 병렬처리</title>
      <link>https://chloevan.github.io/python/pandas/pandas_lambda_swifter/</link>
      <pubDate>Wed, 13 May 2020 14:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/pandas/pandas_lambda_swifter/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
지난 포스트에서는 lambda의 기본적인 개념에 대해서 익혔다면, 이제 본격적인 데이터 전처리와 관련된 예제를 올리려고 한다.
 Python - Lambda and List Comprehension  II. 가상의 데이터셋 만들기  25M 행과 5개의 열로 구성된 가상의 숫자 데이터 프레임을 만들어보자.  import pandas as pd import numpy as np from tabulate import tabulate pd_temp = pd.</description>
    </item>
    
    <item>
      <title>Python - Lambda and List Comprehension</title>
      <link>https://chloevan.github.io/python/basic/lambda_and_list_comprehension/</link>
      <pubDate>Tue, 12 May 2020 17:12:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/basic/lambda_and_list_comprehension/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
I. 개요 Python을 활용한 데이터전처리를 수행할 때, Lambda and List Comprehension 활용하면 매우 handy한 경험을 할 수 있다. 특히, 코드 수행 시, for-loop가 많을 때 유용하다.
II. Lambda Expression 우선 Lambda의 표현 방법은 아래와 같다.
lambda 인자 : 표현식 어떻게 사용할 수 있을까요?</description>
    </item>
    
    <item>
      <title>Python Basic Syntax - list(1)</title>
      <link>https://chloevan.github.io/python/basic/basic_syntax_list_1/</link>
      <pubDate>Tue, 12 May 2020 11:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/basic/basic_syntax_list_1/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
본 포스트에서는 짧게 list를 만드는 법과, 값을 추가하는 것에 대해 작성합니다.
I. list 개요 list는 순서는 순서가 있는 집합이며, [] 형태를 가집니다. list는 (integer, float, string, etc) 등으로 구성되는데, 서로 다른 데이터 값이 들어올 수도 있다. 아래 코드를 보자.
# empty list my_list = [] # 숫자형 list num_list = [1, 2, 3] # 문자형 list chr_list = [&amp;#39;A&amp;#39;, &amp;#39;B&amp;#39;, &amp;#39;C&amp;#39;] 리스트는 또다른 리스트를 포함할 수 도 있다.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Tutorial ch9.5 - 이미지 분할</title>
      <link>https://chloevan.github.io/python/tensorflow2.0/ch9_5_image_segmentation/</link>
      <pubDate>Mon, 11 May 2020 12:20:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/tensorflow2.0/ch9_5_image_segmentation/</guid>
      <description>공지   본 Tutorial은 교재 시작하세요 텐서플로 2.0 프로그래밍의 강사에게 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다.
  강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶으신 분은 반드시 교재를 구매하실 것을 권해드립니다.
   본 교재 외에 강사가 추가한 내용에 대한 Reference를 확인하셔서, 추가적으로 학습하시는 것을 권유드립니다.  Tutorial 이전 강의가 궁금하신 분들은 아래에서 선택하여 추가 학습 하시기를 바랍니다.
 Google Colab Tensorflow 2.</description>
    </item>
    
    <item>
      <title>matplotlib 07 Polar Chart</title>
      <link>https://chloevan.github.io/python/matplotlib/matplotlib_07_polar_chart/</link>
      <pubDate>Sat, 09 May 2020 15:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/matplotlib/matplotlib_07_polar_chart/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
I. Matplotlib &amp;amp; Seaborn (1) 기본 개요 Matplotlib는 파이썬 표준 시각화 도구라고 불리워지며 파이썬 그래프의 기본 토대가 된다고 해도 무방하다. 객체지향 프로그래밍을 지원하므로 세세하게 꾸밀 수 있다.
Seaborn 그래는 파이썬 시각화 도구의 고급 버전이다. Matplotlib에 비해 비교적 단순한 인터페이스를 제공하기 때문에 초보자도 어렵지 않게 배울 수 있다.</description>
    </item>
    
    <item>
      <title>Automate Excel Reporting With Pandas</title>
      <link>https://chloevan.github.io/python/rpa/automate_excel_reporting_with_pandas/</link>
      <pubDate>Fri, 08 May 2020 01:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/rpa/automate_excel_reporting_with_pandas/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
 데이터는 코로나 데이터를 활용했다.  I. Overview 일부의 사람들이 R과 Python을 사용하지만, 대부분의 사람들은 엑셀을 사용한다. 피벗테이블은 모든 직장인이 알아야 하는 필수 용어로, 전체 데이터를 빠르게 요약해주는 일종의 skill이다.
오늘 배울 포스트는 피벗 테이블 작성과 파이썬에서 만들어진 그래프를 엑셀 파일에 포함하여 내보내는 예제를 준비하였다.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Tutorial ch9.4 - 초해상도</title>
      <link>https://chloevan.github.io/python/tensorflow2.0/ch9_4_super_resolution/</link>
      <pubDate>Thu, 07 May 2020 07:20:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/tensorflow2.0/ch9_4_super_resolution/</guid>
      <description>공지   본 Tutorial은 교재 시작하세요 텐서플로 2.0 프로그래밍의 강사에게 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다.
  강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶으신 분은 반드시 교재를 구매하실 것을 권해드립니다.
   본 교재 외에 강사가 추가한 내용에 대한 Reference를 확인하셔서, 추가적으로 학습하시는 것을 권유드립니다.  Tutorial 이전 강의가 궁금하신 분들은 아래에서 선택하여 추가 학습 하시기를 바랍니다.
 Google Colab Tensorflow 2.</description>
    </item>
    
    <item>
      <title>pandas pivot table</title>
      <link>https://chloevan.github.io/python/pandas/pandas_pivot_table/</link>
      <pubDate>Tue, 05 May 2020 14:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/pandas/pandas_pivot_table/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
 데이터는 코로나 데이터를 활용했다.  I. Overview 일부의 사람들이 R과 Python을 사용하지만, 대부분의 사람들은 엑셀을 사용한다. 피벗테이블은 모든 직장인이 알아야 하는 필수 용어로, 전체 데이터를 빠르게 요약해주는 일종의 skill이다.
II. 피벗 테이블 만들기 예제  이제 본격적으로 피벗 테이블을 만들어보자.  (1) 데이터 가져오기 데이터는 코로나 데이터를 활용한다.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Tutorial ch9.3 - 클러스터링</title>
      <link>https://chloevan.github.io/python/tensorflow2.0/ch9_3_k_means_clustering/</link>
      <pubDate>Mon, 04 May 2020 17:10:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/tensorflow2.0/ch9_3_k_means_clustering/</guid>
      <description>공지   본 Tutorial은 교재 시작하세요 텐서플로 2.0 프로그래밍의 강사에게 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다.
  강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶으신 분은 반드시 교재를 구매하실 것을 권해드립니다.
   본 교재 외에 강사가 추가한 내용에 대한 Reference를 확인하셔서, 추가적으로 학습하시는 것을 권유드립니다.  Tutorial 이전 강의가 궁금하신 분들은 아래에서 선택하여 추가 학습 하시기를 바랍니다.
 Google Colab Tensorflow 2.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Tutorial ch9.1-2 - 오토인코더 &amp; MNIST</title>
      <link>https://chloevan.github.io/python/tensorflow2.0/ch9_1_auto_encoder/</link>
      <pubDate>Sun, 03 May 2020 15:20:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/tensorflow2.0/ch9_1_auto_encoder/</guid>
      <description>공지   본 Tutorial은 교재 시작하세요 텐서플로 2.0 프로그래밍의 강사에게 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다.
  강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶으신 분은 반드시 교재를 구매하실 것을 권해드립니다.
   본 교재 외에 강사가 추가한 내용에 대한 Reference를 확인하셔서, 추가적으로 학습하시는 것을 권유드립니다.  Tutorial 이전 강의가 궁금하신 분들은 아래에서 선택하여 추가 학습 하시기를 바랍니다.
 Google Colab Tensorflow 2.</description>
    </item>
    
    <item>
      <title>Dealing with NA-01</title>
      <link>https://chloevan.github.io/python/transformation/dealing_with_na_01/</link>
      <pubDate>Sat, 02 May 2020 19:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/transformation/dealing_with_na_01/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
 원문: 6 Different Ways to Compensate for Missing Values In a Dataset (Data Imputation with examples)  I. Overview 실제 데이터를 다루다보면 여러가지 이유로 결측치와 마주하게 된다. 특별한 이유가 없다면, 현업에서는 당연히 NA를 처리해야 한다. 그렇지 않다면 데이터 분석(시각화, 통계, 머신러닝 모형)에 영향을 줄 수 밖에 없다.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Tutorial ch8.3.2 - 컨볼루션 신경망을 사용한 신경 스타일 전이</title>
      <link>https://chloevan.github.io/python/tensorflow2.0/ch8_3_2_neural_style_transfer/</link>
      <pubDate>Sat, 02 May 2020 15:20:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/tensorflow2.0/ch8_3_2_neural_style_transfer/</guid>
      <description>공지   본 Tutorial은 교재 시작하세요 텐서플로 2.0 프로그래밍의 강사에게 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다.
  강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶으신 분은 반드시 교재를 구매하실 것을 권해드립니다.
   본 교재 외에 강사가 추가한 내용에 대한 Reference를 확인하셔서, 추가적으로 학습하시는 것을 권유드립니다.  Tutorial 이전 강의가 궁금하신 분들은 아래에서 선택하여 추가 학습 하시기를 바랍니다.
 Google Colab Tensorflow 2.</description>
    </item>
    
    <item>
      <title>basic_loop</title>
      <link>https://chloevan.github.io/python/basic/basic_loop/</link>
      <pubDate>Sat, 02 May 2020 01:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/basic/basic_loop/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
I. 개요 파이썬 처음 입문하는 사람들을 위해서 작성하였다. Python으로 코드를 작성하다보면, 매우 빈번히 For-loop 구문을 확인할 수 있다. 간단한 코드로 For-loop를 확인해보자.
II. Loop over list 간단하게 for-loop를 작성해보자.
# double list num = [1.72, 1.67, 1.71, 1.89] for height in num: print(height) 1.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Tutorial ch8.3.1 - 컨볼루션 신경망을 사용한 텍스처 합성</title>
      <link>https://chloevan.github.io/python/tensorflow2.0/ch8_3_1_texture_synthesis/</link>
      <pubDate>Fri, 01 May 2020 17:20:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/tensorflow2.0/ch8_3_1_texture_synthesis/</guid>
      <description>공지   본 Tutorial은 교재 시작하세요 텐서플로 2.0 프로그래밍의 강사에게 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다.
  강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶으신 분은 반드시 교재를 구매하실 것을 권해드립니다.
   본 교재 외에 강사가 추가한 내용에 대한 Reference를 확인하셔서, 추가적으로 학습하시는 것을 권유드립니다.  Tutorial 이전 강의가 궁금하신 분들은 아래에서 선택하여 추가 학습 하시기를 바랍니다.
 Google Colab Tensorflow 2.</description>
    </item>
    
    <item>
      <title>matplotlib 06 Table Chart</title>
      <link>https://chloevan.github.io/python/matplotlib/matplotlib_06_table_chart/</link>
      <pubDate>Thu, 30 Apr 2020 19:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/matplotlib/matplotlib_06_table_chart/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
도움이 되었다면 Github에 Star를 눌러주세요.
 python_visualisation  I. Matplotlib &amp;amp; Seaborn (1) 기본 개요 Matplotlib는 파이썬 표준 시각화 도구라고 불리워지며 파이썬 그래프의 기본 토대가 된다고 해도 무방하다. 객체지향 프로그래밍을 지원하므로 세세하게 꾸밀 수 있다.
Seaborn 그래는 파이썬 시각화 도구의 고급 버전이다.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Tutorial ch8.2 - 전이 학습과 &amp; Kaggle 대회</title>
      <link>https://chloevan.github.io/python/tensorflow2.0/ch8_2_transfer_learning/</link>
      <pubDate>Wed, 29 Apr 2020 17:20:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/tensorflow2.0/ch8_2_transfer_learning/</guid>
      <description>공지   본 Tutorial은 교재 시작하세요 텐서플로 2.0 프로그래밍의 강사에게 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다.
  강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶으신 분은 반드시 교재를 구매하실 것을 권해드립니다.
   본 교재 외에 강사가 추가한 내용에 대한 Reference를 확인하셔서, 추가적으로 학습하시는 것을 권유드립니다.  Tutorial 이전 강의가 궁금하신 분들은 아래에서 선택하여 추가 학습 하시기를 바랍니다.
 Google Colab Tensorflow 2.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Tutorial ch8.1 - 텐서플로 허브</title>
      <link>https://chloevan.github.io/python/tensorflow2.0/ch8_1_tensorflow_hub/</link>
      <pubDate>Tue, 28 Apr 2020 17:20:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/tensorflow2.0/ch8_1_tensorflow_hub/</guid>
      <description>공지   본 Tutorial은 교재 시작하세요 텐서플로 2.0 프로그래밍의 강사에게 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다.
  강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶으신 분은 반드시 교재를 구매하실 것을 권해드립니다.
   본 교재 외에 강사가 추가한 내용에 대한 Reference를 확인하셔서, 추가적으로 학습하시는 것을 권유드립니다.  Tutorial 이전 강의가 궁금하신 분들은 아래에서 선택하여 추가 학습 하시기를 바랍니다.
 Google Colab Tensorflow 2.</description>
    </item>
    
    <item>
      <title>matplotlib 05 pie plot</title>
      <link>https://chloevan.github.io/python/matplotlib/matplotlib_05_pie_chart/</link>
      <pubDate>Mon, 27 Apr 2020 16:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/matplotlib/matplotlib_05_pie_chart/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
도움이 되었다면 Github에 Star를 눌러주세요.
 python_visualisation  I. Matplotlib &amp;amp; Seaborn (1) 기본 개요 Matplotlib는 파이썬 표준 시각화 도구라고 불리워지며 파이썬 그래프의 기본 토대가 된다고 해도 무방하다. 객체지향 프로그래밍을 지원하므로 세세하게 꾸밀 수 있다.
Seaborn 그래는 파이썬 시각화 도구의 고급 버전이다.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Tutorial ch7.4 - (2) 단어 단위 생성</title>
      <link>https://chloevan.github.io/python/tensorflow2.0/ch7_4_naturallanguagegeneration2/</link>
      <pubDate>Mon, 27 Apr 2020 14:20:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/tensorflow2.0/ch7_4_naturallanguagegeneration2/</guid>
      <description>공지   본 Tutorial은 교재 시작하세요 텐서플로 2.0 프로그래밍의 강사에게 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다.
  강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶으신 분은 반드시 교재를 구매하실 것을 권해드립니다.
   본 교재 외에 강사가 추가한 내용에 대한 Reference를 확인하셔서, 추가적으로 학습하시는 것을 권유드립니다.  Tutorial 이전 강의가 궁금하신 분들은 아래에서 선택하여 추가 학습 하시기를 바랍니다.
 Google Colab Tensorflow 2.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Tutorial ch7.4 - (1) 단어 단위 생성</title>
      <link>https://chloevan.github.io/python/tensorflow2.0/ch7_4_naturallanguagegeneration1/</link>
      <pubDate>Mon, 27 Apr 2020 10:20:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/tensorflow2.0/ch7_4_naturallanguagegeneration1/</guid>
      <description>공지   본 Tutorial은 교재 시작하세요 텐서플로 2.0 프로그래밍의 강사에게 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다.
  강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶으신 분은 반드시 교재를 구매하실 것을 권해드립니다.
   본 교재 외에 강사가 추가한 내용에 대한 Reference를 확인하셔서, 추가적으로 학습하시는 것을 권유드립니다.  Tutorial 이전 강의가 궁금하신 분들은 아래에서 선택하여 추가 학습 하시기를 바랍니다.
 Google Colab Tensorflow 2.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Tutorial ch7.3 - 긍정, 부정 감성 분석</title>
      <link>https://chloevan.github.io/python/tensorflow2.0/ch7_3_sentimentanalysis/</link>
      <pubDate>Sat, 25 Apr 2020 11:08:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/tensorflow2.0/ch7_3_sentimentanalysis/</guid>
      <description>공지   본 Tutorial은 교재 시작하세요 텐서플로 2.0 프로그래밍의 강사에게 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다.
  강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶으신 분은 반드시 교재를 구매하실 것을 권해드립니다.
   본 교재 외에 강사가 추가한 내용에 대한 Reference를 확인하셔서, 추가적으로 학습하시는 것을 권유드립니다.  Tutorial 이전 강의가 궁금하신 분들은 아래에서 선택하여 추가 학습 하시기를 바랍니다.
 Google Colab Tensorflow 2.</description>
    </item>
    
    <item>
      <title>matplotlib 04 area and stacked plot</title>
      <link>https://chloevan.github.io/python/matplotlib/matplotlib_04_area_stacked_plot/</link>
      <pubDate>Sat, 25 Apr 2020 01:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/matplotlib/matplotlib_04_area_stacked_plot/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
도움이 되었다면 Github에 Star를 눌러주세요.
 python_visualisation  I. Matplotlib &amp;amp; Seaborn (1) 기본 개요 Matplotlib는 파이썬 표준 시각화 도구라고 불리워지며 파이썬 그래프의 기본 토대가 된다고 해도 무방하다. 객체지향 프로그래밍을 지원하므로 세세하게 꾸밀 수 있다.
Seaborn 그래는 파이썬 시각화 도구의 고급 버전이다.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Tutorial ch7.1 - RNN 이론 (2)</title>
      <link>https://chloevan.github.io/python/tensorflow2.0/ch7_1_2_rnn_theory2/</link>
      <pubDate>Thu, 23 Apr 2020 10:08:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/tensorflow2.0/ch7_1_2_rnn_theory2/</guid>
      <description>공지   본 Tutorial은 교재 시작하세요 텐서플로 2.0 프로그래밍의 강사에게 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다.
  강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶으신 분은 반드시 교재를 구매하실 것을 권해드립니다.
   본 교재 외에 강사가 추가한 내용에 대한 Reference를 확인하셔서, 추가적으로 학습하시는 것을 권유드립니다.  Tutorial 이전 강의가 궁금하신 분들은 아래에서 선택하여 추가 학습 하시기를 바랍니다.
 Google Colab Tensorflow 2.</description>
    </item>
    
    <item>
      <title>matplotlib 03 Scatter Plot</title>
      <link>https://chloevan.github.io/python/matplotlib/matplotlib_03_scatterplot/</link>
      <pubDate>Wed, 22 Apr 2020 22:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/matplotlib/matplotlib_03_scatterplot/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
도움이 되었다면 Github에 Star를 눌러주세요.
 python_visualisation  I. Matplotlib 기본 그래프 Matplotlib는 파이썬 표준 시각화 도구라고 불리워지며 파이썬 그래프의 기본 토대가 된다고 해도 무방하다. 객체지향 프로그래밍을 지원하므로 세세하게 꾸밀 수 있다.
II. matplotlib 설치 설치방법은 윈도우 명령 프롬프트, MacOS, Linux 터미널에서 pip install matplotlib입력하면 되지만, 간혹 여러 환경에 따라 달라질 수 있으니 관련 싸이트에서 확인하기를 바란다.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Tutorial ch7.1 - RNN 이론 (1)</title>
      <link>https://chloevan.github.io/python/tensorflow2.0/ch7_1_2_rnn_theory1/</link>
      <pubDate>Wed, 22 Apr 2020 15:08:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/tensorflow2.0/ch7_1_2_rnn_theory1/</guid>
      <description>공지   본 Tutorial은 교재 시작하세요 텐서플로 2.0 프로그래밍의 강사에게 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다.
  강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶은 반드시 교재를 구매하실 것을 권해드립니다.
   본 교재 외에 강사가 추가한 내용에 대한 Reference를 확인하셔서, 추가적으로 학습하시는 것을 권유드립니다.  Tutorial 이전 강의가 궁금하신 분들은 아래에서 선택하여 추가 학습 하시기를 바랍니다.
 Google Colab Tensorflow 2.0 Installation Tensorflow 2.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Tutorial ch6.4 - 모형의 성능 높이기</title>
      <link>https://chloevan.github.io/python/tensorflow2.0/ch6_4_improve_performance/</link>
      <pubDate>Tue, 21 Apr 2020 21:08:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/tensorflow2.0/ch6_4_improve_performance/</guid>
      <description>공지   본 Tutorial은 교재 시작하세요 텐서플로 2.0 프로그래밍의 강사에게 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다.
  강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶은 반드시 교재를 구매하실 것을 권해드립니다.
   본 교재 외에 강사가 추가한 내용에 대한 Reference를 확인하셔서, 추가적으로 학습하시는 것을 권유드립니다.  Tutorial 이전 강의가 궁금하신 분들은 아래에서 선택하여 추가 학습 하시기를 바랍니다.
 Google Colab Tensorflow 2.0 Installation Tensorflow 2.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Tutorial ch6.3 - Fashion MNIST with CNN 실습</title>
      <link>https://chloevan.github.io/python/tensorflow2.0/ch6_3_fashion_mnist_with_cnn/</link>
      <pubDate>Tue, 21 Apr 2020 16:08:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/tensorflow2.0/ch6_3_fashion_mnist_with_cnn/</guid>
      <description>공지   본 Tutorial은 교재 시작하세요 텐서플로 2.0 프로그래밍의 강사에게 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다.
  강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶은 반드시 교재를 구매하실 것을 권해드립니다.
   본 교재 외에 강사가 추가한 내용에 대한 Reference를 확인하셔서, 추가적으로 학습하시는 것을 권유드립니다.  Tutorial 이전 강의가 궁금하신 분들은 아래에서 선택하여 추가 학습 하시기를 바랍니다.
 Google Colab Tensorflow 2.0 Installation Tensorflow 2.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Tutorial ch6.1-2 - CNN 이론</title>
      <link>https://chloevan.github.io/python/tensorflow2.0/ch6_1_2_cnn_theory/</link>
      <pubDate>Tue, 21 Apr 2020 10:08:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/tensorflow2.0/ch6_1_2_cnn_theory/</guid>
      <description>공지   본 Tutorial은 교재 시작하세요 텐서플로 2.0 프로그래밍의 강사에게 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다.
  강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶은 반드시 교재를 구매하실 것을 권해드립니다.
   본 교재 외에 강사가 추가한 내용에 대한 Reference를 확인하셔서, 추가적으로 학습하시는 것을 권유드립니다.  Tutorial 이전 강의가 궁금하신 분들은 아래에서 선택하여 추가 학습 하시기를 바랍니다.
 Google Colab Tensorflow 2.0 Installation Tensorflow 2.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Tutorial ch5.3 - Fashion MNIST</title>
      <link>https://chloevan.github.io/python/tensorflow2.0/ch5_3_fashion_mnist/</link>
      <pubDate>Mon, 20 Apr 2020 17:08:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/tensorflow2.0/ch5_3_fashion_mnist/</guid>
      <description>공지   본 Tutorial은 교재 시작하세요 텐서플로 2.0 프로그래밍의 강사에게 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다.
  강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶은 반드시 교재를 구매하실 것을 권해드립니다.
   본 교재 외에 강사가 추가한 내용에 대한 Reference를 확인하셔서, 추가적으로 학습하시는 것을 권유드립니다.  Tutorial 이전 강의가 궁금하신 분들은 아래에서 선택하여 추가 학습 하시기를 바랍니다.
 Google Colab Tensorflow 2.0 Installation Tensorflow 2.</description>
    </item>
    
    <item>
      <title>matplotlib 02 bar chart</title>
      <link>https://chloevan.github.io/python/matplotlib/matplotlib_02_barchart/</link>
      <pubDate>Sun, 19 Apr 2020 16:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/matplotlib/matplotlib_02_barchart/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
도움이 되었다면 Github에 Star를 눌러주세요.
 python_visualisation  I. Matplotlib 기본 그래프 Matplotlib는 파이썬 표준 시각화 도구라고 불리워지며 파이썬 그래프의 기본 토대가 된다고 해도 무방하다. 객체지향 프로그래밍을 지원하므로 세세하게 꾸밀 수 있다.
II. matplotlib 설치 설치방법은 윈도우 명령 프롬프트, MacOS, Linux 터미널에서 pip install matplotlib입력하면 되지만, 간혹 여러 환경에 따라 달라질 수 있으니 관련 싸이트에서 확인하기를 바란다.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Tutorial ch5.2 - 다항분류</title>
      <link>https://chloevan.github.io/python/tensorflow2.0/ch5_2_multi_classification/</link>
      <pubDate>Sun, 19 Apr 2020 14:08:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/tensorflow2.0/ch5_2_multi_classification/</guid>
      <description>공지   본 Tutorial은 교재 시작하세요 텐서플로 2.0 프로그래밍의 강사에게 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다.
  강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶은 반드시 교재를 구매하실 것을 권해드립니다.
   본 교재 외에 강사가 추가한 내용에 대한 Reference를 확인하셔서, 추가적으로 학습하시는 것을 권유드립니다.  Tutorial 이전 강의가 궁금하신 분들은 아래에서 선택하여 추가 학습 하시기를 바랍니다.
 Google Colab Tensorflow 2.0 Installation Tensorflow 2.</description>
    </item>
    
    <item>
      <title>Pandas Dataframe</title>
      <link>https://chloevan.github.io/python/pandas/pandas_dataframe/</link>
      <pubDate>Sat, 18 Apr 2020 11:32:36 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/pandas/pandas_dataframe/</guid>
      <description>Overview 데이터프레임은 2차원 배열의 행과 열로 구성되어져 있다. 대부분의 사람들이 알고 있는 마이크로소프트사의 EXCEL, SQL Table 등을 생각하면 데이터프레임을 쉽게 이해할 수 있다. 판다스에서 가장 많이 사용되는 객체이며, 실제 파이썬을 활용한 데이터 분석을 하고 싶다면 필수적으로 알아야 하는 내용이다. 기본적으로 Python은 행렬 연산에 최적화된 언어라고 할 수 있지만, 판다스 라이브러리는 R의 데이터프레임에서 유래했다고 알려져 있다.
여기서 잠깐! 초급자 또는 입문자들이 가장 궁금해하는 것 중의 하나가 R과 Python에 대한 비교가 아닐까 싶다.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Tutorial ch5.1 - 분류</title>
      <link>https://chloevan.github.io/python/tensorflow2.0/ch5_1_binary_classification/</link>
      <pubDate>Sat, 18 Apr 2020 11:08:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/tensorflow2.0/ch5_1_binary_classification/</guid>
      <description>공지   본 Tutorial은 교재 시작하세요 텐서플로 2.0 프로그래밍의 강사에게 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다.
  강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶은 반드시 교재를 구매하실 것을 권해드립니다.
   본 교재 외에 강사가 추가한 내용에 대한 Reference를 확인하셔서, 추가적으로 학습하시는 것을 권유드립니다.  Tutorial 이전 강의가 궁금하신 분들은 아래에서 선택하여 추가 학습 하시기를 바랍니다.
 Google Colab Tensorflow 2.0 Installation Tensorflow 2.</description>
    </item>
    
    <item>
      <title>matplotlib 한글 폰트 오류 해결</title>
      <link>https://chloevan.github.io/settings/matplotlib_koreanfont/</link>
      <pubDate>Fri, 17 Apr 2020 23:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/settings/matplotlib_koreanfont/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
도움이 되었다면 Github에 Star를 눌러주세요.
 python_visualisation  Matplotlib 한글폰트 오류 해결 한글을 사랑하지만, 코딩의 예외다. 프로그래밍 언어 자체가 영어기반이기 때문에 그런것도 있고, 아무튼 한글 부분이 네모 박스로 표시되면서 한글폰트가 깨지는 현상이 종종 발생한다. 오류를 해결하려면 먼저 한글폰트를 지정하는 다음의 코드를 추가해야 한다.</description>
    </item>
    
    <item>
      <title>matplotlib_01_linegraph</title>
      <link>https://chloevan.github.io/python/matplotlib/matplotlib_01_linegraph/</link>
      <pubDate>Fri, 17 Apr 2020 11:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/matplotlib/matplotlib_01_linegraph/</guid>
      <description>공지 제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.
도움이 되었다면 Github에 Star를 눌러주세요.
 python_visualisation  I. Matplotlib 기본 그래프 Matplotlib는 파이썬 표준 시각화 도구라고 불리워지며 파이썬 그래프의 기본 토대가 된다고 해도 무방하다. 객체지향 프로그래밍을 지원하므로 세세하게 꾸밀 수 있다.
II. matplotlib 설치 설치방법은 윈도우 명령 프롬프트, MacOS, Linux 터미널에서 pip install matplotlib입력하면 되지만, 간혹 여러 환경에 따라 달라질 수 있으니 관련 싸이트에서 확인하기를 바란다.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Tutorial ch4.4 - 보스턴 주택 가격 데이터세트</title>
      <link>https://chloevan.github.io/python/tensorflow2.0/ch4_4_boston_housing_deeplearning/</link>
      <pubDate>Thu, 16 Apr 2020 20:00:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/tensorflow2.0/ch4_4_boston_housing_deeplearning/</guid>
      <description>공지   본 Tutorial은 교재 시작하세요 텐서플로 2.0 프로그래밍의 강사에게 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다.
  강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶은 반드시 교재를 구매하실 것을 권해드립니다.
   본 교재 외에 강사가 추가한 내용에 대한 Reference를 확인하셔서, 추가적으로 학습하시는 것을 권유드립니다.  Tutorial 이전 강의가 궁금하신 분들은 아래에서 선택하여 추가 학습 하시기를 바랍니다.
 Google Colab Tensorflow 2.0 Installation Tensorflow 2.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Tutorial ch4.3 - 딥러닝 네트워크를 이용한 회귀</title>
      <link>https://chloevan.github.io/python/tensorflow2.0/ch4_3_regression_with_deeplearning/</link>
      <pubDate>Wed, 15 Apr 2020 20:40:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/tensorflow2.0/ch4_3_regression_with_deeplearning/</guid>
      <description>공지   본 Tutorial은 교재 시작하세요 텐서플로 2.0 프로그래밍의 강사에게 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다.
  강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶은 반드시 교재를 구매하실 것을 권해드립니다.
   본 교재 외에 강사가 추가한 내용에 대한 Reference를 확인하셔서, 추가적으로 학습하시는 것을 권유드립니다.  Tutorial 이전 강의가 궁금하신 분들은 아래에서 선택하여 추가 학습 하시기를 바랍니다.
 Google Colab Tensorflow 2.0 Installation Tensorflow 2.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Tutorial ch4.2 - 다항 회귀</title>
      <link>https://chloevan.github.io/python/tensorflow2.0/ch4_2_multiple_linear_regression/</link>
      <pubDate>Wed, 15 Apr 2020 13:40:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/tensorflow2.0/ch4_2_multiple_linear_regression/</guid>
      <description>공지   본 Tutorial은 교재 시작하세요 텐서플로 2.0 프로그래밍의 강사에게 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다.
  강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶은 반드시 교재를 구매하실 것을 권해드립니다.
   본 교재 외에 강사가 추가한 내용에 대한 Reference를 확인하셔서, 추가적으로 학습하시는 것을 권유드립니다.  Tutorial 이전 강의가 궁금하신 분들은 아래에서 선택하여 추가 학습 하시기를 바랍니다.
 Google Colab Tensorflow 2.0 Installation Tensorflow 2.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Tutorial ch4.1 - 선형회귀</title>
      <link>https://chloevan.github.io/python/tensorflow2.0/ch4_1_linear_regression/</link>
      <pubDate>Tue, 14 Apr 2020 22:40:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/tensorflow2.0/ch4_1_linear_regression/</guid>
      <description>공지  본 Tutorial은 교재 시작하세요 텐서플로 2.0 프로그래밍의 강사에게 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다. 강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶은 반드시 교재를 구매하실 것을 권해드립니다.   본 교재 외에 강사가 추가한 내용에 대한 Reference를 확인하셔서, 추가적으로 학습하시는 것을 권유드립니다.  Tutorial 이전 강의가 궁금하신 분들은 아래에서 선택하여 추가 학습 하시기를 바랍니다.
 Google Colab Tensorflow 2.0 Installation Tensorflow 2.0 Tutorial ch3.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Tutorial ch3.3.5 - 세번째 신경망 네트워크 - XOR</title>
      <link>https://chloevan.github.io/python/tensorflow2.0/ch3_3_5_network_xor/</link>
      <pubDate>Mon, 13 Apr 2020 21:40:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/tensorflow2.0/ch3_3_5_network_xor/</guid>
      <description>공지  본 Tutorial은 교재 시작하세요 텐서플로 2.0 프로그래밍의 강사에게 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다. 강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶은 반드시 교재를 구매하실 것을 권해드립니다.   본 교재 외에 강사가 추가한 내용에 대한 Reference를 확인하셔서, 추가적으로 학습하시는 것을 권유드립니다.  Tutorial 이전 강의가 궁금하신 분들은 아래에서 선택하여 추가 학습 하시기를 바랍니다.
 Google Colab Tensorflow 2.0 Installation Tensorflow 2.0 Tutorial ch3.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Tutorial ch3.3.4 - 두번째 신경망 네트워크: OR</title>
      <link>https://chloevan.github.io/python/tensorflow2.0/ch3_3_4_network_or/</link>
      <pubDate>Sun, 12 Apr 2020 23:40:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/tensorflow2.0/ch3_3_4_network_or/</guid>
      <description>공지  본 Tutorial은 교재 시작하세요 텐서플로 2.0 프로그래밍의 강사에게 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다. 강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶은 반드시 교재를 구매하실 것을 권해드립니다.   본 교재 외에 강사가 추가한 내용에 대한 Reference를 확인하셔서, 추가적으로 학습하시는 것을 권유드립니다.  Tutorial 이전 강의가 궁금하신 분들은 아래에서 선택하여 추가 학습 하시기를 바랍니다.
 Google Colab Tensorflow 2.0 Installation Tensorflow 2.0 Tutorial ch3.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Tutorial ch3.3.3 - 첫번째 신경망 네트워크, AND</title>
      <link>https://chloevan.github.io/python/tensorflow2.0/ch3_3_3_network_and/</link>
      <pubDate>Sat, 11 Apr 2020 11:20:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/tensorflow2.0/ch3_3_3_network_and/</guid>
      <description>공지  본 Tutorial은 교재 시작하세요 텐서플로 2.0 프로그래밍의 강사에게 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다. 강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶은 반드시 교재를 구매하실 것을 권해드립니다.   본 교재 외에 강사가 추가한 내용에 대한 Reference를 확인하셔서, 추가적으로 학습하시는 것을 권유드립니다.  Tutorial 이전 강의가 궁금하신 분들은 아래에서 선택하여 추가 학습 하시기를 바랍니다.
 Google Colab Tensorflow 2.0 Installation Tensorflow 2.0 Tutorial ch3.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Tutorial ch3.3.2 - 난수 생성 및 시그모이드 함수 편향성</title>
      <link>https://chloevan.github.io/python/tensorflow2.0/ch3_3_2_random_signoid_bias/</link>
      <pubDate>Fri, 10 Apr 2020 10:20:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/tensorflow2.0/ch3_3_2_random_signoid_bias/</guid>
      <description>공지  본 Tutorial은 교재 시작하세요 텐서플로 2.0 프로그래밍의 강사에게 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다. 강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶은 반드시 교재를 구매하실 것을 권해드립니다.   본 교재 외에 강사가 추가한 내용에 대한 Reference를 확인하셔서, 추가적으로 학습하시는 것을 권유드립니다.  Tutorial 이전 강의가 궁금하신 분들은 아래에서 선택하여 추가 학습 하시기를 바랍니다.
 Google Colab Tensorflow 2.0 Installation Tensorflow 2.0 Tutorial ch3.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Tutorial ch3.3.1 - 난수 생성 및 시그모이드 함수</title>
      <link>https://chloevan.github.io/python/tensorflow2.0/ch3_3_1_random_signoid/</link>
      <pubDate>Wed, 08 Apr 2020 11:20:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/tensorflow2.0/ch3_3_1_random_signoid/</guid>
      <description>공지  본 Tutorial은 교재 시작하세요 텐서플로 2.0 프로그래밍의 강사에게 국비교육 강의를 듣는 사람들에게 자료 제공을 목적으로 제작하였습니다. 강사의 주관적인 판단으로 압축해서 자료를 정리하였기 때문에, 자세하게 공부를 하고 싶은 반드시 교재를 구매하실 것을 권해드립니다.   본 교재 외에 강사가 추가한 내용에 대한 Reference를 확인하셔서, 추가적으로 학습하시는 것을 권유드립니다.  I. 퍼셉트론의 한계 극복 AI는 과거부터 존재하였지만, 여러가지 한계로 인해 연구의 흥망성쇠가 계속적으로 있어왔다. 퍼셉트론의 한계를 지적하는 데 사용됐던, AND, OR, XOR 연산을 할 수 있는 신경망 네트워크를 직접 만들어보자.</description>
    </item>
    
    <item>
      <title>Connecting Jupyter Notebook to VS Code</title>
      <link>https://chloevan.github.io/settings/settings02_vscode2jupyter/</link>
      <pubDate>Sun, 05 Apr 2020 00:30:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/settings/settings02_vscode2jupyter/</guid>
      <description>I. 개요 VS Code에 Jupyter Notebook을 연동해본다. 강사는 R &amp;amp; Python을 연동해서 작업할 일이 많다. 특히 블로그를 쓰다보면 더욱 그러한 일이 많은데, IDE가 많으면 많을수록 무언가 복잡스러워 보일 때가 많다. 이 때 좀 더 효율적으로 일하고자 하는 마음에 VS Code에 Jupyter Notebook을 추가 및 연동하는 작업을 진행해본다.
II. Installation 내용의 간결화를 위해, VS Code 및 Jupyter Notebook 설치 방법은 본 포스트에서는 생략한다.
 VS Code 설치방법: https://code.visualstudio.com/download Jupyter Notebook 설치 방법: https://jupyter.</description>
    </item>
    
    <item>
      <title>Google Colab Tensorflow 2.0 Installation</title>
      <link>https://chloevan.github.io/python/tensorflow2.0/googlecolab/</link>
      <pubDate>Sat, 04 Apr 2020 11:03:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/tensorflow2.0/googlecolab/</guid>
      <description>I. 공지 이번 포스트부터 강사의 과거-기존-미래 수강생들이 보다 효율적으로 공부할 수 있도록 구글코랩에서 진행하는 텐서플로 2.0 Tutorial을 준비한다.
II. 개요 GPU를 활용하여, 딥러닝을 연습하고 공부하고 싶지만, 쉽지많은 않다. 구글 코랩의 존재는 예전부터 알고 있었지만, 마땅히 정리를 하지 못하던 찰나에, 이제 본격적으로 강의 준비를 하며 2020년은 구글 코랩과 함께 하기로 결정하였다. 특히 텐서플로 Tutorial을 준비하면서 개인적으로 많이 성장하기를 바라며..
III. Why Tensorflow 2.0? 비즈니스적으로 접근을 해보자. 앱의 경우, 2007년쯤 IOS가 출시된 이후, 경쟁자로 Andorid가 등장했다.</description>
    </item>
    
    <item>
      <title>Pandas Filtering</title>
      <link>https://chloevan.github.io/python/pandas/filter/</link>
      <pubDate>Fri, 03 Apr 2020 22:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/pandas/filter/</guid>
      <description>Overview 필터링은 특정 조건식을 만족하는 행을 따로 추출하는 개념이다. 특정 행의 값에 조건식 True/False을 판별하여 값을 추출하는 방법이다. 이 때, 비교 연산자 또는 조건식 (&amp;gt;, &amp;lt;, ==, ...)을 적용하면 행을 추출할 수 있다.
우선 데이터부터 확인한다. 아래 소스코드를 복사 붙여넣기 하면 데이터를 확인할 수 있다.
import pandas as pd url = &amp;#39;https://github.com/chloevan/datasets/raw/master/entertainment/movie_ticket_sales.xlsx&amp;#39; sales = pd.read_excel(url) print(sales.head())  theater_name movie_title ticket_type \ 0 Sumdance Cinemas Harry Plotter senior 1 The Empirical House 10 Things I Hate About Unix child 2 The Empirical House The Seaborn Identity adult 3 Sumdance Cinemas 10 Things I Hate About Unix adult 4 The Empirical House Mamma Median!</description>
    </item>
    
    <item>
      <title>Pandas sort_values()</title>
      <link>https://chloevan.github.io/python/pandas/sort_values/</link>
      <pubDate>Fri, 03 Apr 2020 20:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/pandas/sort_values/</guid>
      <description>I. Overview sort_values() 함수는 일종의 데이터의 정렬과 연관이 있다. 어려운 내용은 아니기 때문에 빠르게 소스 코드 구현 및 확인 하도록 한다.
II. Sample Tutorial 엑셀로 된 ticket_sales 데이터에서 ticket_quantity가 가장 많이 팔린 영화 Top3를 구하는 소스코드를 구해본다.
import pandas as pd url = &amp;#39;https://github.com/chloevan/datasets/raw/master/entertainment/movie_ticket_sales.xlsx&amp;#39; sales = pd.read_excel(url) print(sales.head())  theater_name movie_title ticket_type \ 0 Sumdance Cinemas Harry Plotter senior 1 The Empirical House 10 Things I Hate About Unix child 2 The Empirical House The Seaborn Identity adult 3 Sumdance Cinemas 10 Things I Hate About Unix adult 4 The Empirical House Mamma Median!</description>
    </item>
    
    <item>
      <title>Pandas With Excel</title>
      <link>https://chloevan.github.io/python/pandas/pandas_with_excel/</link>
      <pubDate>Mon, 30 Mar 2020 11:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/pandas/pandas_with_excel/</guid>
      <description>I. Overview 이번 포스트는 기존의 엑셀 사용자를 위해 준비했다. 엑셀에 익숙한 사람들에게 파이썬을 분석 용도로 사용하고자 하는 분들에게는 작은 도움이 되기를 바란다.
II. 데이터 입출력 판다스는 다양한 형태의 외부 파일을 읽을 수 있다. CSV, MS Excel, SQL, HDF5 Format과 같은 파일 포맷을 읽을 수 있다. 파일 포맷(File Format)에 따른 데이터 입출력 도구에 관한 자료를 요약하면 다음과 같다.
   파일 포맷 How to Read? How to Write?     CSV read_csv to_csv   MS Excel read_excel to_excel   SQL read_sql to_sql    그 외에 HTML, JSON, SAS 포맷과 같은 파일을 읽어오는 다양한 방법에 대해서는 Pandas 공식문서(PDF 다운로드)를 참조하기를 바란다.</description>
    </item>
    
    <item>
      <title>Pandas Lambda Apply 함수 활용</title>
      <link>https://chloevan.github.io/python/pandas/apply/</link>
      <pubDate>Mon, 23 Mar 2020 20:10:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/pandas/apply/</guid>
      <description>I. Iterrows, Itertuples 복습 이번 포스팅은 For-loop의 대안에 관한 함수 apply에 관한 내용이다. 본 포스트를 보고 학습하시기 전에 Pandas Iterrows 함수 활용과 Pandas Itertuples 함수 활용에서 학습 하기를 바란다.
지난시간과 마찬가지로 데이터는 동일한 것을 쓰도록 한다.
import pandas as pd import io import requests import pprint url = &amp;#39;https://raw.githubusercontent.com/chloevan/datasets/master/sports/baseball_stats.csv&amp;#39; url=requests.get(url).content baseball_stats = pd.read_csv(io.StringIO(url.decode(&amp;#39;utf-8&amp;#39;))) pprint.pprint(baseball_stats.head())  Team League Year RS RA W OBP SLG BA Playoffs RankSeason \ 0 ARI NL 2012 734 688 81 0.</description>
    </item>
    
    <item>
      <title>Pandas Itertuples 함수 활용</title>
      <link>https://chloevan.github.io/python/pandas/itertuples/</link>
      <pubDate>Sun, 22 Mar 2020 20:36:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/pandas/itertuples/</guid>
      <description>I. Iterrows 이번 포스팅은 Iterrows()의 확장개념입니다. 본 포스트를 보고 학습하시기 전에 Pandas Iterrows 함수 활용에서 학습 하기를 바란다.
II. Itertuples의 개념 itertuples()는 기본적으로 iterrows() 함수보다는 빠르다.
import pandas as pd import io import requests import pprint url = &amp;#39;https://raw.githubusercontent.com/chloevan/datasets/master/sports/baseball_stats.csv&amp;#39; url=requests.get(url).content baseball_stats = pd.read_csv(io.StringIO(url.decode(&amp;#39;utf-8&amp;#39;))) pprint.pprint(baseball_stats.head())  Team League Year RS RA W OBP SLG BA Playoffs RankSeason \ 0 ARI NL 2012 734 688 81 0.33 0.42 0.26 0 NaN 1 ATL NL 2012 700 600 94 0.</description>
    </item>
    
    <item>
      <title>Pandas Iterrows 함수 활용</title>
      <link>https://chloevan.github.io/python/pandas/iterrows/</link>
      <pubDate>Fri, 20 Mar 2020 20:32:10 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/pandas/iterrows/</guid>
      <description>I. Iterrows의 개념 데이터 전처리를 진행할 때, 데이터프레임에서 행에 반복적으로 접근을 하면서 값을 추출하거나 또는 그 값을 조작하는 일이 발생한다. 예를 들면, 특정 컬럼 A의 값에서 대문자 A를 찾아내 소문자 b로 변경한다고 가정해보자. 이런 경우에는 언제나 For-loop를 통한 반복문 코드 작성을 만들어야 한다.
이럴 때 보다 효율적으로 접근하는 방법 중 하나가 iterrows()를 사용하는 경우이다.
import pandas as pd import io import requests import pprint url = &amp;#39;https://raw.githubusercontent.com/chloevan/datasets/master/sports/baseball_stats.csv&amp;#39; url=requests.get(url).content baseball_stats = pd.</description>
    </item>
    
    <item>
      <title>Machine Learning Tutorial 02 - Regression (2)</title>
      <link>https://chloevan.github.io/python/machin_learning/scikit_regression/ml01_regression2/</link>
      <pubDate>Fri, 20 Mar 2020 13:11:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/machin_learning/scikit_regression/ml01_regression2/</guid>
      <description>I. 지도 학습 VS 비지도 학습 머신러닝은 크게 두 가지 유형으로 분류한다. 우선 아래 표를 보자.
   구분 지도학습(Supervised Learning) 비지도 학습(Unsupervised Learning)     알고리즘(분석모형) 회귀분석분류모형 군집분석   특징 정답을 알고 있는 상태에서 학습모형 평가 방법이 다양한 편 정답이 없는 상태에서 서로 비슷한 데이터를 찾아서 그룹화모형 평가 방법이 제한적    지도학습(Supervised Learning)은 종속변수(Dependent Variable) 선정이 매우 중요하며. 종속변수 선정과 함께 데이터 분석도 같이 병행이 된다.</description>
    </item>
    
    <item>
      <title>Machine Learning Tutorial 01 - Regression (1)</title>
      <link>https://chloevan.github.io/python/machin_learning/scikit_regression/ml01_regression/</link>
      <pubDate>Thu, 19 Mar 2020 18:11:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/machin_learning/scikit_regression/ml01_regression/</guid>
      <description>I 지도 학습 VS 비지도 학습 머신러닝은 크게 두 가지 유형으로 분류한다. 우선 아래 표를 보자.
   구분 지도학습(Supervised Learning) 비지도 학습(Unsupervised Learning)     알고리즘(분석모형) 회귀분석분류모형 군집분석   특징 정답을 알고 있는 상태에서 학습모형 평가 방법이 다양한 편 정답이 없는 상태에서 서로 비슷한 데이터를 찾아서 그룹화모형 평가 방법이 제한적    지도학습(Supervised Learning)은 종속변수(Dependent Variable) 선정이 매우 중요하며. 종속변수 선정과 함께 데이터 분석도 같이 병행이 된다.</description>
    </item>
    
    <item>
      <title>Leaflet for R</title>
      <link>https://chloevan.github.io/r/graph01_leaflet/</link>
      <pubDate>Tue, 17 Mar 2020 20:33:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/graph01_leaflet/</guid>
      <description>1. Introduction Leaflet 패키지는 동적 지도 시각화를 위한 자바스크립트-오픈소스 기반 라이브러리입니다. 일반적인 기업 회사 뿐만 아니라 GIS 전문 회사인 OpenStreetMap, Mapbox, 그리고 CartoDB에서도 이 패키지를 사용하고 있습니다.
R의 leaflet 패키지는 일종의 자바스크립트의 Leaflet을 쉽게 연동(Integrate) 할 수 있도록 도와 주는 패키지입니다.
2. Features 패키지의 주요 특징은 아래와 같습니다. 오역 방지를 위해 원문에 있는 내용을 그대로 사용했습니다.
  Interactive panning/zooming
  Compose maps using arbitrary combinations of:
 Map tiles Markers Polygons Lines Popups GeoJSON    Create maps right from the R console or RStudio</description>
    </item>
    
    <item>
      <title>Tensorflow For R - Quick Start</title>
      <link>https://chloevan.github.io/r/settings01_installation/</link>
      <pubDate>Mon, 16 Mar 2020 20:33:39 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/settings01_installation/</guid>
      <description>1. 개요 (Overview) tensorflow(텐서플로) R 패키지를 사용하기 전에 시스템에 TensorFlow 버전을 설치해야 한다. 아래에서는 TensorFlow 설치 방법과 설치 사용자 정의에 사용할 수 있는 다양한 옵션에 대해 설명 한다.
이번 포스트에서는 주로 R install_tensorflow() 함수의 사용을 다루며, 이는 TensorFlow를 설치하는 데 필요한 다양한 단계에서 wrapper 쉽게 사용할 수 있도록 도와 준다.
Tensorflow(텐서플로)는 아래와 같은 OS 환경에서 구동이 된다.
 Ubuntu 16.04 or later Windows 7 or later macOS 10.12.6 (Sierra) or later (no GPU support)  2.</description>
    </item>
    
    <item>
      <title>Tensorflow 2.0 Installation</title>
      <link>https://chloevan.github.io/python/settings01_installation/</link>
      <pubDate>Sun, 15 Mar 2020 21:32:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/python/settings01_installation/</guid>
      <description>I. 개요 pip를 사용하여 TensorFlow 설치를 해본다.
II. 시스템 요구사항  Python 3.5-3.7 pip 19.0 이상(manylinux2010 지원 필요) Ubuntu 16.04 이상(64비트) macOS 10.12.6(Sierra) 이상(64비트)(GPU 지원 없음) Windows 7 이상(64비트)(Python 3만 해당) Raspbian 9.0 이상 GPU 지원에는 CUDA® 지원 카드 필요(Ubuntu 및 Windows)  참고: TensorFlow2를 설치하려면 최신 버전의 pip가 필요하다.
III. 시스템에 Python 개발 환경 설치 (1) 환경 구성 우선 확인 우선, Python 환경이 이미 구성되었는지 확인합니다. 참고: Python 3.5~3.7 및 pip &amp;gt;= 19.</description>
    </item>
    
    <item>
      <title>Stat01_hypothesis</title>
      <link>https://chloevan.github.io/r/stat01_hypothesis/</link>
      <pubDate>Sun, 15 Mar 2020 21:23:58 +0900</pubDate>
      
      <guid>https://chloevan.github.io/r/stat01_hypothesis/</guid>
      <description>가설 설정 가설의 유형 (1) 귀무가설 ~
(2) 연구가설 ~~</description>
    </item>
    
  </channel>
</rss>