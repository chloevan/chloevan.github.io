<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Settings on Data Science | ChloEvan</title>
    <link>https://chloevan.github.io/settings/</link>
    <description>Recent content in Settings on Data Science | ChloEvan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 24 May 2020 13:11:47 +0900</lastBuildDate>
    
        <atom:link href="https://chloevan.github.io/settings/rss.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Kakao Arena 3 EDA on Google Colab</title>
      <link>https://chloevan.github.io/settings/kakao_arena_3_eda/</link>
      <pubDate>Sun, 24 May 2020 13:11:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/settings/kakao_arena_3_eda/</guid>
      <description>&lt;h2 id=&#34;공지&#34;&gt;공지&lt;/h2&gt;
&lt;p&gt;제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.&lt;/p&gt;
&lt;h2 id=&#34;i-개요&#34;&gt;I. 개요&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;프로젝트 폴더 내에서 간단하게 EDA를 실습하는 시간을 갖도록 한다.&lt;/li&gt;
&lt;li&gt;관련 패키지는 우선 다른 곳에서 설치 되었다는 것을 가정한다.
&lt;ul&gt;
&lt;li&gt;참고: &lt;a href=&#34;https://chloevan.github.io/settings/colab_package_settings/&#34;&gt;Python Package Settings on Google Colab&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;본 포스트의 핵심은 환경설정이 &lt;code&gt;Google Colab + Drive내&lt;/code&gt;에서 작업하는 것이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ii-패키지-불러오기&#34;&gt;II. 패키지 불러오기&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;다음과 같은 순서로 실행한다.&lt;/li&gt;
&lt;li&gt;첫째, 나눔고딕 한글 폰트를 설치한다.&lt;/li&gt;
&lt;li&gt;둘째, 내부 패키지를 먼저 불러온다.&lt;/li&gt;
&lt;li&gt;셋째, 런타임을 다시 실행한다.&lt;/li&gt;
&lt;li&gt;넷째, &lt;code&gt;Drive&lt;/code&gt; 마운트를 진행한다.&lt;/li&gt;
&lt;li&gt;다섯째, 외부 패키지를 불러온다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1-나눔고딕-폰트-불러오기&#34;&gt;(1) 나눔고딕 폰트 불러오기&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;다음과 같은 방식으로 폰트를 불러온다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;config InlineBackend&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;figure_format &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;retina&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;apt &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;qq &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;y install fonts&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;nanum
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;The following NEW packages will be installed:
  fonts-nanum
0 upgraded, 1 newly installed, 0 to remove and 31 not upgraded.
Need to get 9,604 kB of archives.
After this operation, 29.5 MB of additional disk space will be used.
Selecting previously unselected package fonts-nanum.
(Reading database ... 144433 files and directories currently installed.)
Preparing to unpack .../fonts-nanum_20170925-1_all.deb ...
Unpacking fonts-nanum (20170925-1) ...
Setting up fonts-nanum (20170925-1) ...
Processing triggers for fontconfig (2.12.6-0ubuntu2) ...
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;2-내부에-기-설치된-패키지-불러오기&#34;&gt;(2) 내부에 기 설치된 패키지 불러오기&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;관련 패키지를 불러온다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; datetime &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; timedelta, datetime
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; glob
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; itertools &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; chain
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; json
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; os
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; re

&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; numpy &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; np
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pd

&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; wordcloud &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; WordCloud
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; nltk
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; nltk.corpus &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; stopwords
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; collections &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Counter
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; sklearn.feature_extraction.text &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; TfidfVectorizer
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; sklearn.feature_extraction.text &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; CountVectorizer

&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; pandas.plotting &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; register_matplotlib_converters
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; seaborn &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; sns
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; plt
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; mpl
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; plt
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib.font_manager &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; fm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;fontpath &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/usr/share/fonts/truetype/nanum/NanumBarunGothic.ttf&amp;#39;&lt;/span&gt;
font &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; fm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;FontProperties(fname&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;fontpath, size&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;rc(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;font&amp;#39;&lt;/span&gt;, family&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;NanumBarunGothic&amp;#39;&lt;/span&gt;) 
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;rcParams[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;figure.figsize&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)
register_matplotlib_converters()
mpl&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;font_manager&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;_rebuild()
mpl&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pyplot&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;rc(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;font&amp;#39;&lt;/span&gt;, family&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;NanumGothic&amp;#39;&lt;/span&gt;)
fm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;_rebuild()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;3-외부-패키지인-konlpy-불러오기&#34;&gt;(3) 외부 패키지인 &lt;code&gt;konlpy&lt;/code&gt; 불러오기&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;다음 코드를 실행하기 전 반드시 [런타임]-[런타임 다시 시작]을 누르자.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Mount Google Drive&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; google.colab &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; drive &lt;span style=&#34;color:#75715e&#34;&gt;# import drive from google colab&lt;/span&gt;

ROOT &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/content/drive&amp;#34;&lt;/span&gt;     &lt;span style=&#34;color:#75715e&#34;&gt;# default location for the drive&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(ROOT)                 &lt;span style=&#34;color:#75715e&#34;&gt;# print content of ROOT (Optional)&lt;/span&gt;
drive&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mount(ROOT)           &lt;span style=&#34;color:#75715e&#34;&gt;# we mount the google drive at /content/drive&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;/content/drive
Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(&amp;quot;/content/drive&amp;quot;, force_remount=True).
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; sys
my_path &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/content/notebooks&amp;#39;&lt;/span&gt;
os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;symlink(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/content/drive/My Drive/Colab Notebooks/competition/pkgs_folder&amp;#39;&lt;/span&gt;, my_path)
sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;insert(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,my_path)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; konlpy.tag &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Twitter
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;위 코드에서 만약 에러가 나면 처음부터 다시 해야 하니, 유의 바란다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;options&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mode&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;chained_assignment &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; None
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;iii-데이터-불러오기&#34;&gt;III. 데이터 불러오기&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;이제 깃허브 프로젝트인 &lt;code&gt;competition&lt;/code&gt;으로 파일 경로를 변경 한 뒤, 데이터를 불러오도록 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# import join used to join ROOT path and MY_GOOGLE_DRIVE_PATH&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; os.path &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; join  

&lt;span style=&#34;color:#75715e&#34;&gt;# path to your project on Google Drive&lt;/span&gt;
MY_GOOGLE_DRIVE_PATH &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;My Drive/Colab Notebooks/competition&amp;#39;&lt;/span&gt;

PROJECT_PATH &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; join(ROOT, MY_GOOGLE_DRIVE_PATH)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;cd &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{PROJECT_PATH}&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;/content/drive/My Drive/Colab Notebooks/competition
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;git status
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;On branch master
Your branch is up to date with &#39;origin/master&#39;.

Changes not staged for commit:
  (use &amp;quot;git add/rm &amp;lt;file&amp;gt;...&amp;quot; to update what will be committed)
  (use &amp;quot;git checkout -- &amp;lt;file&amp;gt;...&amp;quot; to discard changes in working directory)

    [31mmodified:   .gitignore[m
    [31mdeleted:    kakao_arena_3/source/temp.ipynb[m
    [31mdeleted:    kakao_arena_3/source/temp2.ipynb[m

Untracked files:
  (use &amp;quot;git add &amp;lt;file&amp;gt;...&amp;quot; to include in what will be committed)

    [31mkakao_arena_3/source/kakao_arena_3_eda.ipynb[m

no changes added to commit (use &amp;quot;git add&amp;quot; and/or &amp;quot;git commit -a&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;ls
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;kakao_arena_3  pkgs_folder  README.md
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# genre_gn_all.json&lt;/span&gt;
genre_gn_all &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read_json(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;kakao_arena_3/data/genre_gn_all.json&amp;#39;&lt;/span&gt;, typ &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;series&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;color:#75715e&#34;&gt;# 장르코드 : gnr_code, 장르명 : gnr_name&lt;/span&gt;
genre_gn_all &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataFrame(genre_gn_all, columns &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;gnr_name&amp;#39;&lt;/span&gt;])&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;reset_index()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;rename(columns &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;index&amp;#39;&lt;/span&gt; : &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;gnr_code&amp;#39;&lt;/span&gt;})
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(genre_gn_all&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head())
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;  gnr_code gnr_name
0   GN0100      발라드
1   GN0101   세부장르전체
2   GN0102      &#39;80
3   GN0103      &#39;90
4   GN0104      &#39;00
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 장르코드 뒷자리 두 자리가 00이 아닌 코드를 필터링&lt;/span&gt;
dtl_gnr_code &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; genre_gn_all[genre_gn_all[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;gnr_code&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;str[&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:] &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;00&amp;#39;&lt;/span&gt;]
dtl_gnr_code&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;rename(columns &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;gnr_code&amp;#39;&lt;/span&gt; : &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dtl_gnr_code&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;gnr_name&amp;#39;&lt;/span&gt; : &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dtl_gnr_name&amp;#39;&lt;/span&gt;}, inplace &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; True)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(dtl_gnr_code&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head())
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;  dtl_gnr_code dtl_gnr_name
1       GN0101       세부장르전체
2       GN0102          &#39;80
3       GN0103          &#39;90
4       GN0104          &#39;00
5       GN0105         &#39;10-
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;iv-데이터-시각화-구현&#34;&gt;IV. 데이터 시각화 구현&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;한글 시각화를 구현한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Plotting a bar graph of the number of stores in each city, for the first ten cities listed&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# in the column &amp;#39;City&amp;#39;&lt;/span&gt;
dtl_gnr_name_count  &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dtl_gnr_code[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dtl_gnr_name&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;value_counts()
dtl_gnr_name_count &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dtl_gnr_name_count[:&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;,]
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;figure(figsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;))
sns&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;barplot(dtl_gnr_name_count&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index, dtl_gnr_name_count&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values, alpha&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.8&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;title(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;한글 시각화 테스트&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ylabel(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Number of Occurrences&amp;#39;&lt;/span&gt;, fontsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;xlabel(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;세부장르&amp;#39;&lt;/span&gt;, fontsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;static/img/settings/kakao_arena_3_eda/output_22_0.png/output_22_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;한글 시각화가 정상적으로 나온 것을 꼭 확인한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;v-github-연동&#34;&gt;V. Github 연동&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;우선 깃허브와 연동하자.&lt;/li&gt;
&lt;li&gt;그리고, 작성된 코드를 업데이트 하도록 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Clone github repository setup&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# import join used to join ROOT path and MY_GOOGLE_DRIVE_PATH&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; os.path &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; join  

&lt;span style=&#34;color:#75715e&#34;&gt;# path to your project on Google Drive&lt;/span&gt;
MY_GOOGLE_DRIVE_PATH &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;My Drive/Colab Notebooks/&amp;#39;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# replace with your github username&lt;/span&gt;
GIT_USERNAME &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;chloevan&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# definitely replace with your&lt;/span&gt;
GIT_TOKEN &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;your_token&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# this is temporary, whenever you add, need to get token number&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# Replace with your github repository in this case we want &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# to clone deep-learning-v2-pytorch repository&lt;/span&gt;
GIT_REPOSITORY &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;competition&amp;#34;&lt;/span&gt;

PROJECT_PATH &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; join(ROOT, MY_GOOGLE_DRIVE_PATH)

&lt;span style=&#34;color:#75715e&#34;&gt;# It&amp;#39;s good to print out the value if you are not sure &lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PROJECT_PATH: &amp;#34;&lt;/span&gt;, PROJECT_PATH)  

&lt;span style=&#34;color:#75715e&#34;&gt;# In case we haven&amp;#39;t created the folder already; we will create a folder in the project path &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# !mkdir &amp;#34;{PROJECT_PATH}&amp;#34;    &lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;#GIT_PATH = &amp;#34;https://{GIT_TOKEN}@github.com/{GIT_USERNAME}/{GIT_REPOSITORY}.git&amp;#34; this return 400 Bad Request for me&lt;/span&gt;
GIT_PATH &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; GIT_TOKEN &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;@github.com/&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; GIT_USERNAME &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; GIT_REPOSITORY &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.git&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;GIT_PATH: &amp;#34;&lt;/span&gt;, GIT_PATH)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;PROJECT_PATH:  /content/drive/My Drive/Colab Notebooks/
GIT_PATH:  https://619..your_token..46b@github.com/chloevan/competition.git
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;git remote set&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;url origin &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{GIT_PATH}&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;git add &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# Linked to account&lt;/span&gt;
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;git config &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;global&lt;/span&gt; user&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;email &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;your_email_address&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;git config &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;global&lt;/span&gt; user&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;name &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;your_username&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# Git commit&lt;/span&gt;
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;git commit &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;finally updated&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;git push
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[master c93a004] finally updated
1 file changed, 1 insertion(+), 1 deletion(-)
Counting objects: 15, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (15/15), done.
Writing objects: 100% (15/15), 1.79 KiB | 367.00 KiB/s, done.
Total 15 (delta 9), reused 0 (delta 0)
remote: Resolving deltas: 100% (9/9), completed with 3 local objects.
To https://github.com/chloevan/competition.git
  320ecd5..c93a004  master -&amp;gt; master
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Colab &#43; Drive &#43; Github Workflow</title>
      <link>https://chloevan.github.io/settings/colab_drive_github_settings/</link>
      <pubDate>Sun, 24 May 2020 11:11:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/settings/colab_drive_github_settings/</guid>
      <description>&lt;h2 id=&#34;공지&#34;&gt;공지&lt;/h2&gt;
&lt;p&gt;제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.&lt;/p&gt;
&lt;h2 id=&#34;i-동기-부여-및-개요&#34;&gt;I. 동기 부여 및 개요&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Google Colab&lt;/code&gt;을 알게 된 이후에, 모든 파일을 가급적 여기에서 작성을 한다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Why?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;첫째, &lt;code&gt;GPU&lt;/code&gt;를 무료로 사용할 수 있다.&lt;/li&gt;
&lt;li&gt;둘째, 맥북에어의 저용량을 쓰는 나에게 있어, 시스템 파일 등을 &lt;code&gt;Local&lt;/code&gt;로 내려받는데 버거움이 있다.&lt;/li&gt;
&lt;li&gt;셋째, 온라인 강의 및 책을 협업해서 써야 하는데, 각 &lt;code&gt;Local&lt;/code&gt; 환경을 구축하는 번거로움을 없애고 싶었다.&lt;/li&gt;
&lt;li&gt;마지막으로, 파일 공유가 가능하다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;문제는 &lt;code&gt;Google Colab&lt;/code&gt; + &lt;code&gt;Drive&lt;/code&gt; + &lt;code&gt;Github&lt;/code&gt;로 연동하여 소스파일을 관리해야 하는 시점이 도래했다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;주 목적은 &lt;code&gt;Google Colab&lt;/code&gt;을 향후에 팀 프로젝트로 연결하고자 하는 준비 차원에서 작성을 해본다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/settings/colab_drive_github_settings/triangle.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;ii-기존-방식---google-colab-with-github&#34;&gt;II. 기존 방식 - Google Colab with Github&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;기존에는 [파일]-[Github에 사본저장]을 클릭하여 조금은 수동으로 파일을 저장하고 있었다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/settings/colab_drive_github_settings/before.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;그런데, 가끔 파일을 다른 &lt;code&gt;repo&lt;/code&gt;에 저장하는 등의 실수(&lt;code&gt;mistake&lt;/code&gt;)를 저지르기도 하여, 불필요한 작업을 수행하였다. 삭제하는 것이 어려운 것은 아니나, 가끔 있어야 하는 파일이 없을 때, 조금 황당하기도 했다.&lt;/li&gt;
&lt;li&gt;이제, 본격적으로 &lt;code&gt;프로젝트 폴더&lt;/code&gt; 단위로 &lt;code&gt;github&lt;/code&gt;와 연동하는 작업을 수행하고, &lt;code&gt;Drive&lt;/code&gt;에 이를 반영하도록 하자.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;iii-업무-개선---colab-with-drive&#34;&gt;III. 업무 개선 - Colab with Drive&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;각종 경진대회에 나가는 &lt;code&gt;repo&lt;/code&gt;를 하나 만들었다.&lt;/li&gt;
&lt;li&gt;그 &lt;code&gt;repo&lt;/code&gt;는 그대로 &lt;code&gt;Drive&lt;/code&gt;로 내려받는데, &lt;code&gt;colab&lt;/code&gt;을 이용한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1-mount-google-drive-to-google-colab&#34;&gt;(1) Mount Google Drive to Google Colab&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;구글 드라이브(Drive)&lt;/code&gt;를 &lt;code&gt;구글 코랩(Colab)&lt;/code&gt;에 &lt;code&gt;mount&lt;/code&gt;하기 위해 아래 코드를 작성한다.&lt;/li&gt;
&lt;li&gt;이 때 &lt;code&gt;authorization code&lt;/code&gt;가 활성화 되는데, 인증을 진행한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Mount Google Drive&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; google.colab &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; drive &lt;span style=&#34;color:#75715e&#34;&gt;# import drive from google colab&lt;/span&gt;

ROOT &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/content/drive&amp;#34;&lt;/span&gt;     &lt;span style=&#34;color:#75715e&#34;&gt;# default location for the drive&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(ROOT)                 &lt;span style=&#34;color:#75715e&#34;&gt;# print content of ROOT (Optional)&lt;/span&gt;
drive&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mount(ROOT)           &lt;span style=&#34;color:#75715e&#34;&gt;# we mount the google drive at /content/drive&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;/content/drive
Go to this URL in a browser: https://accounts.google.com/o/oauth2/auth?client_id=947318989803-6bn6qk8qdgf4n4g3pfee6491hc0brc4i.apps.googleusercontent.com&amp;amp;redirect_uri=urn%3aietf%3awg%3aoauth%3a2.0%3aoob&amp;amp;response_type=code&amp;amp;scope=email%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdocs.test%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive.photos.readonly%20https%3a%2f%2fwww.googleapis.com%2fauth%2fpeopleapi.readonly

Enter your authorization code:
··········
Mounted at /content/drive
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Mounted at /content/drive&lt;/code&gt; 결과값이 나오면 성공적으로 &lt;code&gt;Google Drive&lt;/code&gt;가 &lt;code&gt;mount&lt;/code&gt;가 되었다는 뜻이다.&lt;/li&gt;
&lt;li&gt;간단하게 &lt;code&gt;CLI(=Command-Line Interface)&lt;/code&gt;을 활용하여 현재 경로를 확인한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;pwd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&#39;/content&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;ls
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[0m[01;34mdrive[0m/  [01;34msample_data[0m/
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;cd drive&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;My Drive&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Colab Notebooks&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;/content/drive/My Drive/Colab Notebooks
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;ls
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&#39;Colaboratory에 오신 것을 환영합니다의 사본&#39;   [0m[01;34mpython_edu[0m/
&#39;colab_package_settings.ipynb의 사본&#39;          tempMelonData.ipynb
 [01;34mcompetition_temp[0m/                             Untitled0.ipynb
 [01;34mdeeplearningAI[0m/                               Untitled1.ipynb
 [01;34mgcp_tutorial[0m/                                 Untitled2.ipynb
 [01;34mimg[0m/                                          Untitled3.ipynb
 melonData.ipynb                              [01;34m&#39;카카오X멜론 공모전&#39;[0m[K/
 [01;34mpkg_folders[0m/
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;iv-업무-개선---clone-github-repo-to-google-drive&#34;&gt;IV. 업무 개선 - Clone Github Repo to Google Drive&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;우선 깃허브에서 &lt;code&gt;competition&lt;/code&gt;이라는 &lt;code&gt;Repo&lt;/code&gt;를 사전에 만들었다. (이 부분은 안다는 것으로 전제한다!)
&lt;ul&gt;
&lt;li&gt;만약, 처음 &lt;code&gt;Github&lt;/code&gt;를 접한다면, 댓글을 남겨주실 것을 권한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;필자는 &lt;code&gt;Colab Notebooks&lt;/code&gt; 폴더 안에 &lt;code&gt;competiton&lt;/code&gt;라는 &lt;code&gt;repo&lt;/code&gt;를 다운로드 받을 것이다.&lt;/li&gt;
&lt;li&gt;이 때, 아래 4개의 변수를 &lt;code&gt;script&lt;/code&gt;에 저장할 필요가 있다.
&lt;ul&gt;
&lt;li&gt;GIT_TOKEN (GitHub Access Token)&lt;/li&gt;
&lt;li&gt;MY_GOOGLE_DRIVE_PATH&lt;/li&gt;
&lt;li&gt;GIT_USERNAME&lt;/li&gt;
&lt;li&gt;GIT_REPOSITORY&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1-깃허브-access-token&#34;&gt;(1) 깃허브 Access Token&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;[Profile]-[Settings]-[Developer settings]-[Personal Access tokens] 순서대로 클릭한다.
&lt;img src=&#34;https://chloevan.github.io/img/settings/colab_drive_github_settings/settings_01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;이 때, 꼭 아래 그림처럼 &lt;code&gt;repo&lt;/code&gt;를 클릭한다.
&lt;img src=&#34;https://chloevan.github.io/img/settings/colab_drive_github_settings/settings_02.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-4가지-변수-할당&#34;&gt;(2) 4가지 변수 할당&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;소스 코드 작성 전, 몇가지 주의사항이 있다.
&lt;ul&gt;
&lt;li&gt;첫째, 구글 드라이브와 경로에 해당하는 폴더 명과 깃허브의 &lt;code&gt;repo&lt;/code&gt;명을 통일시킨다 (필자는 &lt;code&gt;competition&lt;/code&gt;으로 통일함).&lt;/li&gt;
&lt;li&gt;이 때 한가지 주의점은 &lt;code&gt;Access Token&lt;/code&gt;은 외부로 유출시키지 않는다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;pwd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&#39;/content/drive/My Drive/Colab Notebooks&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Clone github repository setup&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# import join used to join ROOT path and MY_GOOGLE_DRIVE_PATH&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; os.path &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; join  

&lt;span style=&#34;color:#75715e&#34;&gt;# path to your project on Google Drive&lt;/span&gt;
MY_GOOGLE_DRIVE_PATH &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;My Drive/Colab Notebooks/&amp;#39;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# replace with your github username&lt;/span&gt;
GIT_USERNAME &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;chloevan&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# definitely replace with your&lt;/span&gt;
GIT_TOKEN &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;your_token&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# Replace with your github repository in this case we want &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# to clone deep-learning-v2-pytorch repository&lt;/span&gt;
GIT_REPOSITORY &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;competition&amp;#34;&lt;/span&gt;

PROJECT_PATH &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; join(ROOT, MY_GOOGLE_DRIVE_PATH)

&lt;span style=&#34;color:#75715e&#34;&gt;# It&amp;#39;s good to print out the value if you are not sure &lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PROJECT_PATH: &amp;#34;&lt;/span&gt;, PROJECT_PATH)  

&lt;span style=&#34;color:#75715e&#34;&gt;# In case we haven&amp;#39;t created the folder already; we will create a folder in the project path &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# !mkdir &amp;#34;{PROJECT_PATH}&amp;#34;    &lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;#GIT_PATH = &amp;#34;https://{GIT_TOKEN}@github.com/{GIT_USERNAME}/{GIT_REPOSITORY}.git&amp;#34; this return 400 Bad Request for me&lt;/span&gt;
GIT_PATH &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; GIT_TOKEN &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;@github.com/&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; GIT_USERNAME &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; GIT_REPOSITORY &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.git&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;GIT_PATH: &amp;#34;&lt;/span&gt;, GIT_PATH)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;PROJECT_PATH:  /content/drive/My Drive/Colab Notebooks/
GIT_PATH:  https://27e6426ead8d8c63444979436bda4ea8aaf2aea3@github.com/chloevan/competition.git
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;2-깃허브-연동-두가지-옵션&#34;&gt;(2) 깃허브 연동 두가지 옵션&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;여기에서 고려해야 할 사항은 구글 드라이브내 이미 존재하는 파일과 합치는 부분이 있다.&lt;/li&gt;
&lt;li&gt;아래 코드를 확인해보자.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-terminal&#34; data-lang=&#34;terminal&#34;&gt;!git clone &amp;quot;{GIT_PATH}&amp;quot; ./temp      # clone github repository to temp folder
!mv ./temp/* &amp;quot;{PROJECT_PATH}&amp;quot;       # move all files/folders in temp folder to folder defined in project path
!rm -rf ./temp                      # remove all the files/folders in temp folder
!rsync -aP --exclude=data/ &amp;quot;{PROJECT_PATH}&amp;quot;/*  ./   # use remote sync to copy from google drive to local runtime google colab
                                                    # but exclude data folder
                                                    # https://www.computerhope.com/unix/rsync.htm
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;첫번째라인의 코드는 깃허브 &lt;code&gt;repo&lt;/code&gt;를 드라이브 내 &lt;code&gt;temp&lt;/code&gt;폴더에 저장한다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;두번째라인의 코드는 &lt;code&gt;temp&lt;/code&gt;폴더의 모든 파일을 &lt;code&gt;{PROJECT_PATH}&lt;/code&gt;에 잘라넣기 한다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;세번째라인의 코드는 기존 &lt;code&gt;temp&lt;/code&gt;를 삭제 한다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;네번째라인의 코드는 큰 용량을 차지하는 &lt;code&gt;data&lt;/code&gt;와 같은 부분은 제외한다는 뜻이다. (이 부분은 별도의 에러를 경험해야 필요성을 알 수 있을 것 같다!)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;여기에서는 간단하게 &lt;code&gt;!git clone&lt;/code&gt;을 실행한다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;cd &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{PROJECT_PATH}&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;git clone &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{GIT_PATH}&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;/content/drive/My Drive/Colab Notebooks
Cloning into &#39;competition&#39;...
remote: Enumerating objects: 7, done.[K
remote: Counting objects: 100% (7/7), done.[K
remote: Compressing objects: 100% (4/4), done.[K
remote: Total 7 (delta 0), reused 0 (delta 0), pack-reused 0[K
Unpacking objects: 100% (7/7), done.
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;에러가 없다면, 정상적으로 &lt;code&gt;git clone&lt;/code&gt;이 수행된 것이다.&lt;/li&gt;
&lt;li&gt;이 때, 구글 드라이브 내 &lt;code&gt;competition&lt;/code&gt; 폴더에서 &lt;code&gt;.git&lt;/code&gt; 폴더가 생성되었는지 확인한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/settings/colab_drive_github_settings/settings_03.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;3-폴더-정보-확인&#34;&gt;(3) 폴더 정보 확인&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git clone&lt;/code&gt;을 통해서 파일을 내려받았다면, 간단한 명령어로 폴더를 탐색한다.&lt;/li&gt;
&lt;li&gt;이 때 &lt;code&gt;git branch&lt;/code&gt;를 실행하면 &lt;code&gt;master folder&lt;/code&gt;외에 어떤 &lt;code&gt;branch&lt;/code&gt;들이 있는지 확인이 가능하다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;pwd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&#39;/content/drive/My Drive/Colab Notebooks&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;cd competition&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;/content/drive/My Drive/Colab Notebooks/competition
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;git branch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;* [32mmaster[m
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;git checkout master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Already on &#39;master&#39;
Your branch is up to date with &#39;origin/master&#39;.
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;git status
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;On branch master
Your branch is up to date with &#39;origin/master&#39;.

nothing to commit, working tree clean
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;v-파일-추가-및-업데이트&#34;&gt;V. 파일 추가 및 업데이트&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;이제 위 &lt;code&gt;competition&lt;/code&gt;에 참가하기 위한 기본 파일들을 &lt;code&gt;kakao_arena_3&lt;/code&gt;에 저장한다.
&lt;ul&gt;
&lt;li&gt;위 부분은 터미널 명령어가 약하다면 구글 드라이브에서 직접 실행해도 상관없다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1-파일-추가-및-깃허브-업데이트&#34;&gt;(1) 파일 추가 및 깃허브 업데이트&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;간단한게 현재 경로의 파일을 확인하고 소스코드를 작성한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;apt&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;get install tree
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;tree
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Reading package lists... Done
Building dependency tree       
Reading state information... Done
The following NEW packages will be installed:
  tree
0 upgraded, 1 newly installed, 0 to remove and 31 not upgraded.
Need to get 40.7 kB of archives.
After this operation, 105 kB of additional disk space will be used.
Get:1 http://archive.ubuntu.com/ubuntu bionic/universe amd64 tree amd64 1.7.0-5 [40.7 kB]
Fetched 40.7 kB in 0s (117 kB/s)
Selecting previously unselected package tree.
(Reading database ... 144433 files and directories currently installed.)
Preparing to unpack .../tree_1.7.0-5_amd64.deb ...
Unpacking tree (1.7.0-5) ...
Setting up tree (1.7.0-5) ...
Processing triggers for man-db (2.8.3-2ubuntu0.1) ...
.
├── kakao_arena_3
│   └── README.md
└── README.md

1 directory, 2 files
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;!tree&lt;/code&gt;가 실행되지 않는다면, 다음 해당 패키지를 다음 코드 셀에서 다음 명령어를 입력 후 실행한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-terminal&#34; data-lang=&#34;terminal&#34;&gt;!apt-get install tree
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;source&lt;/code&gt; 폴더에 아무것도 없기 때문에, &lt;code&gt;temp.ipynb&lt;/code&gt;파일 생성 후 저장한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;tree
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;.
├── kakao_arena_3
│   ├── README.md
│   └── source
│       └── temp.ipynb
└── README.md

2 directories, 3 files
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;추가된 파일을 확인 후 깃허브에 파일을 저장해보자.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Add / track changed files&lt;/span&gt;
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;git add &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Linked to account&lt;/span&gt;
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;git config &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;global&lt;/span&gt; user&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;email &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;j2hoon85@gmail.com&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;git config &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;global&lt;/span&gt; user&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;name &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;chloevan&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# commit the changes&lt;/span&gt;
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;git commit &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;create temp file&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[master dc8af91] create temp file
 1 file changed, 1 insertion(+)
 create mode 100644 kakao_arena_3/source/temp.ipynb
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# push the changes to github repo&lt;/span&gt;
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;git push
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Counting objects: 5, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (4/4), done.
Writing objects: 100% (5/5), 653 bytes | 163.00 KiB/s, done.
Total 5 (delta 0), reused 0 (delta 0)
To https://github.com/chloevan/competition.git
   04ca27a..dc8af91  master -&amp;gt; master
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;생성된 파일이 깃허브에 잘 올라갔는지 학인해보자.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/settings/colab_drive_github_settings/settings_04.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;
&lt;p&gt;Say, V. (2020, January 01). Google Drive + Google Colab + GitHub; Don&amp;rsquo;t Just Read, Do It! Retrieved May 24, 2020, from &lt;a href=&#34;https://towardsdatascience.com/google-drive-google-colab-github-dont-just-read-do-it-5554d5824228&#34;&gt;https://towardsdatascience.com/google-drive-google-colab-github-dont-just-read-do-it-5554d5824228&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Żero, O. (2019, October 30). Colaboratory + Drive + Github - the workflow made simpler. Retrieved May 24, 2020, from &lt;a href=&#34;https://towardsdatascience.com/colaboratory-drive-github-the-workflow-made-simpler-bde89fba8a39&#34;&gt;https://towardsdatascience.com/colaboratory-drive-github-the-workflow-made-simpler-bde89fba8a39&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Python Package Settings on Google Colab</title>
      <link>https://chloevan.github.io/settings/colab_package_settings/</link>
      <pubDate>Sat, 23 May 2020 21:01:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/settings/colab_package_settings/</guid>
      <description>&lt;h2 id=&#34;공지&#34;&gt;공지&lt;/h2&gt;
&lt;p&gt;제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.&lt;/p&gt;
&lt;h2 id=&#34;i-개요&#34;&gt;I. 개요&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;교육상, 최근 &lt;code&gt;kaggle&lt;/code&gt; 및 국내 경진 대회에 참여할 일이 생겼다.&lt;/li&gt;
&lt;li&gt;실습을 해보니, 매번 패키지와 파일을 다운로드 받는 것이 많이 불편했다.
&lt;ul&gt;
&lt;li&gt;파일을 열 때마다, &lt;code&gt;!pip install name_of_package&lt;/code&gt;을 실행해야 하는 번거로움이 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;이러한 해결책으로 파이썬 패키지를 &lt;code&gt;Google Colab&lt;/code&gt;에 영구적(&lt;code&gt;Permantly&lt;/code&gt;)으로 설치하는 것을 실습한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/kaggle/kaggle_with_colab/logo.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;ii-구글-드라이브-활용&#34;&gt;II. 구글 드라이브 활용&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;구글 드라이브에 패키지 모듈을 내려받고, 구글 드라이브에서 패키지를 불러오는 방식이다. 아래 코드를 보자.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1-사전-준비&#34;&gt;(1) 사전 준비&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;이 때 패키지 관리 폴더는 &lt;code&gt;Colab Notebooks&lt;/code&gt; 안에 &lt;code&gt;pkg_folders&lt;/code&gt;가 없다면 관련 경로대로 추가를 해야 한다. 만약 폴더가 없다면 에러가 날 것이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; sys
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; google.colab &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; drive
drive&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mount(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/content/mnt&amp;#39;&lt;/span&gt;)
my_path &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/content/notebooks&amp;#39;&lt;/span&gt;
os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;symlink(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/content/mnt/My Drive/Colab Notebooks/pkg_folders&amp;#39;&lt;/span&gt;, my_path)
sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;insert(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,my_path)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Go to this URL in a browser: https://accounts.google.com/o/oauth2/auth?client_id=947318989803-6bn6qk8qdgf4n4g3pfee6491hc0brc4i.apps.googleusercontent.com&amp;amp;redirect_uri=urn%3aietf%3awg%3aoauth%3a2.0%3aoob&amp;amp;response_type=code&amp;amp;scope=email%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdocs.test%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive.photos.readonly%20https%3a%2f%2fwww.googleapis.com%2fauth%2fpeopleapi.readonly

Enter your authorization code:
··········
Mounted at /content/mnt
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;위 코드의 실행 결과는 구글 드라이브가 &lt;code&gt;mount&lt;/code&gt;가 되었음을 의미하며, 이제 &lt;code&gt;pip install package&lt;/code&gt;를 실행하면 타겟 경로에 패키지 파일을 받을 수 있습니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-패키지-설치-실습-openpyxl&#34;&gt;(2) 패키지 설치 실습 &lt;code&gt;openpyxl&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;엑셀 관련 패키지인 &lt;code&gt;openpyxl&lt;/code&gt;을 설치합니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-terminal&#34; data-lang=&#34;terminal&#34;&gt;!pip install openpyxl
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;그러나, 이제 아래와 같이 설치를 해야 합니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-terminal&#34; data-lang=&#34;terminal&#34;&gt;!pip install --target=$my_path openpyxl
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code class=&#34;language-terminal&#34; data-lang=&#34;terminal&#34;&gt;!pip install --target=$my_path openpyxl
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;Processing /root/.cache/pip/wheels/b5/85/ca/e768ac132e57e75e645a151f8badac71cc0089e7225dddf76b/openpyxl-3.0.3-py2.py3-none-any.whl
Collecting jdcal
Using cached https://files.pythonhosted.org/packages/f0/da/572cbc0bc582390480bbd7c4e93d14dc46079778ed915b505dc494b37c57/jdcal-1.4.1-py2.py3-none-any.whl
Processing /root/.cache/pip/wheels/2a/77/35/0da0965a057698121fc7d8c5a7a9955cdbfb3cc4e2423cad39/et_xmlfile-1.0.1-cp36-none-any.whl
Installing collected packages: jdcal, et-xmlfile, openpyxl
Successfully installed et-xmlfile-1.0.1 jdcal-1.4.1 openpyxl-3.0.3
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;에러 없이 정상적으로 설치가 된 것을 확인할 수 있다.&lt;/li&gt;
&lt;li&gt;이 때, &lt;code&gt;Google Drive&lt;/code&gt;인 &lt;code&gt;Web UI&lt;/code&gt;에서도 패키지가 정상적으로 다운로드가 받아진 것을 확인할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/kaggle/colab_package_settings/drive_01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;예제 코드를 실행하자.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;package&lt;/code&gt;를 불러와보자.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; openpyxl &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; __version__
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(__version__)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;3.0.3
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;정상적으로 버전이 불러와졌다면 패키지가 설치된 것이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-한글-konlpy-설치&#34;&gt;(3) 한글 konlpy 설치&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;이번에는 &lt;code&gt;konlpy&lt;/code&gt;를 설치해보자.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-terminal&#34; data-lang=&#34;terminal&#34;&gt;!apt-get update
!apt-get install g++ openjdk-8-jdk 
!pip3 install --target=$my_path konlpy
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;Hit:1 http://ppa.launchpad.net/graphics-drivers/ppa/ubuntu bionic InRelease
Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease                        
.
.
.
Collecting konlpy
Downloading https://files.pythonhosted.org/packages/85/0e/f385566fec837c0b83f216b2da65db9997b35dd675e107752005b7d392b1/konlpy-0.5.2-py2.py3-none-any.whl (19.4MB)
    |████████████████████████████████| 19.4MB 37.0MB/s 
.
.
.
Installing collected packages: beautifulsoup4, numpy, colorama, lxml, six, PySocks, urllib3, chardet, certifi, idna, requests, oauthlib, requests-oauthlib, tweepy, JPype1, konlpy
Successfully installed JPype1-0.7.5 PySocks-1.7.1 beautifulsoup4-4.6.0 certifi-2020.4.5.1 chardet-3.0.4 colorama-0.4.3 idna-2.9 konlpy-0.5.2 lxml-4.5.1 numpy-1.18.4 oauthlib-3.1.0 requests-2.23.0 requests-oauthlib-1.3.0 six-1.15.0 tweepy-3.8.0 urllib3-1.25.9
WARNING: Target directory /content/notebooks/__pycache__ already exists. Specify --upgrade to force replacement.
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; konlpy.tag &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Twitter

twitter &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Twitter()
twitter&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pos(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;질문이나 건의사항은 깃헙 이슈 트래커에 남겨주세요&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;/content/notebooks/konlpy/tag/_okt.py:16: UserWarning: &amp;quot;Twitter&amp;quot; has changed to &amp;quot;Okt&amp;quot; since KoNLPy v0.4.5.
warn(&#39;&amp;quot;Twitter&amp;quot; has changed to &amp;quot;Okt&amp;quot; since KoNLPy v0.4.5.&#39;)
[(&#39;질문&#39;, &#39;Noun&#39;),
(&#39;이나&#39;, &#39;Josa&#39;),
(&#39;건의&#39;, &#39;Noun&#39;),
(&#39;사항&#39;, &#39;Noun&#39;),
(&#39;은&#39;, &#39;Josa&#39;),
(&#39;깃&#39;, &#39;Noun&#39;),
(&#39;헙&#39;, &#39;Verb&#39;),
(&#39;이슈&#39;, &#39;Noun&#39;),
(&#39;트래커&#39;, &#39;Noun&#39;),
(&#39;에&#39;, &#39;Josa&#39;),
(&#39;남겨주세요&#39;, &#39;Verb&#39;)]
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;정상적으로 패키지가 불러와지는 것을 확인할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;iii-새로운-노트북에서의-실습&#34;&gt;III. 새로운 노트북에서의 실습&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;이제 새로운 &lt;code&gt;Notebook&lt;/code&gt;을 열고 위 기 설치된 두개의 패키지가 정상적으로 실행되는지 확인해본다.&lt;/li&gt;
&lt;li&gt;이 때 주의해야 하는 것은 새로운 &lt;code&gt;Notebook&lt;/code&gt;은 자동으로 경로가 설정된 것은 아니기 때문에, 아래 코드를 명시적으로 상단에 입력해주는 것이 좋다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; sys
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; google.colab &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; drive
drive&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mount(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/content/mnt&amp;#39;&lt;/span&gt;)
my_path &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/content/notebooks&amp;#39;&lt;/span&gt;
os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;symlink(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/content/mnt/My Drive/Colab Notebooks/pkg_folders&amp;#39;&lt;/span&gt;, my_path)
sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;insert(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,my_path)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;아래 그림을 보면 별도의 패키지 설치 없이 &lt;code&gt;Google Drive&lt;/code&gt;를 활용하여 패키지가 불러와지는 것을 확인할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/kaggle/colab_package_settings/test_01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;iv-reference&#34;&gt;IV. Reference&lt;/h2&gt;
&lt;p&gt;어쩐지 오늘은. (2018, August 30). Google Colab 사용하기. Retrieved May 23, 2020, from &lt;a href=&#34;https://zzsza.github.io/data/2018/08/30/google-colab/&#34;&gt;https://zzsza.github.io/data/2018/08/30/google-colab/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Korakot. (2019, March 20). How do I install a library permanently in Colab? Retrieved May 23, 2020, from &lt;a href=&#34;https://stackoverflow.com/questions/55253498/how-do-i-install-a-library-permanently-in-colab&#34;&gt;https://stackoverflow.com/questions/55253498/how-do-i-install-a-library-permanently-in-colab&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Lee, T. (2020, March 20). Google Colab에서 python 패키지를 영구적(permanently)으로 설치하는 방법. Retrieved May 23, 2020, from &lt;a href=&#34;shorturl.at/ktANW&#34;&gt;shorturl.at/ktANW&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Kaggle with Google Colab</title>
      <link>https://chloevan.github.io/settings/kaggle_with_colab/</link>
      <pubDate>Wed, 20 May 2020 08:12:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/settings/kaggle_with_colab/</guid>
      <description>&lt;h2 id=&#34;공지&#34;&gt;공지&lt;/h2&gt;
&lt;p&gt;제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.&lt;/p&gt;
&lt;h2 id=&#34;i-개요&#34;&gt;I. 개요&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Kaggle 대회에서 나오는 데이터의 용량은 작은 편은 아니다.&lt;/li&gt;
&lt;li&gt;성능이 적은 노트북을 사용해야 하는 경우라면 &lt;code&gt;Google Colab&lt;/code&gt;을 사용해야 한다.&lt;/li&gt;
&lt;li&gt;이 때, &lt;code&gt;Kaggle&lt;/code&gt; 데이터를 &lt;code&gt;Google Colab&lt;/code&gt;으로 다운로드 받는 과정에 대해 기술 하려고 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/kaggle/kaggle_with_colab/logo.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;ii-캐글-계정에서-해야-할-것&#34;&gt;II. 캐글 계정에서 해야 할 것&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;먼저 본인의 계정에서 &lt;code&gt;API Token&lt;/code&gt;을 다운로드 받는다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/kaggle/kaggle_with_colab/kaggle_01_api.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;iii-google-colab에서-해야-할-것&#34;&gt;III. Google Colab에서 해야 할 것&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Create New API Token&lt;/code&gt;을 누르면 &lt;code&gt;kaggle.json&lt;/code&gt; 파일이 다운로드 된다. 이 파일을 바탕화면에 옮긴 뒤, 아래 코드를 실행 시킨다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;pip install kaggle
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Requirement already satisfied: kaggle in /usr/local/lib/python3.6/dist-packages (1.5.6)
Requirement already satisfied: tqdm in /usr/local/lib/python3.6/dist-packages (from kaggle) (4.41.1)
Requirement already satisfied: urllib3&amp;lt;1.25,&amp;gt;=1.21.1 in /usr/local/lib/python3.6/dist-packages (from kaggle) (1.24.3)
Requirement already satisfied: python-slugify in /usr/local/lib/python3.6/dist-packages (from kaggle) (4.0.0)
Requirement already satisfied: six&amp;gt;=1.10 in /usr/local/lib/python3.6/dist-packages (from kaggle) (1.12.0)
Requirement already satisfied: certifi in /usr/local/lib/python3.6/dist-packages (from kaggle) (2020.4.5.1)
Requirement already satisfied: requests in /usr/local/lib/python3.6/dist-packages (from kaggle) (2.23.0)
Requirement already satisfied: python-dateutil in /usr/local/lib/python3.6/dist-packages (from kaggle) (2.8.1)
Requirement already satisfied: text-unidecode&amp;gt;=1.3 in /usr/local/lib/python3.6/dist-packages (from python-slugify-&amp;gt;kaggle) (1.3)
Requirement already satisfied: chardet&amp;lt;4,&amp;gt;=3.0.2 in /usr/local/lib/python3.6/dist-packages (from requests-&amp;gt;kaggle) (3.0.4)
Requirement already satisfied: idna&amp;lt;3,&amp;gt;=2.5 in /usr/local/lib/python3.6/dist-packages (from requests-&amp;gt;kaggle) (2.9)
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; google.colab &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; files
files&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;upload()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
Upload widget is only available when the cell has been executed in the
current browser session. Please rerun this cell to enable.
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;pre&gt;&lt;code&gt;Saving kaggle.json to kaggle.json





{&#39;kaggle.json&#39;: b&#39;{&amp;quot;username&amp;quot;:&amp;quot;your_id&amp;quot;,&amp;quot;key&amp;quot;:&amp;quot;your_key_value&amp;quot;}&#39;}
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;위 파일이 제대로 업로드 되었는지 확인하기 위해 아래 코드를 실행한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;ls &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;ha kaggle&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;json
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;kaggle.json
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;위 코드를 실행 시켰을 때, &lt;code&gt;kaggle.json&lt;/code&gt;이 나온다면 성공적이다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;json&lt;/code&gt; 파일을 &lt;code&gt;~/.kaggle&lt;/code&gt;로 이동 시켜야 하며, 아래 코드를 실행시키자.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;mkdir &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;p &lt;span style=&#34;color:#f92672&#34;&gt;~/.&lt;/span&gt;kaggle &lt;span style=&#34;color:#75715e&#34;&gt;# 파일 생성&lt;/span&gt;
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;mv kaggle&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;json &lt;span style=&#34;color:#f92672&#34;&gt;~/.&lt;/span&gt;kaggle&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# kaggle.json 파일 이동&lt;/span&gt;
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;chmod &lt;span style=&#34;color:#ae81ff&#34;&gt;600&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;~/.&lt;/span&gt;kaggle&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;kaggle&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;json &lt;span style=&#34;color:#75715e&#34;&gt;# 권한 부여&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;현재 진행중인 &lt;code&gt;Compeition&lt;/code&gt;을 확인한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;kaggle competitions list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Warning: Looks like you&#39;re using an outdated API Version, please consider updating (server 1.5.6 / client 1.5.4)
ref                                               deadline             category            reward  teamCount  userHasEntered  
------------------------------------------------  -------------------  ---------------  ---------  ---------  --------------  
digit-recognizer                                  2030-01-01 00:00:00  Getting Started  Knowledge       3000           False  
titanic                                           2030-01-01 00:00:00  Getting Started  Knowledge      22146            True  
house-prices-advanced-regression-techniques       2030-01-01 00:00:00  Getting Started  Knowledge       5138            True  
connectx                                          2030-01-01 00:00:00  Getting Started  Knowledge        399           False  
nlp-getting-started                               2030-01-01 00:00:00  Getting Started      Kudos       1965            True  
competitive-data-science-predict-future-sales     2020-12-31 23:59:00  Playground           Kudos       6867           False  
global-wheat-detection                            2020-08-04 23:59:00  Research           $15,000        386           False  
open-images-object-detection-rvc-2020             2020-07-31 16:00:00  Playground       Knowledge          1           False  
open-images-instance-segmentation-rvc-2020        2020-07-31 16:00:00  Playground       Knowledge          0           False  
hashcode-photo-slideshow                          2020-07-27 23:59:00  Playground       Knowledge         25           False  
prostate-cancer-grade-assessment                  2020-07-22 23:59:00  Featured           $25,000        395           False  
alaska2-image-steganalysis                        2020-07-20 23:59:00  Research           $25,000        328           False  
halite                                            2020-06-30 23:59:00  Featured             Kudos          0           False  
m5-forecasting-accuracy                           2020-06-30 23:59:00  Featured           $50,000       4008            True  
m5-forecasting-uncertainty                        2020-06-30 23:59:00  Featured           $50,000        439           False  
trends-assessment-prediction                      2020-06-29 23:59:00  Research           $25,000        363           False  
jigsaw-multilingual-toxic-comment-classification  2020-06-22 23:59:00  Featured           $50,000        998           False  
tweet-sentiment-extraction                        2020-06-16 23:59:00  Featured           $15,000       1278           False  
imet-2020-fgvc7                                   2020-05-28 23:59:00  Research         Knowledge         82           False  
abstraction-and-reasoning-challenge               2020-05-27 23:59:00  Research           $20,000        841           False  
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;이 때 참가하려는 현재 진행중인 대회 &lt;code&gt;M5 Forecasting - Accuracy&lt;/code&gt;에 참가한다고 가정해보자.&lt;/li&gt;
&lt;li&gt;아래 코드를 실행하면 데이터를 다운로드 받을 수 있다.&lt;/li&gt;
&lt;li&gt;구글 코랩 &lt;code&gt;content&lt;/code&gt; 폴더에 가면 &lt;code&gt;zip&lt;/code&gt; 파일을 확인할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt; kaggle competitions download &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;c m5&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;forecasting&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;accuracy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Warning: Looks like you&#39;re using an outdated API Version, please consider updating (server 1.5.6 / client 1.5.4)
sales_train_validation.csv.zip: Skipping, found more recently modified local copy (use --force to force download)
sample_submission.csv.zip: Skipping, found more recently modified local copy (use --force to force download)
calendar.csv: Skipping, found more recently modified local copy (use --force to force download)
sell_prices.csv.zip: Skipping, found more recently modified local copy (use --force to force download)
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;다운로드된 모든 파일을 아래와 같이 &lt;code&gt;unzip&lt;/code&gt;을 사용해서 확인한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;unzip sales_train_validation&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;csv&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;zip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Archive:  sales_train_validation.csv.zip
  inflating: sales_train_validation.csv  
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;ls
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;calendar.csv			sample_data
sales_train_validation.csv	sample_submission.csv.zip
sales_train_validation.csv.zip	sell_prices.csv.zip
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;iv-결론&#34;&gt;IV. 결론&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Kaggle에서 데이터를 다운로드 받는 부분을 수행하였고, 이 부분을 통해서 이제 여러분들이 적극적으로 코드를 경험하기를 바란다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;v-reference&#34;&gt;V. Reference&lt;/h2&gt;
&lt;p&gt;출처: Jay Speidell. Easy way to use Kaggle datasets in Google Colab. Retrieved from &lt;a href=&#34;https://www.kaggle.com/general/51898&#34;&gt;https://www.kaggle.com/general/51898&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hugo - 이미지 위치 설정</title>
      <link>https://chloevan.github.io/settings/image_center/</link>
      <pubDate>Sat, 16 May 2020 17:20:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/settings/image_center/</guid>
      <description>&lt;h2 id=&#34;i-problem&#34;&gt;I. Problem&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Hugo&lt;/code&gt;에서 이미지를 업로드하면 자동적으로 왼쪽(Left) 정렬이 된다. 기본적으로 마크다운 내에서 &lt;code&gt;html&lt;/code&gt; 적용은 되지 않는 문제점이 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;아래는 기본적인 &lt;code&gt;img&lt;/code&gt; 업로드 방식이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;![](/img/python/basic_syntax/numpy.png)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/python/basic_syntax/numpy.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;위 그림처럼 왼쪽으로 치우친 것을 볼 수 있다. 이럴 경우 어떻게 해결해야 할까? 간단하게 해결 방법을 정리하여 공유한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ii-css-파일-찾기&#34;&gt;II. CSS 파일 찾기&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;기본적으로 이미지를 핸들링 하는 것은 &lt;code&gt;CSS&lt;/code&gt; 파일에서 해결한다. 문제는 &lt;code&gt;어떤 CSS&lt;/code&gt; 파일을 열어야 하는지 처음에는 어려울 것이다.&lt;/li&gt;
&lt;li&gt;첫째, 대부분 &lt;code&gt;hugo&lt;/code&gt; 개발자들이 테마를 사용하기 때문에 테마에서 &lt;code&gt;css&lt;/code&gt; 파일을 찾는다.
&lt;ul&gt;
&lt;li&gt;강사의 테마는 &lt;code&gt;mainroad&lt;/code&gt;이며, 위 기준으로 말씀드리면 파일 경로는 아래와 .&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-terminal&#34; data-lang=&#34;terminal&#34;&gt;themes/mainroad/assets/css/style.css
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;style.css&lt;/code&gt; 파일을 열면, 테마에 적용된 각종 &lt;code&gt;css&lt;/code&gt; 태그들을 확인할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;iii-css-파일에-소스-추가&#34;&gt;III. CSS 파일에 소스 추가&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;다른 소스 코드는 만지지 않는다.&lt;/li&gt;
&lt;li&gt;맨 마지막에서 아래와 같은 소스코드를 입력한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;img&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;$=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;#center&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
{
    &lt;span style=&#34;color:#66d9ef&#34;&gt;display&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;block&lt;/span&gt;;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;margin&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0.7&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;rem&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;auto&lt;/span&gt;; &lt;span style=&#34;color:#75715e&#34;&gt;/* you can replace the vertical &amp;#39;0.7rem&amp;#39; by
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;                            whatever floats your boat, but keep the
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;                            horizontal &amp;#39;auto&amp;#39; for this to work */&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;/* whatever else styles you fancy here */&lt;/span&gt;
}

&lt;span style=&#34;color:#f92672&#34;&gt;img&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;$=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;#floatleft&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
{
    &lt;span style=&#34;color:#66d9ef&#34;&gt;float&lt;/span&gt;:&lt;span style=&#34;color:#66d9ef&#34;&gt;left&lt;/span&gt;;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;margin&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0.7&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;rem&lt;/span&gt;;      &lt;span style=&#34;color:#75715e&#34;&gt;/* this margin is totally up to you */&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;/* whatever else styles you fancy here */&lt;/span&gt;
}

&lt;span style=&#34;color:#f92672&#34;&gt;img&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;$=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;#floatright&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
{
    &lt;span style=&#34;color:#66d9ef&#34;&gt;float&lt;/span&gt;:&lt;span style=&#34;color:#66d9ef&#34;&gt;right&lt;/span&gt;;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;margin&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0.7&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;rem&lt;/span&gt;;      &lt;span style=&#34;color:#75715e&#34;&gt;/* this margin is totally up to you */&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;/* whatever else styles you fancy here */&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;위 코드에서 각 스타일에 맞게 &lt;code&gt;margin&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt; 등을 &lt;code&gt;css&lt;/code&gt; 코드에 맞게 수정 변환하면 된다.&lt;/li&gt;
&lt;li&gt;수정하였다면 이제 저장한뒤, 작성중인 마크다운으로 다시 돌아간다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;iv-markdown-파일에의-적용&#34;&gt;IV. Markdown 파일에의 적용.&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;이제 적용해보자. 적용하는 것은 어렵지 않다. 이미지 경로 마지막에 &lt;code&gt;#center&lt;/code&gt;, &lt;code&gt;#floatleft&lt;/code&gt;, &lt;code&gt;#floatright&lt;/code&gt; 등을 입력하면 된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;![](/img/your_image_folder/your_image.png#center) # floatleft, floatright
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;#center&lt;/code&gt;의 예시&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/python/basic_syntax/numpy.png#center&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;v-결론&#34;&gt;V. 결론&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;막상 알고보면 매우 쉽지만, 알아가는 과정은 조금 시간이 걸렸다.&lt;/li&gt;
&lt;li&gt;참조했던 래퍼런스를 확인하면, 보다 더 많은 옵션을 각 블로그에 추가할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Always. Happy To Code&lt;/p&gt;
&lt;h2 id=&#34;vi-reference&#34;&gt;VI. Reference&lt;/h2&gt;
&lt;p&gt;Solo. “Centering Images in Hugo.” Centering Images in Hugo, Oct. 2016, &lt;a href=&#34;http://www.ebadf.net/2016/10/19/centering-images-in-hugo/&#34;&gt;www.ebadf.net/2016/10/19/centering-images-in-hugo/&lt;/a&gt;.
luckrill. &amp;ldquo;How to set image center?&amp;rdquo; in Hugo, Aug. 2019, &lt;a href=&#34;https://discourse.gohugo.io/t/how-to-set-image-center/20103&#34;&gt;https://discourse.gohugo.io/t/how-to-set-image-center/20103&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Github에 Daily 코딩 설정</title>
      <link>https://chloevan.github.io/settings/daily_coding/</link>
      <pubDate>Sat, 09 May 2020 10:00:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/settings/daily_coding/</guid>
      <description>&lt;h2 id=&#34;i-motivation&#34;&gt;I. Motivation&lt;/h2&gt;
&lt;p&gt;오늘은 데이터 분석과 크게 관련이 없는 포스팅을 해보자. 오늘 깃허브에 꾸미려고 하는 것은 아래와 같다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/settings/github_settings/daily_coding.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;주로 깃허브를 올리는 시간은 언제인가? 그저 단순 재미로 포스팅을 해본다.&lt;/p&gt;
&lt;h2 id=&#34;ii-prep-work&#34;&gt;II. Prep Work&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;첫번째, &lt;code&gt;Gist&lt;/code&gt;를 클릭하여 활성화를 합니다. (&lt;a href=&#34;https://gist.github.com/&#34;&gt;https://gist.github.com/&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;두번째, 이제 토큰을 생성하자. 이 때 중요한 것은 &lt;code&gt;rest&lt;/code&gt; &amp;amp; &lt;code&gt;gist&lt;/code&gt;를 클릭한 뒤 생성을 해야 한다. (&lt;a href=&#34;https://github.com/settings/tokens/new&#34;&gt;https://github.com/settings/tokens/new&lt;/a&gt;)&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Note&lt;/code&gt;에는 토큰 생성 목적을 기재하면 된다. (필자는 &lt;code&gt;Productivity Box&lt;/code&gt;)라고 했다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Select Scope&lt;/code&gt;에서 &lt;code&gt;rest&lt;/code&gt; &amp;amp; &lt;code&gt;gist&lt;/code&gt;를 아래 그림과 같이 클릭하자.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/settings/github_settings/select_scope.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;그리고, &lt;code&gt;Generate Tokens&lt;/code&gt;을 실행한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;세번째, 생성된 토큰을 일단 복사를 해서 &lt;code&gt;gist&lt;/code&gt; 페이지에 붙여 넣고 &lt;code&gt;create public gist&lt;/code&gt;를 클릭한다.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;iii-project-set-up&#34;&gt;III. Project Set Up&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;첫번째, &lt;code&gt;https://github.com/techinpark/productive-box&lt;/code&gt; &lt;code&gt;Repo&lt;/code&gt;를 활용하여 &lt;code&gt;fork&lt;/code&gt;를 진행한다.&lt;/li&gt;
&lt;li&gt;두번째, 이제 환경변수를 설정합니다.&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;수정해야 항목은 &lt;code&gt;GH_TOKEN&lt;/code&gt;, 그리고 &lt;code&gt;GH_TOKEN&lt;/code&gt;이다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fork&lt;/code&gt;를 진행하면 &lt;code&gt;productive-box/.github/workflows/schedule.yml&lt;/code&gt;에서 아래와 같은 &lt;code&gt;yaml&lt;/code&gt;을 확인할 수 있다.&lt;/li&gt;
&lt;li&gt;여기에 있는 코딩은 가급적 만지지 않는다. 참고 사항으로만 확인한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;환경변수는 아래와 같습니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;name&lt;/span&gt;: Update gist
&lt;span style=&#34;color:#66d9ef&#34;&gt;on&lt;/span&gt;:
  &lt;span style=&#34;color:#66d9ef&#34;&gt;push&lt;/span&gt;:
    &lt;span style=&#34;color:#66d9ef&#34;&gt;branches&lt;/span&gt;:
      - master
  &lt;span style=&#34;color:#66d9ef&#34;&gt;schedule&lt;/span&gt;:
    - &lt;span style=&#34;color:#66d9ef&#34;&gt;cron&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0 0 * * *&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;jobs&lt;/span&gt;:
  &lt;span style=&#34;color:#66d9ef&#34;&gt;update-gist&lt;/span&gt;:
    &lt;span style=&#34;color:#66d9ef&#34;&gt;runs-on&lt;/span&gt;: ubuntu-latest
    &lt;span style=&#34;color:#66d9ef&#34;&gt;steps&lt;/span&gt;:
      - &lt;span style=&#34;color:#66d9ef&#34;&gt;uses&lt;/span&gt;: actions/checkout@v2
      - &lt;span style=&#34;color:#66d9ef&#34;&gt;name&lt;/span&gt;: Update gist
        &lt;span style=&#34;color:#66d9ef&#34;&gt;uses&lt;/span&gt;: maxam2017/productive-box@master
        &lt;span style=&#34;color:#66d9ef&#34;&gt;env&lt;/span&gt;:
          &lt;span style=&#34;color:#66d9ef&#34;&gt;GH_TOKEN&lt;/span&gt;: ${{ secrets.GH_TOKEN }}
          &lt;span style=&#34;color:#66d9ef&#34;&gt;GIST_ID&lt;/span&gt;: ${{ secrets.GIST_ID }}
          &lt;span style=&#34;color:#66d9ef&#34;&gt;LOCALE&lt;/span&gt;: ko-KR
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;1-gist_id&#34;&gt;(1) GIST_ID&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;II-3&lt;/code&gt;를 실행하면 아래와 같은 &lt;code&gt;URL&lt;/code&gt;을 확인할 수 있다.&lt;/li&gt;
&lt;li&gt;URL - &lt;code&gt;https://gist.github.com/chloevan/your_gist_ID&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;이 때, &lt;code&gt;chloevan&lt;/code&gt; 뒤에 오는 부분이 &lt;code&gt;GIST_ID&lt;/code&gt;가 되며, 이 부분을 복사할 것이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-gh_token&#34;&gt;(2) GH_TOKEN&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;GH_TOKEN&lt;/code&gt;은 &lt;code&gt;II-2&lt;/code&gt;에서 이미 만들어 났다. 이 부분을 또한 복사해서 붙일 것이다. 강사에게 적용된 &lt;code&gt;.yaml&lt;/code&gt; 파일 형식이다.&lt;/li&gt;
&lt;li&gt;LOCALE: The locale of your country, eg. zh-TW for Taiwan, en-US for America, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;iv-github-세팅&#34;&gt;IV. Github 세팅&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;이제 깃허브 세팅으로 넘어가자. Go to the repo &lt;code&gt;Settings &amp;gt; Secrets&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;이 때, &lt;code&gt;Name&lt;/code&gt;에는 꼭 &lt;code&gt;GH_TOKEN&lt;/code&gt;라고 명기하고, &lt;code&gt;GH_TOKEN&lt;/code&gt;값을 입력한다.&lt;/li&gt;
&lt;li&gt;마찬가지로 &lt;code&gt;GIST_ID&lt;/code&gt;도 명기하여 &lt;code&gt;Secrets&lt;/code&gt;에 파일을 추가합니다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fork&lt;/code&gt;한 &lt;code&gt;repo&lt;/code&gt;로 돌아가서 다시 &lt;code&gt;Settings &amp;gt; Actions&lt;/code&gt;에서 &lt;code&gt;Enable&lt;/code&gt;버튼을 누르고 활성화 시킨다.&lt;/li&gt;
&lt;li&gt;그리고, 모든 설정이 끝났다. 프로필로 돌아가서 해당 &lt;code&gt;Repo&lt;/code&gt;를 Pinned 처리 하면 된다.&lt;/li&gt;
&lt;li&gt;처음에는 아래와 같이 큰 변화가 없지만, &lt;code&gt;cron&lt;/code&gt;에 지정된 일정 시간이 지나면 아래와 같이 확인할 수 있다. (&lt;code&gt;Default&lt;/code&gt;로 하셨다면, 다음날 확인 가능)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/settings/github_settings/after_settings.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>matplotlib 한글 폰트 오류 해결</title>
      <link>https://chloevan.github.io/settings/matplotlib_koreanfont/</link>
      <pubDate>Fri, 17 Apr 2020 23:15:47 +0900</pubDate>
      
      <guid>https://chloevan.github.io/settings/matplotlib_koreanfont/</guid>
      <description>&lt;h2 id=&#34;공지&#34;&gt;공지&lt;/h2&gt;
&lt;p&gt;제 수업을 듣는 사람들이 계속적으로 실습할 수 있도록 강의 파일을 만들었습니다. 늘 도움이 되기를 바라며. 참고했던 교재 및 Reference는 꼭 확인하셔서 교재 구매 또는 관련 Reference를 확인하시기를 바랍니다.&lt;/p&gt;
&lt;p&gt;도움이 되었다면 &lt;code&gt;Github&lt;/code&gt;에 &lt;code&gt;Star&lt;/code&gt;를 눌러주세요.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/chloevan/python_visualisation&#34;&gt;python_visualisation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;matplotlib-한글폰트-오류-해결&#34;&gt;Matplotlib 한글폰트 오류 해결&lt;/h2&gt;
&lt;p&gt;한글을 사랑하지만, 코딩의 예외다. 프로그래밍 언어 자체가 영어기반이기 때문에 그런것도 있고, 아무튼 한글 부분이 네모 박스로 표시되면서 한글폰트가 깨지는 현상이 종종 발생한다. 오류를 해결하려면 먼저 한글폰트를 지정하는 다음의 코드를 추가해야 한다.&lt;/p&gt;
&lt;p&gt;우선 실제로 한글 폰트가 깨지는지 확인해보는 코드를 작성해보자.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 모듈 불러오기&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pd
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; plt

&lt;span style=&#34;color:#75715e&#34;&gt;# Excel 데이터 데이터프레임으로 변환&lt;/span&gt;
covid_19 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read_excel(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/Users/jihoonjung/Documents/python_visualisation/data/20200406-COVID-19-geographic-disbtribution-worldwide.xlsx&amp;#34;&lt;/span&gt;)

&lt;span style=&#34;color:#75715e&#34;&gt;# KOR 데이터만 추출, val. countryterritoryCode&lt;/span&gt;
covid_kor &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; covid_19[covid_19[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;countryterritoryCode&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;KOR&amp;#39;&lt;/span&gt;]
covid_kor&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_index(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dateRep&amp;#39;&lt;/span&gt;, inplace&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True)

plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;style&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;use(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;bmh&amp;#39;&lt;/span&gt;)

plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(covid_kor&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index, covid_kor&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;cases)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;title(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;대한민국 코로나 확진자 수 그래프&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;xlabel(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;기간&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ylabel(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;확진자수&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;legend(labels&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;확진자수&amp;#39;&lt;/span&gt;], loc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;best&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/settings/matplotlib_koreanfont/output_1_1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;위 그래프를 보니, 실제로 네모박스가 나왔다. 이 때 어떻게 해결해야 할까? 우선 OS 환경에 따라 다르다. 그러나, 기본 원리는 똑같다.
폰트 경로를 지정하면 된다.&lt;/p&gt;
&lt;h2 id=&#34;macos-버전&#34;&gt;MacOS 버전&lt;/h2&gt;
&lt;p&gt;강사는 MacOS를 사용하기 때문에, 두줄 코드만 입력하면 된다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; matplotlib &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; rc
rc(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;font&amp;#39;&lt;/span&gt;, family&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AppleGothic&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;위 코드를 입력 후, 다시 출력해본다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 한글폰트 오류 해결&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; matplotlib &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; rc
rc(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;font&amp;#39;&lt;/span&gt;, family&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AppleGothic&amp;#34;&lt;/span&gt;)

plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;style&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;use(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;bmh&amp;#39;&lt;/span&gt;)

plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(covid_kor&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index, covid_kor&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;cases)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;title(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;대한민국 코로나 확진자 수 그래프&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;xlabel(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;기간&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ylabel(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;확진자수&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;legend(labels&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;확진자수&amp;#39;&lt;/span&gt;], loc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;best&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://chloevan.github.io/img/settings/matplotlib_koreanfont/output_3_0.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;이렇게 정상적으로 출력되는 것을 확인할 수 있다.&lt;/p&gt;
&lt;h2 id=&#34;windows-버전&#34;&gt;Windows 버전&lt;/h2&gt;
&lt;p&gt;윈도우즈의 경우 Mac과 달리 font_manager 코드가 추가가 된다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# matplotlib 한글 폰트 오류 문제 해결&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; matplotlib &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; font_manager, rc
font_path &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;./한글폰트.ttf&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 폰트 파일 위치&lt;/span&gt;
font_name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; font_manager&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;FontProperties(fname&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;font_path)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_name()
rc(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;font&amp;#39;&lt;/span&gt;, family&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;font_name)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;
&lt;p&gt;“똑똑이” [Python] matplotlib 한글폰트 설정방법, &lt;a href=&#34;http://wideeyed.blog.me/221225208497&#34;&gt;http://wideeyed.blog.me/221225208497&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hugo &#43; Mathjax 설정</title>
      <link>https://chloevan.github.io/settings/mathjax/</link>
      <pubDate>Wed, 15 Apr 2020 13:40:30 +0900</pubDate>
      
      <guid>https://chloevan.github.io/settings/mathjax/</guid>
      <description>&lt;h2 id=&#34;i-인라인-수식-에러&#34;&gt;I. 인라인 수식 에러&lt;/h2&gt;
&lt;p&gt;한동안 수식 에러를 많나 고생하였다. &lt;code&gt;$$&lt;/code&gt; &lt;code&gt;...&lt;/code&gt; &lt;code&gt;$$&lt;/code&gt; 코드는 잘 적용이 되었다. 그런데, 글 중간에 수식을 넣는 건 잘 되지 않았다. &lt;code&gt;$&lt;/code&gt; &lt;code&gt;...&lt;/code&gt; &lt;code&gt;$&lt;/code&gt; 표현하면 수식문법이 그대로 나와서 글의 가독성이 조금 떨어져 있었다. 통계수식을 넣어주면, 그냥 무언가 전문가스럽다! 전문가도 아니지만 ㅎㅎ&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$x_{i}$&lt;/code&gt; 내가 표현하고자 하는 것 Vs. &lt;code&gt;x_{i}&lt;/code&gt; 실제로 화면에 나오는 것&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;그리고, 한동안 헤매었다. 길은 알고 있었으나, 역시 적용이 쉽지 않았다. 아래는 해결 방안을 공유한다.&lt;/p&gt;
&lt;h2 id=&#34;ii-테마에서-사용되는-latex-문법-확인&#34;&gt;II. 테마에서 사용되는 Latex 문법 확인&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Hugo&lt;/code&gt; 블로그 사용자분들은 테마를 사용할 것이다. 필자는 &lt;code&gt;mainroad&lt;/code&gt;를 사용하는데, &lt;code&gt;Mathjax&lt;/code&gt;를 사용하는 것을 확인하였고, &lt;code&gt;config.toml&lt;/code&gt;에서 확인하였다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;테마에 관심이 있으신 분들은.. 다음을 참조하시기를 바란다. &lt;a href=&#34;https://themes.gohugo.io/mainroad/&#34;&gt;mainroad 홈페이지&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;Params&lt;/span&gt;]
  ..
  ..
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mathjax&lt;/span&gt; = &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# Enable MathJax&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mathjaxPath&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.6/MathJax.js&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# Specify MathJax path&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mathjaxConfig&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;TeX-AMS-MML_HTMLorMML&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# Specify MathJax config&lt;/span&gt;
  ..
  ..
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;그리고, &lt;code&gt;Mathjax + Hugo + inline math&lt;/code&gt; 위주로 검색을 진행하였다.&lt;/p&gt;
&lt;h2 id=&#34;iii-reference&#34;&gt;III. Reference&lt;/h2&gt;
&lt;p&gt;아래 세 글을 읽고 적용하였더니, 생각보다 쉬웠다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://discourse.gohugo.io/t/solved-mathjax-stopped-working/5946&#34;&gt;[solved] MathJax stopped working&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://divadnojnarg.github.io/blog/mathjax/&#34;&gt;Setting MathJax with Hugo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://trvoid.blogspot.com/2019/07/hugo.html&#34;&gt;Hugo에서 수학식 쓰기&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;순차적으로 글을 읽으면서 어느정도 정리가 되었다. 일단 &lt;code&gt;layouts-partials&lt;/code&gt; 폴더를 찾아야 한다.&lt;/p&gt;
&lt;h2 id=&#34;iv-주의점&#34;&gt;IV. 주의점&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;여기서 조금 헤매였다. 필자는 &lt;code&gt;layouts-partials&lt;/code&gt; 폴더를 직접 만들고, &lt;code&gt;Mathjax&lt;/code&gt; 설정을 다시 하려고 시도했다. 그럴 필요가 없다. 왜?&lt;/li&gt;
&lt;li&gt;테마를 차용해서 사용 중이기 때문이다. 그래서 &lt;code&gt;config.toml&lt;/code&gt;에 사용한다고 지정까지 하지 않았나? 그러면, &lt;code&gt;themes-mainroad-layouts-partials&lt;/code&gt;에서 &lt;code&gt;math&lt;/code&gt;와 관련된 &lt;code&gt;html&lt;/code&gt; 파일을 찾아서 수정해야 한다. 다행히 &lt;code&gt;mathjax.html&lt;/code&gt;을 찾았다.&lt;/li&gt;
&lt;li&gt;당연히, 각자의 테마의 경로는 조금 다를 수 있다. 즉, 각 테마에 따라 다르게 적용되지만, 큰 흐름은 아래 해결법과 크게 다르지 않을 것 같다. (2020.4월 기준)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;v-mathjaxhtml-소스코드-수정&#34;&gt;V. mathjax.html 소스코드 수정&lt;/h2&gt;
&lt;p&gt;처음 파일을 열었을 때에는 아래와 같은 소스코드만 존재했다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;{{ if and .IsPage (eq (.Param &amp;#34;mathjax&amp;#34;) true) }}
&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{{ .Param &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mathjaxPath&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;default&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;https:&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;//&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;cdnjs&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;cloudflare&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;com&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ajax&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;libs&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mathjax&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;MathJax&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;js&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}}{{&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;with&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Param&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mathjaxConfig&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;default&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;TeX-AMS-MML_HTMLorMML&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}}?&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;config&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{{&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}}{{&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;end&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}}&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;async&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
{{ end }}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;음.. 기본 세팅이 위와 같이 되어 있었던 것이다. 위 코드 해석은 대충 감은 오지만, 일단 신경 쓰지 말자. 그리고, &lt;code&gt;Reference&lt;/code&gt;를 활용하여 필요한 부분만 가져온다. 그리고 적용하면 아래와 같다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;{{ if and .IsPage (eq (.Param &amp;#34;mathjax&amp;#34;) true) }}
&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{{ .Param &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mathjaxPath&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;default&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;https:&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;//&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;cdnjs&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;cloudflare&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;com&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ajax&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;libs&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mathjax&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;MathJax&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;js&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}}{{&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;with&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Param&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mathjaxConfig&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;default&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;TeX-AMS-MML_HTMLorMML&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}}?&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;config&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{{&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}}{{&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;end&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}}&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;async&lt;/span&gt;&amp;gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;MathJax&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Hub&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Config&lt;/span&gt;({
    &lt;span style=&#34;color:#a6e22e&#34;&gt;tex2jax&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
      &lt;span style=&#34;color:#a6e22e&#34;&gt;inlineMath&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; [[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$&amp;#39;&lt;/span&gt;], [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\\(&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\\)&amp;#39;&lt;/span&gt;]],
      &lt;span style=&#34;color:#a6e22e&#34;&gt;displayMath&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; [[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$$&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$$&amp;#39;&lt;/span&gt;]],
      &lt;span style=&#34;color:#a6e22e&#34;&gt;processEscapes&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,
      &lt;span style=&#34;color:#a6e22e&#34;&gt;processEnvironments&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,
      &lt;span style=&#34;color:#a6e22e&#34;&gt;skipTags&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;script&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;noscript&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;style&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;textarea&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;pre&amp;#39;&lt;/span&gt;],
      &lt;span style=&#34;color:#a6e22e&#34;&gt;TeX&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;equationNumbers&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;autoNumber&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AMS&amp;#34;&lt;/span&gt; },
           &lt;span style=&#34;color:#a6e22e&#34;&gt;extensions&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AMSmath.js&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AMSsymbols.js&amp;#34;&lt;/span&gt;] }
    }
    });
    &lt;span style=&#34;color:#a6e22e&#34;&gt;MathJax&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Hub&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Queue&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;() {
      &lt;span style=&#34;color:#75715e&#34;&gt;// Fix &amp;lt;code&amp;gt; tags after MathJax finishes running. This is a
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;      &lt;span style=&#34;color:#75715e&#34;&gt;// hack to overcome a shortcoming of Markdown. Discussion at
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;      &lt;span style=&#34;color:#75715e&#34;&gt;// https://github.com/mojombo/jekyll/issues/199
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;      &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;all&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;MathJax&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Hub&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;getAllJax&lt;/span&gt;(), &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;;
      &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;all&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) {
          &lt;span style=&#34;color:#a6e22e&#34;&gt;all&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;].&lt;span style=&#34;color:#a6e22e&#34;&gt;SourceElement&lt;/span&gt;().&lt;span style=&#34;color:#a6e22e&#34;&gt;parentNode&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;className&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; has-jax&amp;#39;&lt;/span&gt;;
      }
    });
  
    &lt;span style=&#34;color:#a6e22e&#34;&gt;MathJax&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Hub&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Config&lt;/span&gt;({
    &lt;span style=&#34;color:#75715e&#34;&gt;// Autonumbering by mathjax
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;TeX&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;equationNumbers&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;autoNumber&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AMS&amp;#34;&lt;/span&gt; } }
    });
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
{{ end }}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;vi-테스트&#34;&gt;VI. 테스트&lt;/h2&gt;
&lt;p&gt;인라인 코드를 적용해보자. $\nabla F(\mathbf{x}_{n})$ 뭔지 모르는 수학공식을 인터넷에서 찾아서 적용했더니, 보시다시피 잘 나온다. &lt;code&gt;$&lt;/code&gt;를 제거하면 &lt;code&gt;\nabla F(\mathbf{x}_{n})&lt;/code&gt; 이 코드다.&lt;/p&gt;
&lt;p&gt;도움이 되기를 바라며..&lt;/p&gt;
&lt;p&gt;원래 필자는 &lt;code&gt;tistory&lt;/code&gt;에 글을 올리고 있었는데, &lt;code&gt;hugo + github.io&lt;/code&gt; 블로그를 2020년 3월 중순 부터 만들어서 올리고 있다. 현재 강의 교재를 만드느라 정신이 없지만, 추후에 어떻게 블로그를 만드는지 한번 정리해서 올리도록 하겠다.&lt;/p&gt;
&lt;p&gt;오늘도 Happy To Learn and Code!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>